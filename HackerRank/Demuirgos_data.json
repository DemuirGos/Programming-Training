{"username":"Demuirgos","email":"bassossaymostb@outlook.com","school":"National School Of Applied Sciences","country":"Morocco","name":"Ayman Bouchareb","city":"TÃ©touan","website":"","short_bio":"I can see and in plus my sight is sharp like a snake drinking coffee ","job_title":"","local_language":"English","github_url":"https://github.com/DemuirGos","fb_uid":"723022848108957","gh_uid":"59487204","li_uid":"wlC93uIs4e","linkedin_url":"http://linkedin.com/in/ayman-bouchareb-511abb19a/","personal_first_name":"Ayman","personal_last_name":"Bouchareb","graduation_year":"2023","timezone":"Africa/Casablanca","us_work_eligibility":false,"is_professional":false,"jobs_headline":"Engineering Student","preferred_lang":"cpp","hackos":3113,"phone":{"country_code":"+212","number":"655183377"},"favorite_challenges":["Forming a Magic Square","Functional Palindromes","Circular Palindromes","Nimble Game","Maximize It!","Determining DNA Health","The Bomberman Game","Bowling Pins","Common Child","How Many Substrings?","C++ Variadics","Security - Message Space and Ciphertext Space","The Grid Search","Sherlock and Cost","Jim and the Jokes","The Power Sum","Megaprime Numbers","Breaking Sticks","Easy math","Basic Cryptanalysis","Keyword Transposition Cipher","String Construction ","Liars","Cloudy Day ","Digit Products","Sherlock and Permutations","TBS Problem","Walking the Approximate Longest Path","Kindergarten Adventures","The Chosen One","Maximum Subarray Sum","Task Scheduling ","Print Prime Numbers","Password Cracker","The Simplest Sum","String Function Calculation"],"challenges_created":["Queen Moves"],"other_emails":["deathangelwolfnight@gmail.com","deathangel1999@outlook.com"],"all_schools":[{"name":"National School Of Applied Sciences","program":"Computer Science \u0026 Engineering","degree":"MS"}],"snippets":[],"submissions":[{"contest":"OpenBracket Delaware - Online Trials","challenge":"Hogwarts Email Address","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cregex\u003e\nusing namespace std;\n\n\nint main() {\n    string s;cin \u003e\u003e s;\n    regex r(\"([a-z]{5}@hogwarts\\.com)\");\n    if(regex_match(s,r)) cout \u003c\u003c \"Yes\";\n    else cout \u003c\u003c \"No\";\n    return 0;\n}\n","score":0.956522,"language":"cpp14"},{"contest":"OpenBracket Delaware - Online Trials","challenge":"Hogwarts Email Address","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cregex\u003e\nusing namespace std;\n\n\nint main() {\n    string s;cin \u003e\u003e s;\n    regex r(\"([a-z]{5}@hogwarts[.]com)\");\n    if(regex_match(s,r)) cout \u003c\u003c \"Yes\";\n    else cout \u003c\u003c \"No\";\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"ProjectEuler+","challenge":"Project Euler #1: Multiples of 3 and 5","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long long n;cin \u003e\u003e n;\n        int t,f;\n        int c=int(n/15);\n        t=int(n/3)-c;\n        f=int(n/5)-c;\n        int result = 3*(t*(t-1)/2)+5*(f*(f-1)/20);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp14"},{"contest":"ProjectEuler+","challenge":"Project Euler #1: Multiples of 3 and 5","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long long n;cin \u003e\u003e n;\n        int t,f,c;\n        n--;\n        c=int(n/15);\n        t=int(n/3);\n        f=int(n/5);\n        int result = 3*(t*(t+1)/2)+5*(f*(f+1)/2)-15*(c*(c+1)/2);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.6,"language":"cpp14"},{"contest":"ProjectEuler+","challenge":"Project Euler #1: Multiples of 3 and 5","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long long n;cin \u003e\u003e n;\n        long t,f,c;\n        n--;\n        c=long(n/15);\n        t=long(n/3);\n        f=long(n/5);\n        long result = 3*(t*(t+1)/2)+5*(f*(f+1)/2)-15*(c*(c+1)/2);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Solve Me First","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint solveMeFirst(int a, int b) {\n // Hint: Type return a+b; below:\n  return a+b;\n}\n\nint main() {\n  int num1, num2;\n  int sum;\n  cin\u003e\u003enum1\u003e\u003enum2;\n  sum = solveMeFirst(num1,num2);\n  cout\u003c\u003csum;\n  return 0;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Simple Array Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the simpleArraySum function below.\n */\nint simpleArraySum(vector\u003cint\u003e ar) {\n    int sum=0;\n    for(auto x:ar)\n        sum+=x;\n    return sum;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(ar_count);\n\n    for (int ar_itr = 0; ar_itr \u003c ar_count; ar_itr++) {\n        int ar_item = stoi(ar_temp[ar_itr]);\n\n        ar[ar_itr] = ar_item;\n    }\n\n    int result = simpleArraySum(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the compareTriplets function below.\nvector\u003cint\u003e compareTriplets(vector\u003cint\u003e a, vector\u003cint\u003e b) {\n    vector\u003cint\u003e rslt = {0,0}\n    for(int i=0;i\u003c3;i++)\n        if(a[i]\u003cb[i]) \n            rslt[1]++;\n        else if(a[i]\u003eb[i])\n            rslt[0]++;\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    string b_temp_temp;\n    getline(cin, b_temp_temp);\n\n    vector\u003cstring\u003e b_temp = split(rtrim(b_temp_temp));\n\n    vector\u003cint\u003e b(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int b_item = stoi(b_temp[i]);\n\n        b[i] = b_item;\n    }\n\n    vector\u003cint\u003e result = compareTriplets(a, b);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the compareTriplets function below.\nvector\u003cint\u003e compareTriplets(vector\u003cint\u003e a, vector\u003cint\u003e b) {\n    vector\u003cint\u003e rslt = {0,0}\n    for(int i=0;i\u003c3;i++)\n    {    \n        if(a[i]\u003cb[i]) \n            rslt[1]++;\n        else if(a[i]\u003eb[i])\n            rslt[0]++;\n    }\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    string b_temp_temp;\n    getline(cin, b_temp_temp);\n\n    vector\u003cstring\u003e b_temp = split(rtrim(b_temp_temp));\n\n    vector\u003cint\u003e b(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int b_item = stoi(b_temp[i]);\n\n        b[i] = b_item;\n    }\n\n    vector\u003cint\u003e result = compareTriplets(a, b);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the compareTriplets function below.\nvector\u003cint\u003e compareTriplets(vector\u003cint\u003e a, vector\u003cint\u003e b) {\n    vector\u003cint\u003e rslt = {0,0};\n    for(int i=0;i\u003c3;i++)\n    {    \n        if(a[i]\u003cb[i]) \n            rslt[1]++;\n        else if(a[i]\u003eb[i])\n            rslt[0]++;\n    }\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    string b_temp_temp;\n    getline(cin, b_temp_temp);\n\n    vector\u003cstring\u003e b_temp = split(rtrim(b_temp_temp));\n\n    vector\u003cint\u003e b(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int b_item = stoi(b_temp[i]);\n\n        b[i] = b_item;\n    }\n\n    vector\u003cint\u003e result = compareTriplets(a, b);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the compareTriplets function below.\nvector\u003cint\u003e compareTriplets(vector\u003cint\u003e a, vector\u003cint\u003e b) {\n    vector\u003cint\u003e rslt = {0,0};\n    for(int i=0;i\u003c3;i++)\n    {    \n        if(a[i]\u003cb[i]) \n            rslt[1]++;\n        else if(a[i]\u003eb[i])\n            rslt[0]++;\n    }\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split(rtrim(a_temp_temp));\n\n    vector\u003cint\u003e a(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    string b_temp_temp;\n    getline(cin, b_temp_temp);\n\n    vector\u003cstring\u003e b_temp = split(rtrim(b_temp_temp));\n\n    vector\u003cint\u003e b(3);\n\n    for (int i = 0; i \u003c 3; i++) {\n        int b_item = stoi(b_temp[i]);\n\n        b[i] = b_item;\n    }\n\n    vector\u003cint\u003e result = compareTriplets(a, b);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Very Big Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the aVeryBigSum function below.\nlong long aVeryBigSum(vector\u003clong\u003e ar) {\n    long long rslt =0;\n    for(auto i:ar)\n        rslt+=i;\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003clong\u003e ar(ar_count);\n\n    for (int i = 0; i \u003c ar_count; i++) {\n        long ar_item = stol(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    long result = aVeryBigSum(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Very Big Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the aVeryBigSum function below.\nlong long aVeryBigSum(vector\u003clong\u003e ar) {\n    long long rslt =0;\n    for(auto i:ar)\n        rslt+=i;\n    return rslt;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003clong\u003e ar(ar_count);\n\n    for (int i = 0; i \u003c ar_count; i++) {\n        long ar_item = stol(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    long result = aVeryBigSum(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Diagonal Difference","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'diagonalDifference' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts 2D_INTEGER_ARRAY arr as parameter.\n */\n\nint diagonalDifference(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int d1,d2;\n    d1=d2=0;\n    int i,j;\n    for(int i =0;i\u003c3;i++)\n        d1+=arr[i][i];\n        d2+=arr[2-i][i];\n    i=d1\u003cd2?d2:d1;\n    j=d1\u003cd2?d1:d2;\n    return i-j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    vector\u003cvector\u003cint\u003e\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        arr[i].resize(n);\n\n        string arr_row_temp_temp;\n        getline(cin, arr_row_temp_temp);\n\n        vector\u003cstring\u003e arr_row_temp = split(rtrim(arr_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int arr_row_item = stoi(arr_row_temp[j]);\n\n            arr[i][j] = arr_row_item;\n        }\n    }\n\n    int result = diagonalDifference(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diagonal Difference","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'diagonalDifference' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts 2D_INTEGER_ARRAY arr as parameter.\n */\n\nint diagonalDifference(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int d1,d2;\n    d1=d2=0;\n    int sum;\n    for(int i =0;i\u003carr.size();i++)\n        d1+=arr[i][i];\n        d2+=arr[arr.size()-1-i][i];\n    sum=d1-d2;\n    sum\u003e0?return sum;return -sum;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    vector\u003cvector\u003cint\u003e\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        arr[i].resize(n);\n\n        string arr_row_temp_temp;\n        getline(cin, arr_row_temp_temp);\n\n        vector\u003cstring\u003e arr_row_temp = split(rtrim(arr_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int arr_row_item = stoi(arr_row_temp[j]);\n\n            arr[i][j] = arr_row_item;\n        }\n    }\n\n    int result = diagonalDifference(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diagonal Difference","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'diagonalDifference' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts 2D_INTEGER_ARRAY arr as parameter.\n */\n\nint diagonalDifference(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int d1,d2;\n    d1=d2=0;\n    int sum;\n    for(int i =0;i\u003carr.size();i++)\n     {   d1+=arr[i][i];\n        d2+=arr[arr.size()-1-i][i];\n     }\n    sum=d1-d2;\n    if(sum\u003c0)\n        return -sum;\n    return sum;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    vector\u003cvector\u003cint\u003e\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        arr[i].resize(n);\n\n        string arr_row_temp_temp;\n        getline(cin, arr_row_temp_temp);\n\n        vector\u003cstring\u003e arr_row_temp = split(rtrim(arr_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int arr_row_item = stoi(arr_row_temp[j]);\n\n            arr[i][j] = arr_row_item;\n        }\n    }\n\n    int result = diagonalDifference(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Diagonal Difference","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'diagonalDifference' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts 2D_INTEGER_ARRAY arr as parameter.\n */\n\nint diagonalDifference(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int d1,d2;\n    d1=d2=0;\n    int sum;\n    for(int i =0;i\u003carr.size();i++)\n     {   d1+=arr[i][i];\n        d2+=arr[arr.size()-1-i][i];\n     }\n    sum=d1-d2;\n    if(sum\u003c0)\n        return -sum;\n    return sum;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    vector\u003cvector\u003cint\u003e\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        arr[i].resize(n);\n\n        string arr_row_temp_temp;\n        getline(cin, arr_row_temp_temp);\n\n        vector\u003cstring\u003e arr_row_temp = split(rtrim(arr_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int arr_row_item = stoi(arr_row_temp[j]);\n\n            arr[i][j] = arr_row_item;\n        }\n    }\n\n    int result = diagonalDifference(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Plus Minus","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the plusMinus function below.\nvoid plusMinus(vector\u003cint\u003e arr) {\n    float puss,negg,zero;\n    puss=negg=zero=0;\n    for(auto x:arr)\n    {\n        if(x==0)\n            zero++;\n        else if(x\u003c0)\n            negg++;\n        else\n            puss++;\n    }\n    puss/=arr.size();\n    negg/=arr.size();\n    zero/=arr.size();\n    printf(\"%f \\n %f \\n %f \\n\",\u0026puss,\u0026negg,\u0026zero);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    plusMinus(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Plus Minus","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the plusMinus function below.\nvoid plusMinus(vector\u003cint\u003e arr) {\n    float puss,negg,zero;\n    puss=negg=zero=0;\n    for(auto x:arr)\n    {\n        if(x==0)\n            zero++;\n        else if(x\u003c0)\n            negg++;\n        else\n            puss++;\n    }\n    printf(\"%f \\n %f \\n %f \\n\",\u0026puss,\u0026negg,\u0026zero);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    plusMinus(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Plus Minus","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the plusMinus function below.\nvoid plusMinus(vector\u003cint\u003e arr) {\n    float puss,negg,zero;\n    puss=negg=zero=0;\n    for(auto x:arr)\n    {\n        if(x==0)\n            zero++;\n            else if(x\u003c0)\n            negg++;\n            else\n            puss++;\n    }\n    puss/=arr.size();\n    negg/=arr.size();\n    zero/=arr.size();\n    printf(\"%f \\n %f \\n %f \\n\",puss,negg,zero);\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    plusMinus(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Staircase","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the staircase function below.\nvoid staircase(int n) {\n    for(int i = 1;i\u003cn;i++)\n    {\n        for(int j=0;j\u003c=i;j++)\n        {\n            printf(\"#\");\n        }   \n        printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    staircase(n);\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Staircase","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the staircase function below.\nvoid staircase(int n) {\n    for(int i = 0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003c=i;j++)\n        {\n            printf(\"#\");\n        }   \n        if(i!=n-1) printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    staircase(n);\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Staircase","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n/*\n    *\n    * Prosen Ghosh\n    * American International University - Bangladesh (AIUB)\n    *\n*/\nint main() {\n    int n,sp,w = 1,k;\n    cin \u003e\u003e n;\n    k = n-1;\n    for(int i = 0; i \u003c n; i++){\n     sp = k;\n     for(int j = 0; j \u003c sp; j++)cout \u003c\u003c \" \";\n     for(int m = 0; m \u003c w; m++)cout \u003c\u003c \"#\";\n     cout \u003c\u003c endl;\n     k--;\n     w++;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Mini-Max Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the miniMaxSum function below.\nvoid miniMaxSum(vector\u003cint\u003e arr) {\n    long long m,M;\n    m=M=0;\n    vector\u003cint\u003e::iterator i;\n    sort(arr.begin(), arr.end());\n    for(int i=0;i\u003c4;i++)\n    {\n        m+=arr[i];\n        M+=arr[1+i];\n    }\n    cout \u003c\u003c m \u003c\u003c \" \" \u003c\u003c M;\n}\nint main()\n{\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(5);\n\n    for (int i = 0; i \u003c 5; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    miniMaxSum(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Mini-Max Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the miniMaxSum function below.\nvoid miniMaxSum(vector\u003cint\u003e arr) {\n    long long m,M;\n    m=M=0;\n    vector\u003cint\u003e::iterator i;\n    sort(arr.begin(), arr.end());\n    for(int i=0;i\u003c4;i++)\n    {\n        m+=arr[i];\n        M+=arr[1+i];\n    }\n    cout \u003c\u003c m \u003c\u003c \" \" \u003c\u003c M;\n}\nint main()\n{\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(5);\n\n    for (int i = 0; i \u003c 5; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    miniMaxSum(arr);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the birthdayCakeCandles function below.\nint birthdayCakeCandles(vector\u003cint\u003e ar) {\n    int count =0;\n    int max=ar[0];\n    for(int i=0;i\u003car.size();i++)\n    {\n        if(ar[i]==max) count++;\n        if(ar[i]\u003emax)\n        {\n            count=0;\n            max=ar[i];\n        }\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(ar_count);\n\n    for (int i = 0; i \u003c ar_count; i++) {\n        int ar_item = stoi(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    int result = birthdayCakeCandles(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.74025974026,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the birthdayCakeCandles function below.\nint birthdayCakeCandles(vector\u003cint\u003e ar) {\n    map\u003cint,int\u003e m;\n    for(int i=0;i\u003car.size();i++)\n    {\n        m[ar[i]]++;\n    }\n    map\u003cint,int\u003e::iterator i;\n    long long count=m[ar[0]];\n    for(auto i=m.begin();i!=m.end();i++)\n    {\n        if(i-\u003esecond \u003e count) count = i-\u003esecond;\n        //cout \u003c\u003c i-\u003esecond \u003c\u003c endl;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(ar_count);\n\n    for (int i = 0; i \u003c ar_count; i++) {\n        int ar_item = stoi(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    int result = birthdayCakeCandles(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Cake Candles","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the birthdayCakeCandles function below.\nint birthdayCakeCandles(vector\u003cint\u003e ar) {\n    /*map\u003cint,int\u003e m;\n    for(int i=0;i\u003car.size();i++)\n    {\n        m[ar[i]]++;\n    }\n    map\u003cint,int\u003e::iterator i;\n    long long count=m[ar[0]];\n    for(auto i=m.begin();i!=m.end();i++)\n    {\n        if(i-\u003esecond \u003e count) count = i-\u003esecond;\n        //cout \u003c\u003c i-\u003esecond \u003c\u003c endl;\n    }*/\n    vector\u003cint\u003e v;\n    v.push_back(ar[0]);\n    for(int i=1;i\u003car.size();i++)\n    {\n        if(ar[i]\u003ev[v.size()-1])\n        {\n            v.clear();\n            v.push_back(ar[i]);\n        }\n        else if(ar[i]==v[v.size()-1])\n        {\n            v.push_back(ar[i]);\n        }\n    }\n    int count = v.size();\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int ar_count;\n    cin \u003e\u003e ar_count;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(ar_count);\n\n    for (int i = 0; i \u003c ar_count; i++) {\n        int ar_item = stoi(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    int result = birthdayCakeCandles(ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         return s.substr(0,8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(s[1]=='2' \u0026\u0026 s[0]==1)\n         {\n             string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(s[1]=='2' \u0026\u0026 s[0]==1)\n         {\n            return s.substr(0,8);\n         }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(s[1]=='2' \u0026\u0026 s[0]==1)\n         {\n             string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,7);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,6);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,6);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,6);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,6);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,7);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    \n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,6);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,6);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(8);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    hour = stoi(s.substr(2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(8);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(8);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,8);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Time Conversion","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\n/*\n * Complete the timeConversion function below.\n */\nstring timeConversion(string s) {\n    int hour;\n    hour = stoi(s.substr(0,2));\n     if(s[8]=='P' ||s[8]=='p')\n     {\n        if(hour == 12)\n        {\n            return s.substr(0,8);\n        }\n        hour+=12;\n        string ss;\n        ss=to_string(hour);\n        ss+=s.substr(2,6);\n     return ss;\n     }\n     else \n     {\n         if(hour == 12)\n         {\n            string ss = \"00\";\n            ss+=s.substr(2,6);\n            return ss;\n         }\n         return s.substr(0,8);\n     }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = timeConversion(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Grading Students","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n/*\n * Complete the 'gradingStudents' function below.\n *\n * The function is expected to return an INTEGER_ARRAY.\n * The function accepts INTEGER_ARRAY grades as parameter.\n */\nint diff(int n)\n{\n    for(int i=0;i\u003c3;i++)\n    {\n        if((n+i)%5==0)\n            return i;\n    }\n    return -1;\n}\nvector\u003cint\u003e gradingStudents(vector\u003cint\u003e grades) {\n    vector\u003cint\u003e v;\n    v=grades;\n    for(int i=0;i\u003cgrades.size()-1;i++)\n    {\n        if(v[i]\u003e=38)\n        {\n            if(diff(v[i])\u003c3 \u0026\u0026 diff(v[i])\u003e0)\n                v[i]+=diff(v[i]);\n        }\n    }\n    return v;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string grades_count_temp;\n    getline(cin, grades_count_temp);\n\n    int grades_count = stoi(ltrim(rtrim(grades_count_temp)));\n\n    vector\u003cint\u003e grades(grades_count);\n\n    for (int i = 0; i \u003c grades_count; i++) {\n        string grades_item_temp;\n        getline(cin, grades_item_temp);\n\n        int grades_item = stoi(ltrim(rtrim(grades_item_temp)));\n\n        grades[i] = grades_item;\n    }\n\n    vector\u003cint\u003e result = gradingStudents(grades);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":0.909090909091,"language":"cpp"},{"contest":"Master","challenge":"Grading Students","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n/*\n * Complete the 'gradingStudents' function below.\n *\n * The function is expected to return an INTEGER_ARRAY.\n * The function accepts INTEGER_ARRAY grades as parameter.\n */\nint diff(int n)\n{\n    for(int i=0;i\u003c3;i++)\n    {\n        if((n+i)%5==0)\n            return i;\n    }\n    return -1;\n}\nvector\u003cint\u003e gradingStudents(vector\u003cint\u003e grades) {\n    vector\u003cint\u003e v;\n    v=grades;\n    for(int i=0;i\u003cgrades.size()-1;i++)\n    {\n        if(v[i]\u003e37)\n        {\n            if(diff(v[i])\u003c3 \u0026\u0026 diff(v[i])\u003e0)\n                v[i]+=diff(v[i]);\n        }\n    }\n    return v;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string grades_count_temp;\n    getline(cin, grades_count_temp);\n\n    int grades_count = stoi(ltrim(rtrim(grades_count_temp)));\n\n    vector\u003cint\u003e grades(grades_count);\n\n    for (int i = 0; i \u003c grades_count; i++) {\n        string grades_item_temp;\n        getline(cin, grades_item_temp);\n\n        int grades_item = stoi(ltrim(rtrim(grades_item_temp)));\n\n        grades[i] = grades_item;\n    }\n\n    vector\u003cint\u003e result = gradingStudents(grades);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":0.909090909091,"language":"cpp"},{"contest":"Master","challenge":"Grading Students","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n/*\n * Complete the 'gradingStudents' function below.\n *\n * The function is expected to return an INTEGER_ARRAY.\n * The function accepts INTEGER_ARRAY grades as parameter.\n */\nint diff(int n)\n{\n    for(int i=0;i\u003c3;i++)\n    {\n        if((n+i)%5==0)\n            return i;\n    }\n    return -1;\n}\nvector\u003cint\u003e gradingStudents(vector\u003cint\u003e grades) {\n    vector\u003cint\u003e v;\n    v=grades;\n    for(int i=0;i\u003cgrades.size();i++)\n    {\n        if(v[i]\u003e37)\n        {\n            if(diff(v[i])\u003c3 \u0026\u0026 diff(v[i])\u003e0)\n                v[i]+=diff(v[i]);\n        }\n    }\n    return v;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string grades_count_temp;\n    getline(cin, grades_count_temp);\n\n    int grades_count = stoi(ltrim(rtrim(grades_count_temp)));\n\n    vector\u003cint\u003e grades(grades_count);\n\n    for (int i = 0; i \u003c grades_count; i++) {\n        string grades_item_temp;\n        getline(cin, grades_item_temp);\n\n        int grades_item = stoi(ltrim(rtrim(grades_item_temp)));\n\n        grades[i] = grades_item;\n    }\n\n    vector\u003cint\u003e result = gradingStudents(grades);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Apple and Orange","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the countApplesAndOranges function below.\nvoid countApplesAndOranges(int s, int t, int a, int b, vector\u003cint\u003e apples, vector\u003cint\u003e oranges) {\n    int a_in_range=0;\n    int o_in_range=0;\n    for(int i=0;i\u003capples.size();i++)\n    {\n        if((apples[i]+a)\u003es \u0026\u0026 (apples[i]+a)\u003ct) a_in_range++;\n        if((oranges[i]+b)\u003es \u0026\u0026 (oranges[i]+b)\u003ct) o_in_range++;\n    }\n    cout \u003c\u003c a_in_range \u003c\u003c \"\\n\" \u003c\u003c o_in_range;\n}\n\nint main()\n{\n    string st_temp;\n    getline(cin, st_temp);\n\n    vector\u003cstring\u003e st = split_string(st_temp);\n\n    int s = stoi(st[0]);\n\n    int t = stoi(st[1]);\n\n    string ab_temp;\n    getline(cin, ab_temp);\n\n    vector\u003cstring\u003e ab = split_string(ab_temp);\n\n    int a = stoi(ab[0]);\n\n    int b = stoi(ab[1]);\n\n    string mn_temp;\n    getline(cin, mn_temp);\n\n    vector\u003cstring\u003e mn = split_string(mn_temp);\n\n    int m = stoi(mn[0]);\n\n    int n = stoi(mn[1]);\n\n    string apples_temp_temp;\n    getline(cin, apples_temp_temp);\n\n    vector\u003cstring\u003e apples_temp = split_string(apples_temp_temp);\n\n    vector\u003cint\u003e apples(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        int apples_item = stoi(apples_temp[i]);\n\n        apples[i] = apples_item;\n    }\n\n    string oranges_temp_temp;\n    getline(cin, oranges_temp_temp);\n\n    vector\u003cstring\u003e oranges_temp = split_string(oranges_temp_temp);\n\n    vector\u003cint\u003e oranges(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int oranges_item = stoi(oranges_temp[i]);\n\n        oranges[i] = oranges_item;\n    }\n\n    countApplesAndOranges(s, t, a, b, apples, oranges);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.090909090909,"language":"cpp"},{"contest":"Master","challenge":"Apple and Orange","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the countApplesAndOranges function below.\nvoid countApplesAndOranges(int s, int t, int a, int b, vector\u003cint\u003e apples, vector\u003cint\u003e oranges) {\n    int a_in_range=0;\n    int o_in_range=0;\n    for(int i=0;i\u003capples.size();i++)\n    {\n        if((apples[i]+a)\u003e=s \u0026\u0026 (apples[i]+a)\u003c=t) a_in_range++;\n        if((oranges[i]+b)\u003e=s \u0026\u0026 (oranges[i]+b)\u003c=t) o_in_range++;\n    }\n    cout \u003c\u003c a_in_range \u003c\u003c \"\\n\" \u003c\u003c o_in_range;\n}\n\nint main()\n{\n    string st_temp;\n    getline(cin, st_temp);\n\n    vector\u003cstring\u003e st = split_string(st_temp);\n\n    int s = stoi(st[0]);\n\n    int t = stoi(st[1]);\n\n    string ab_temp;\n    getline(cin, ab_temp);\n\n    vector\u003cstring\u003e ab = split_string(ab_temp);\n\n    int a = stoi(ab[0]);\n\n    int b = stoi(ab[1]);\n\n    string mn_temp;\n    getline(cin, mn_temp);\n\n    vector\u003cstring\u003e mn = split_string(mn_temp);\n\n    int m = stoi(mn[0]);\n\n    int n = stoi(mn[1]);\n\n    string apples_temp_temp;\n    getline(cin, apples_temp_temp);\n\n    vector\u003cstring\u003e apples_temp = split_string(apples_temp_temp);\n\n    vector\u003cint\u003e apples(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        int apples_item = stoi(apples_temp[i]);\n\n        apples[i] = apples_item;\n    }\n\n    string oranges_temp_temp;\n    getline(cin, oranges_temp_temp);\n\n    vector\u003cstring\u003e oranges_temp = split_string(oranges_temp_temp);\n\n    vector\u003cint\u003e oranges(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int oranges_item = stoi(oranges_temp[i]);\n\n        oranges[i] = oranges_item;\n    }\n\n    countApplesAndOranges(s, t, a, b, apples, oranges);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.454545454545,"language":"cpp"},{"contest":"Master","challenge":"Apple and Orange","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the countApplesAndOranges function below.\nvoid countApplesAndOranges(int s, int t, int a, int b, vector\u003cint\u003e apples, vector\u003cint\u003e oranges) {\n    int a_in_range=0;\n    int o_in_range=0;\n    for(int i=0;i\u003capples.size();i++)\n    {\n        if((apples[i]+a)\u003e=s \u0026\u0026 (apples[i]+a)\u003c=t) a_in_range++;\n        if((oranges[i]+b)\u003e=s \u0026\u0026 (oranges[i]+b)\u003c=t) o_in_range++;\n    }\n    cout \u003c\u003c a_in_range \u003c\u003c \"\\n\" \u003c\u003c o_in_range;\n}\n\nint main()\n{\n    string st_temp;\n    getline(cin, st_temp);\n\n    vector\u003cstring\u003e st = split_string(st_temp);\n\n    int s = stoi(st[0]);\n\n    int t = stoi(st[1]);\n\n    string ab_temp;\n    getline(cin, ab_temp);\n\n    vector\u003cstring\u003e ab = split_string(ab_temp);\n\n    int a = stoi(ab[0]);\n\n    int b = stoi(ab[1]);\n\n    string mn_temp;\n    getline(cin, mn_temp);\n\n    vector\u003cstring\u003e mn = split_string(mn_temp);\n\n    int m = stoi(mn[0]);\n\n    int n = stoi(mn[1]);\n\n    string apples_temp_temp;\n    getline(cin, apples_temp_temp);\n\n    vector\u003cstring\u003e apples_temp = split_string(apples_temp_temp);\n\n    vector\u003cint\u003e apples(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        int apples_item = stoi(apples_temp[i]);\n\n        apples[i] = apples_item;\n    }\n\n    string oranges_temp_temp;\n    getline(cin, oranges_temp_temp);\n\n    vector\u003cstring\u003e oranges_temp = split_string(oranges_temp_temp);\n\n    vector\u003cint\u003e oranges(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int oranges_item = stoi(oranges_temp[i]);\n\n        oranges[i] = oranges_item;\n    }\n\n    countApplesAndOranges(s, t, a, b, apples, oranges);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.454545454545,"language":"cpp"},{"contest":"Master","challenge":"Apple and Orange","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the countApplesAndOranges function below.\nvoid countApplesAndOranges(int s, int t, int a, int b, vector\u003cint\u003e apples, vector\u003cint\u003e oranges) {\n    int a_in_range=0;\n    int o_in_range=0;\n    /*for(int i=0;i\u003capples.size();i++)\n    {\n        if((apples[i]+a)\u003e=s \u0026\u0026 (apples[i]+a)\u003c=t) a_in_range++;\n        if((oranges[i]+b)\u003e=s \u0026\u0026 (oranges[i]+b)\u003c=t) o_in_range++;\n    }\n    cout \u003c\u003c a_in_range \u003c\u003c \"\\n\" \u003c\u003c o_in_range;*/\n    vector\u003cint\u003e temp;\n    temp=apples;\n    for(int i=0;i\u003capples.size();i++)\n    {\n        temp[i]+=a;\n    }\n    for(int i=0;i\u003ctemp.size();i++)\n    {\n        if(temp[i]\u003e=s \u0026\u0026 temp[i]\u003c=t) a_in_range++;\n    }\n    cout \u003c\u003c a_in_range \u003c\u003c \"\\n\";\n    temp=oranges;\n    for(int i=0;i\u003coranges.size();i++)\n    {\n        temp[i]+=b;\n    }\n    for(int i=0;i\u003ctemp.size();i++)\n    {\n        if(temp[i]\u003e=s \u0026\u0026 temp[i]\u003c=t) o_in_range++;\n    }\n    cout \u003c\u003c o_in_range;\n\n}\n\nint main()\n{\n    string st_temp;\n    getline(cin, st_temp);\n\n    vector\u003cstring\u003e st = split_string(st_temp);\n\n    int s = stoi(st[0]);\n\n    int t = stoi(st[1]);\n\n    string ab_temp;\n    getline(cin, ab_temp);\n\n    vector\u003cstring\u003e ab = split_string(ab_temp);\n\n    int a = stoi(ab[0]);\n\n    int b = stoi(ab[1]);\n\n    string mn_temp;\n    getline(cin, mn_temp);\n\n    vector\u003cstring\u003e mn = split_string(mn_temp);\n\n    int m = stoi(mn[0]);\n\n    int n = stoi(mn[1]);\n\n    string apples_temp_temp;\n    getline(cin, apples_temp_temp);\n\n    vector\u003cstring\u003e apples_temp = split_string(apples_temp_temp);\n\n    vector\u003cint\u003e apples(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        int apples_item = stoi(apples_temp[i]);\n\n        apples[i] = apples_item;\n    }\n\n    string oranges_temp_temp;\n    getline(cin, oranges_temp_temp);\n\n    vector\u003cstring\u003e oranges_temp = split_string(oranges_temp_temp);\n\n    vector\u003cint\u003e oranges(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int oranges_item = stoi(oranges_temp[i]);\n\n        oranges[i] = oranges_item;\n    }\n\n    countApplesAndOranges(s, t, a, b, apples, oranges);\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Kangaroo","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the kangaroo function below.\nstring kangaroo(int x1, int v1, int x2, int v2) {\n    if(v1==v2 \u0026\u0026 x1!=x2) return \"NO\";\n    int n;\n    n=(x1-x2)/(v2-v1);\n    if(n\u003c0) return \"NO\";\n    return \"YES\";\n\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string x1V1X2V2_temp;\n    getline(cin, x1V1X2V2_temp);\n\n    vector\u003cstring\u003e x1V1X2V2 = split_string(x1V1X2V2_temp);\n\n    int x1 = stoi(x1V1X2V2[0]);\n\n    int v1 = stoi(x1V1X2V2[1]);\n\n    int x2 = stoi(x1V1X2V2[2]);\n\n    int v2 = stoi(x1V1X2V2[3]);\n\n    string result = kangaroo(x1, v1, x2, v2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.648648648649,"language":"cpp"},{"contest":"Master","challenge":"Kangaroo","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the kangaroo function below.\nstring kangaroo(int x1, int v1, int x2, int v2) {\n    if(v1==v2 \u0026\u0026 x1!=x2) return \"NO\";\n    int n;\n    n=(x1-x2)/(v2-v1);\n    if(n\u003c=0) return \"NO\";\n    return \"YES\";\n\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string x1V1X2V2_temp;\n    getline(cin, x1V1X2V2_temp);\n\n    vector\u003cstring\u003e x1V1X2V2 = split_string(x1V1X2V2_temp);\n\n    int x1 = stoi(x1V1X2V2[0]);\n\n    int v1 = stoi(x1V1X2V2[1]);\n\n    int x2 = stoi(x1V1X2V2[2]);\n\n    int v2 = stoi(x1V1X2V2[3]);\n\n    string result = kangaroo(x1, v1, x2, v2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.810810810811,"language":"cpp"},{"contest":"Master","challenge":"Kangaroo","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the kangaroo function below.\nstring kangaroo(int x1, int v1, int x2, int v2) {\n    if(v1==v2 \u0026\u0026 x1!=x2) return \"NO\";\n    int n;\n    n=(x1-x2)/(v2-v1);\n    if(n\u003c=0) return \"NO\";\n    if((x1-x2)%(v2-v1)!=0) return \"NO\";\n    return \"YES\";\n\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string x1V1X2V2_temp;\n    getline(cin, x1V1X2V2_temp);\n\n    vector\u003cstring\u003e x1V1X2V2 = split_string(x1V1X2V2_temp);\n\n    int x1 = stoi(x1V1X2V2[0]);\n\n    int v1 = stoi(x1V1X2V2[1]);\n\n    int x2 = stoi(x1V1X2V2[2]);\n\n    int v2 = stoi(x1V1X2V2[3]);\n\n    string result = kangaroo(x1, v1, x2, v2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Breaking the Records","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the breakingRecords function below.\nvector\u003cint\u003e breakingRecords(vector\u003cint\u003e scores) {\n    int min,max;\n    min=max=scores[0];\n    vector\u003cint\u003e count={0,0};\n    for(int i=1;i\u003cscores.size();i++)\n    {\n        if(scores[i]\u003cmin) {count[1]++; min=scores[i];}\n        if(scores[i]\u003emax) {count[0]++; max=scores[i];}\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string scores_temp_temp;\n    getline(cin, scores_temp_temp);\n\n    vector\u003cstring\u003e scores_temp = split_string(scores_temp_temp);\n\n    vector\u003cint\u003e scores(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int scores_item = stoi(scores_temp[i]);\n\n        scores[i] = scores_item;\n    }\n\n    vector\u003cint\u003e result = breakingRecords(scores);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \" \";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Chocolate","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the birthday function below.\nint birthday(vector\u003cint\u003e s, int d, int m) {\n    int count=0;\n    int temp=0;\n    if(m\u003es.size()) return 0;\n    for(int j=0;j\u003cs.size()-m;j++)\n    {    \n        for(int i=0;i\u003cm;i++)\n        {\n            temp+=s[i];\n        }\n        if(temp==d)count++;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    string dm_temp;\n    getline(cin, dm_temp);\n\n    vector\u003cstring\u003e dm = split(rtrim(dm_temp));\n\n    int d = stoi(dm[0]);\n\n    int m = stoi(dm[1]);\n\n    int result = birthday(s, d, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Chocolate","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the birthday function below.\nint birthday(vector\u003cint\u003e s, int d, int m) {\n    int count=0;\n    int temp=0;\n    if(m\u003es.size()) return 0;\n    for(int j=0;j\u003cs.size()-m;j++)\n    {    \n        for(int i=0;i\u003cm;i++)\n        {\n            temp+=s[i];\n        }\n        if(temp==d)count++;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    string dm_temp;\n    getline(cin, dm_temp);\n\n    vector\u003cstring\u003e dm = split(rtrim(dm_temp));\n\n    int d = stoi(dm[0]);\n\n    int m = stoi(dm[1]);\n\n    int result = birthday(s, d, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Birthday Chocolate","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the birthday function below.\nint birthday(vector\u003cint\u003e s, int d, int m) {\n    if(m\u003es.size()) return 0;\n    int count=0;\n    int temp;\n    for(int j=0;j\u003cs.size()-m+1;j++)\n    {    \n        temp=0;\n        for(int i=j;i\u003cj+m;i++)\n        {\n            temp+=s[i];\n        }\n        if(temp==d)count++;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string n_temp;\n    getline(cin, n_temp);\n\n    int n = stoi(ltrim(rtrim(n_temp)));\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    string dm_temp;\n    getline(cin, dm_temp);\n\n    vector\u003cstring\u003e dm = split(rtrim(dm_temp));\n\n    int d = stoi(dm[0]);\n\n    int m = stoi(dm[1]);\n\n    int result = birthday(s, d, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Divisible Sum Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the divisibleSumPairs function below.\nint divisibleSumPairs(int n, int k, vector\u003cint\u003e ar) {\n    int count=0;\n    for(int i=0;i\u003cn;i++)\n        for(int j=i+1;j\u003cn;j++)\n            if((ar[i]+ar[j])%k==0) count++;\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int ar_item = stoi(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    int result = divisibleSumPairs(n, k, ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Migratory Birds","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the migratoryBirds function below.\nint migratoryBirds(vector\u003cint\u003e arr) {\n    map\u003cint,int\u003e birds;\n    for(int i=0;i\u003carr.size();i++)\n        birds[arr[i]]++;\n    int sight=birds[arr[0]];\n    int bird=arr[0];\n    map\u003cint,int\u003e::iterator it;\n    for(it=birds.begin();it!=birds.end();it++)\n    {   if(it-\u003esecond\u003esight)\n        {\n            sight=it-\u003esecond;\n            bird=it-\u003efirst;\n        }\n        if(it-\u003esecond==sight)\n        {\n            if(it-\u003efirst\u003cbird)\n            {\n                sight=it-\u003esecond;\n                bird=it-\u003efirst;\n            }\n        }\n    }\n    return bird;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string arr_count_temp;\n    getline(cin, arr_count_temp);\n\n    int arr_count = stoi(ltrim(rtrim(arr_count_temp)));\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split(rtrim(arr_temp_temp));\n\n    vector\u003cint\u003e arr(arr_count);\n\n    for (int i = 0; i \u003c arr_count; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = migratoryBirds(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Bon AppÃ©tit","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the bonAppetit function below.\nvoid bonAppetit(vector\u003cint\u003e bill, int k, int b) {\n    int sum=0;\n    for(int i=0;i\u003cbill.size();i++)\n    {\n        if(i==k) continue;\n        sum+=bill[i];\n    }\n    sum/=2;\n    if(sum == b) cout \u003c\u003c\"Bon Appetit\";\n    else cout \u003c\u003c  b-sum;\n\n}\n\nint main()\n{\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split(rtrim(nk_temp));\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string bill_temp_temp;\n    getline(cin, bill_temp_temp);\n\n    vector\u003cstring\u003e bill_temp = split(rtrim(bill_temp_temp));\n\n    vector\u003cint\u003e bill(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int bill_item = stoi(bill_temp[i]);\n\n        bill[i] = bill_item;\n    }\n\n    string b_temp;\n    getline(cin, b_temp);\n\n    int b = stoi(ltrim(rtrim(b_temp)));\n\n    bonAppetit(bill, k, b);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sock Merchant","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the sockMerchant function below.\nint sockMerchant(int n, vector\u003cint\u003e ar) {\n    int count=0;\n    map\u003cint,int\u003e m;\n    for(int i=0;i\u003car.size();i++)\n        m[ar[i]]++;\n    map\u003cint,int\u003e::iterator it;\n    for(it=m.begin();it!=m.end();it++)\n    {    \n        if(it-\u003esecond%2==0) count+=it-\u003esecond/2;\n        if(it-\u003esecond%2!=0 \u0026\u0026 it-\u003esecond\u003e2)count += (it-\u003esecond-(it-\u003esecond%2))/2;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string ar_temp_temp;\n    getline(cin, ar_temp_temp);\n\n    vector\u003cstring\u003e ar_temp = split_string(ar_temp_temp);\n\n    vector\u003cint\u003e ar(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int ar_item = stoi(ar_temp[i]);\n\n        ar[i] = ar_item;\n    }\n\n    int result = sockMerchant(n, ar);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Drawing Book ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the pageCount function below.\n */\nint pageCount(int n, int p) {\n    if(p%2==0)p--;\n    if(p\u003en/2) return (n-p)/2;\n    else return p/2;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = pageCount(n, p);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.68,"language":"cpp"},{"contest":"Master","challenge":"Drawing Book ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the pageCount function below.\n */\nint pageCount(int n, int p) {\n    if(p%2!=0)p--;\n    if(p\u003en/2) return (n-p)/2;\n    else return p/2;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int p;\n    cin \u003e\u003e p;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = pageCount(n, p);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Counting Valleys","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the countingValleys function below.\nint countingValleys(int n, string s) {\n    int step=0;\n    int prevstep=0;\n    int count=0;\n    for(int i=0;i\u003cs.size();i++)\n    {  \n        prevstep=step;\n        if(s[i]=='U') step++;\n        if(s[i]=='D') step--;\n        if(step==0 \u0026\u0026 prevstep==-1) count++;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string s;\n    getline(cin, s);\n\n    int result = countingValleys(n, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Electronics Shop","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the getMoneySpent function below.\n */\nint getMoneySpent(vector\u003cint\u003e keyboards, vector\u003cint\u003e drives, int b) {\n    int max=-1;\n    sort(drives.begin(),drives.end());\n    for(int i=0;i\u003ckeyboards.size();i++)\n    {\n        if(keyboards[i]+drives[0]\u003eb) continue;\n        for(int j=0;j\u003cdrives.size();j++)\n        {\n            if((keyboards[i]+drives[j])\u003c= b \u0026\u0026 (keyboards[i]+drives[j])\u003e= max) \n                max = keyboards[i]+drives[j];\n        }\n    }\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string bnm_temp;\n    getline(cin, bnm_temp);\n\n    vector\u003cstring\u003e bnm = split_string(bnm_temp);\n\n    int b = stoi(bnm[0]);\n\n    int n = stoi(bnm[1]);\n\n    int m = stoi(bnm[2]);\n\n    string keyboards_temp_temp;\n    getline(cin, keyboards_temp_temp);\n\n    vector\u003cstring\u003e keyboards_temp = split_string(keyboards_temp_temp);\n\n    vector\u003cint\u003e keyboards(n);\n\n    for (int keyboards_itr = 0; keyboards_itr \u003c n; keyboards_itr++) {\n        int keyboards_item = stoi(keyboards_temp[keyboards_itr]);\n\n        keyboards[keyboards_itr] = keyboards_item;\n    }\n\n    string drives_temp_temp;\n    getline(cin, drives_temp_temp);\n\n    vector\u003cstring\u003e drives_temp = split_string(drives_temp_temp);\n\n    vector\u003cint\u003e drives(m);\n\n    for (int drives_itr = 0; drives_itr \u003c m; drives_itr++) {\n        int drives_item = stoi(drives_temp[drives_itr]);\n\n        drives[drives_itr] = drives_item;\n    }\n\n    /*\n     * The maximum amount of money she can spend on a keyboard and USB drive, or -1 if she can't purchase both items\n     */\n\n    int moneySpent = getMoneySpent(keyboards, drives, b);\n\n    fout \u003c\u003c moneySpent \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Electronics Shop","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the getMoneySpent function below.\n */\nint getMoneySpent(vector\u003cint\u003e keyboards, vector\u003cint\u003e drives, int b) {\n    int max=-1;\n    sort(drives.begin(),drives.end());\n    for(int i=0;i\u003ckeyboards.size();i++)\n    {\n        if(keyboards[i]+drives[0]\u003eb) continue;\n        for(int j=0;j\u003cdrives.size();j++)\n        {\n            if((keyboards[i]+drives[j])\u003c= b \u0026\u0026 (keyboards[i]+drives[j])\u003e= max) \n                max = keyboards[i]+drives[j];\n        }\n    }\n    return max;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string bnm_temp;\n    getline(cin, bnm_temp);\n\n    vector\u003cstring\u003e bnm = split_string(bnm_temp);\n\n    int b = stoi(bnm[0]);\n\n    int n = stoi(bnm[1]);\n\n    int m = stoi(bnm[2]);\n\n    string keyboards_temp_temp;\n    getline(cin, keyboards_temp_temp);\n\n    vector\u003cstring\u003e keyboards_temp = split_string(keyboards_temp_temp);\n\n    vector\u003cint\u003e keyboards(n);\n\n    for (int keyboards_itr = 0; keyboards_itr \u003c n; keyboards_itr++) {\n        int keyboards_item = stoi(keyboards_temp[keyboards_itr]);\n\n        keyboards[keyboards_itr] = keyboards_item;\n    }\n\n    string drives_temp_temp;\n    getline(cin, drives_temp_temp);\n\n    vector\u003cstring\u003e drives_temp = split_string(drives_temp_temp);\n\n    vector\u003cint\u003e drives(m);\n\n    for (int drives_itr = 0; drives_itr \u003c m; drives_itr++) {\n        int drives_item = stoi(drives_temp[drives_itr]);\n\n        drives[drives_itr] = drives_item;\n    }\n\n    /*\n     * The maximum amount of money she can spend on a keyboard and USB drive, or -1 if she can't purchase both items\n     */\n\n    int moneySpent = getMoneySpent(keyboards, drives, b);\n\n    fout \u003c\u003c moneySpent \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Angry Professor","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the angryProfessor function below.\nstring angryProfessor(int k, vector\u003cint\u003e a) {\n    sort(a.begin(),a.end());\n    if(a[k]\u003c=0) return \"NO\";\n    return \"YES\";\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nk_temp;\n        getline(cin, nk_temp);\n\n        vector\u003cstring\u003e nk = split_string(nk_temp);\n\n        int n = stoi(nk[0]);\n\n        int k = stoi(nk[1]);\n\n        string a_temp_temp;\n        getline(cin, a_temp_temp);\n\n        vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n        vector\u003cint\u003e a(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int a_item = stoi(a_temp[i]);\n\n            a[i] = a_item;\n        }\n\n        string result = angryProfessor(k, a);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.818181818182,"language":"cpp"},{"contest":"Master","challenge":"Angry Professor","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the angryProfessor function below.\nstring angryProfessor(int k, vector\u003cint\u003e a) {\n    sort(a.begin(),a.end());\n    if(a[k-1]\u003c=0) return \"NO\";\n    return \"YES\";\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nk_temp;\n        getline(cin, nk_temp);\n\n        vector\u003cstring\u003e nk = split_string(nk_temp);\n\n        int n = stoi(nk[0]);\n\n        int k = stoi(nk[1]);\n\n        string a_temp_temp;\n        getline(cin, a_temp_temp);\n\n        vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n        vector\u003cint\u003e a(n);\n\n        for (int i = 0; i \u003c n; i++) {\n            int a_item = stoi(a_temp[i]);\n\n            a[i] = a_item;\n        }\n\n        string result = angryProfessor(k, a);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Days at the Movies","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n#include \u003ccmath\u003e\nvector\u003cstring\u003e split_string(string);\n\n// Complete the beautifulDays function below.\nint rever(int n)\n{\n    string s=to_string(n);\n    for(int i=0;i\u003cs.size()/2;i++)\n        swap(s[i],s[s.size()-i-1]);\n    return stoi(s);\n}\nvoid swap(char a,char b)\n{\n    char c=a;\n    a=b;\n    b=c;\n}\nint abs(int n)\n{   if(n\u003c0) return -n;\n    else return n;\n}\nint beautifulDays(int i, int j, int k) {\n    int count=0;\n    for(int n=i;n\u003c=j;n++)\n        if(abs(n-rever(n))%k==0) count++;\n\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string ijk_temp;\n    getline(cin, ijk_temp);\n\n    vector\u003cstring\u003e ijk = split_string(ijk_temp);\n\n    int i = stoi(ijk[0]);\n\n    int j = stoi(ijk[1]);\n\n    int k = stoi(ijk[2]);\n\n    int result = beautifulDays(i, j, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Viral Advertising","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the viralAdvertising function below.\nint viralAdvertising(int n,int k) {\n    int c=(int) (k/2);\n    if(n==1) return c;\n    else return c+viralAdvertising(n-1,3*c);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = viralAdvertising(n,5);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Viral Advertising","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the viralAdvertising function below.\nint viralAdvertising(int n,int k) {\n    int c=(int) (k/2);\n    if(n==1) return c;\n    else return c+viralAdvertising(n-1,3*c);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = viralAdvertising(n,5);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Viral Advertising","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the viralAdvertising function below.\nint viralAdvertising(int n,int k) {\n    int c=(int) (k/2);\n    if(n==1) return c;\n    else return c+viralAdvertising(n-1,3*c);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = viralAdvertising(n,5);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Viral Advertising","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the viralAdvertising function below.\nint viralAdvertisingrec(int n,int k) {\n    int c=(int) (k/2);\n    if(n==1) return c;\n    else return c+viralAdvertisingrec(n-1,3*c);\n}\nint viralAdvertisingit(int n,int k) {\n    int count=0;\n    while(n\u003e0)\n    {\n        count+=(int)(k/2);\n        k=3*(int)(k/2);\n        n--;\n    }\n    return count;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = viralAdvertisingit(n,5);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003cm) return m%n+s-1;\n    else return n%m+s;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) return m+s-1;\n    else return m%n+s-1;\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) \n    {\n        int c =(m+s-1);\n        if (c\u003en) return c%n;\n        return c;\n    }\n    else \n    {\n        int c = m%n+s-1;\n        if(c\u003en) return c%n;\n        return c;   \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) \n    {\n        int c =(m+s-1);\n        return c;\n    }\n    else \n    {\n        int c = m+s-1;\n        if(c\u003en) return c%n;\n        return c;   \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) \n    {\n        int c =(m+s-1);\n        return c;\n    }\n    else \n    {\n        int c = m%n+s-1;\n        if(c\u003en) return c%n;\n        return c;   \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) \n    {\n        int c =(m+s-1);\n        return c;\n    }\n    else \n    {\n        int c = m+s-1;\n        if(c\u003en) return c%n;\n        else \n        return c;   \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    if(n\u003em) \n    {\n        int c =(m+s-1);\n        return c;\n    }\n    else \n    {\n        int c = m+s-1;\n        if(c\u003en) return c%n;\n        else \n        return c;   \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    int c =(m+s-1);\n    if(n\u003ec) \n    {\n        return c;\n    }\n    else \n    {\n        return c%n;  \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    int c =(m+s-1);\n    if(n\u003ec) \n    {\n        return c;\n    }\n    else \n    {\n        if(c%n==0) return m%n+s-1;\n        return c%n;  \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp"},{"contest":"Master","challenge":"Save the Prisoner!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the saveThePrisoner function below.\nint saveThePrisoner(int n, int m, int s) {\n    int c =(m+s-1);\n    if(n\u003ec) \n    {\n        return c;\n    }\n    else \n    {\n        if(c%n==0) return n;\n        return c%n;  \n    }\n}\nint saveThePrisoner_t(int n, int m, int s) {\n    return 0;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string nms_temp;\n        getline(cin, nms_temp);\n\n        vector\u003cstring\u003e nms = split_string(nms_temp);\n\n        int n = stoi(nms[0]);\n\n        int m = stoi(nms[1]);\n\n        int s = stoi(nms[2]);\n\n        int result = saveThePrisoner(n, m, s);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Circular Array Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the circularArrayRotation function below.\nvector\u003cint\u003e circularArrayRotation(vector\u003cint\u003e a, int k, vector\u003cint\u003e queries) {\n    vector\u003cint\u003e v;\n    vector\u003cint\u003e q;\n    v=a;\n    for(int i=0;i\u003ca.size();i++)\n    {\n        int id=(i+k)%(a.size());\n        v[id]=a[i];\n    }\n    for(auto x:queries)\n        q.push_back(v[x]);\n    return q;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nkq_temp;\n    getline(cin, nkq_temp);\n\n    vector\u003cstring\u003e nkq = split_string(nkq_temp);\n\n    int n = stoi(nkq[0]);\n\n    int k = stoi(nkq[1]);\n\n    int q = stoi(nkq[2]);\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    vector\u003cint\u003e queries(q);\n\n    for (int i = 0; i \u003c q; i++) {\n        int queries_item;\n        cin \u003e\u003e queries_item;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        queries[i] = queries_item;\n    }\n\n    vector\u003cint\u003e result = circularArrayRotation(a, k, queries);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#include\u003calgorithm\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvector\u003cint\u003e checked(50,-1);\n// Complete the permutationEquation function below.\nint p_it(int i,vector\u003cint\u003e p)\n{\n    if(checked[i]\u003e=0) return checked[i];\n    for(int j=1;j\u003c=p.size();j++)\n        if(p[j-1]==i) \n        {\n            checked[i]=j;\n            return j;\n        }\n    return -1;\n}\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p) {\n    vector\u003cint\u003e v={};\n    for(int i=1;i\u003c=p.size();i++)\n    {\n        int c = p_it(i,p);\n        if(c\u003e=0) \n        {\n            int c2=p_it(c,p);\n            if(c2\u003e=0) v.push_back(c2);\n        }\n    }\n    return v;\n\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.9,"language":"cpp"},{"contest":"Master","challenge":"Sequence Equation","code":"#include \u003cbits/stdc++.h\u003e\n#include\u003calgorithm\u003e\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nvector\u003cint\u003e checked(51,-1);\n// Complete the permutationEquation function below.\nint p_it(int i,vector\u003cint\u003e p)\n{\n    if(checked[i]\u003e=0) return checked[i];\n    for(int j=1;j\u003c=p.size();j++)\n        if(p[j-1]==i) \n        {\n            checked[i]=j;\n            return j;\n        }\n    return -1;\n}\nvector\u003cint\u003e permutationEquation(vector\u003cint\u003e p) {\n    vector\u003cint\u003e v={};\n    for(int i=1;i\u003c=p.size();i++)\n    {\n        int c = p_it(i,p);\n        if(c\u003e=0) \n        {\n            int c2=p_it(c,p);\n            if(c2\u003e=0) v.push_back(c2);\n        }\n    }\n    return v;\n\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string p_temp_temp;\n    getline(cin, p_temp_temp);\n\n    vector\u003cstring\u003e p_temp = split_string(p_temp_temp);\n\n    vector\u003cint\u003e p(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int p_item = stoi(p_temp[i]);\n\n        p[i] = p_item;\n    }\n\n    vector\u003cint\u003e result = permutationEquation(p);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds: Revisited","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c, int k) {\n    int e=100;\n    int i=0;\n    do\n    {\n        e-=1;\n        if(c[i]==1) e-=2;\n        i=(i+k)%c.size();\n    }\n    while((i+k)%c.size()!=k);\n    return e;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds: Revisited","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c, int k) {\n    int e=100;\n    int i=0;\n    do\n    {\n        e-=1;\n        if(c[i]==1) e-=2;\n        i=(i+k)%c.size();\n    }\n    while(i!=0);\n    return e;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Find Digits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the findDigits function below.\nint main()\n{\n    int n;\n    vector\u003cstring\u003e input;\n    cin \u003e\u003e n;\n    while(n\u003e0)\n    {\n        string inpt;\n        cin \u003e\u003e inpt;\n        input.push_back(inpt);\n        n--;\n    }\n    for(string s:input)\n    {\n        int checked[]={0,0,0,0,0,0,0,0,0,0,0};\n        map\u003cint,int\u003e m;\n        for(char i_s:s)\n        {\n            int i = i_s - '0';\n            if(checked[i]==1) continue;\n            if(i==0) continue;\n            for(char j_s:s)\n            {\n                int j=j_s - '0';\n                if(j==0) continue;\n                if(j%i==0) \n                 {\n                    m[i]++;\n                }\n            }\n            checked[i]=1;\n        }\n        int max=0;\n        map\u003cint,int\u003e::iterator it;\n        for(it=m.begin();it!=m.end();it++)\n            if(it-\u003esecond\u003e=max) max=it-\u003esecond;\n        cout\u003c\u003c max \u003c\u003c endl;\n    }\n\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Find Digits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the findDigits function below.\nint main()\n{\n    int n;\n    vector\u003cstring\u003e input;\n    cin \u003e\u003e n;\n    while(n\u003e0)\n    {\n        string inpt;\n        cin \u003e\u003e inpt;\n        input.push_back(inpt);\n        n--;\n    }\n    for(string s:input)\n    {\n        int s2i=stoi(s);\n        int m=0;\n        for(char i_s:s)\n        {\n            int i=i_s-'0';\n            if(i==0) continue;\n            if(s2i%i==0) m++;\n        }\n        cout\u003c\u003c m \u003c\u003c endl;\n\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Extra Long Factorials","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the extraLongFactorials function below.\ndef extraLongFactorials(n):\n    if n==1:\n        return 1\n    return n*extraLongFactorials(n-1)\n\nn= int(input())\nprint(extraLongFactorials(n))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    //for(char i:s) s_v.push_back(i);for(char i:t) t_v.push_back(i);\n    //if(t==s.substr(0,t.size()-1)) min=s.size()+t.size()-2;\n    int it=find_substr(s,t);\n    min = s.size()+t.size()-2*it-2;\n    if(k== min) return \"Yes\";\n    else \n    {\n        if((k-min)%2==0) return \"Yes\";\n        if(k\u003es.size()+t.size()-2) return \"Yes\";\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.636363636364,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    //for(char i:s) s_v.push_back(i);for(char i:t) t_v.push_back(i);\n    //if(t==s.substr(0,t.size()-1)) min=s.size()+t.size()-2;\n    int it=find_substr(s,t);\n    min = s.size()+t.size()-2*it-2;\n    if(k== min) return \"Yes\";\n    else \n    {\n        if((k-min)%2==0) return \"Yes\";\n        if(k\u003es.size()+t.size()) return \"Yes\";\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.818181818182,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    //for(char i:s) s_v.push_back(i);for(char i:t) t_v.push_back(i);\n    //if(t==s.substr(0,t.size()-1)) min=s.size()+t.size()-2;\n    int it=find_substr(s,t);\n    min = s.size()+t.size()-2*it-2;\n    if(k== min) return \"Yes\";\n    else \n    {\n        if((k-min)%2==0) return \"Yes\";\n        if(k\u003es.size()+t.size()) return \"Yes\";\n        if(it==0 \u0026\u0026 k\u003emin-1) return \"No\";\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.818181818182,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    //for(char i:s) s_v.push_back(i);for(char i:t) t_v.push_back(i);\n    //if(t==s.substr(0,t.size()-1)) min=s.size()+t.size()-2;\n    int it=find_substr(s,t);\n    min = s.size()+t.size()-2*it-2;\n    if(k== min) return \"Yes\";\n    else \n    {\n        if(k\u003cmin) return \"No\";\n        if((k-min)%2==0) return \"Yes\";\n        if(k\u003es.size()+t.size()) return \"Yes\";\n        if(it==0 \u0026\u0026 k\u003emin-1) return \"No\";\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.909090909091,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    //for(char i:s) s_v.push_back(i);for(char i:t) t_v.push_back(i);\n    //if(t==s.substr(0,t.size()-1)) min=s.size()+t.size()-2;\n    int it=find_substr(s,t);\n    min = s.size()+t.size()-2*it;//-2\n    if(k== min) return \"Yes\";\n    else \n    {\n        if(k\u003cmin) return \"No\";\n        if((k-min)%2==0) return \"Yes\";\n        if(k\u003es.size()+t.size()) return \"Yes\";\n        if(it==0 \u0026\u0026 k\u003emin-1) return \"No\";\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Append and Delete","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the appendAndDelete function below.\nint find_substr(string s,string t)\n{\n    int it=0;\n    int min=s.size()\u003ct.size()?s.size():t.size();\n    for(int i=0;i\u003cmin;i++)\n    if(s[i]==t[i]) it++;\n    else return it;\n    return it;\n}\n\nstring appendAndDelete(string s, string t, int k) {\n    vector\u003cchar\u003e s_v,t_v;\n    int min;\n    min = s.size()+t.size()-2*find_substr(s,t);//-2\n    if(k\u003e= min \u0026\u0026 ( k\u003es.size()+t.size() || (k-min)%2==0)) return \"Yes\";\n    else \n    {\n        return \"No\";\n    }\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string t;\n    getline(cin, t);\n\n    int k;\n    cin \u003e\u003e k;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string result = appendAndDelete(s, t, k);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the squares function below.\nint squares(int a, int b) {\n\n    return (int)sqrt(b)-(int)sqrt(a-1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string ab_temp;\n        getline(cin, ab_temp);\n\n        vector\u003cstring\u003e ab = split_string(ab_temp);\n\n        int a = stoi(ab[0]);\n\n        int b = stoi(ab[1]);\n\n        int result = squares(a, b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the squares function below.\nint squares(int a, int b) {\n\n    return (int)sqrt(b)-(int)sqrt(a-1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string ab_temp;\n        getline(cin, ab_temp);\n\n        vector\u003cstring\u003e ab = split_string(ab_temp);\n\n        int a = stoi(ab[0]);\n\n        int b = stoi(ab[1]);\n\n        int result = squares(a, b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Squares","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the squares function below.\nint squares(int a, int b) {\n\n    return (int)sqrt(b)-(int)sqrt(a-1);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string ab_temp;\n        getline(cin, ab_temp);\n\n        vector\u003cstring\u003e ab = split_string(ab_temp);\n\n        int a = stoi(ab[0]);\n\n        int b = stoi(ab[1]);\n\n        int result = squares(a, b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    if(m1\u003em2) return (m1-m2)*500;\n    if(d1\u003ed2) return (d1-d2)*15;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.8125,"language":"cpp"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    if(y1\u003c=y2 \u0026\u0026 m1\u003em2) return (m1-m2)*500;\n    if(y1\u003c=y2 \u0026\u0026 m1\u003c=m2 \u0026\u0026 d1\u003ed2) return (d1-d2)*15;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.8125,"language":"cpp"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    else\n    {\n        if(m1\u003em2) return (m1-m2)*500;\n        else if(m1==m2)\n        {\n            if(d1\u003ed2) return (d1-d2)*15;\n            return 0;\n        } \n    }\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.875,"language":"cpp"},{"contest":"Master","challenge":"Library Fine","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the libraryFine function below.\nint libraryFine(int d1, int m1, int y1, int d2, int m2, int y2) {\n    if(y1\u003ey2) return 10000;\n    else if(y1==y2)\n    {\n        if(m1\u003em2) return (m1-m2)*500;\n        else if(m1==m2)\n        {\n            if(d1\u003ed2) return (d1-d2)*15;\n            return 0;\n        } \n    }\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string d1M1Y1_temp;\n    getline(cin, d1M1Y1_temp);\n\n    vector\u003cstring\u003e d1M1Y1 = split_string(d1M1Y1_temp);\n\n    int d1 = stoi(d1M1Y1[0]);\n\n    int m1 = stoi(d1M1Y1[1]);\n\n    int y1 = stoi(d1M1Y1[2]);\n\n    string d2M2Y2_temp;\n    getline(cin, d2M2Y2_temp);\n\n    vector\u003cstring\u003e d2M2Y2 = split_string(d2M2Y2_temp);\n\n    int d2 = stoi(d2M2Y2[0]);\n\n    int m2 = stoi(d2M2Y2[1]);\n\n    int y2 = stoi(d2M2Y2[2]);\n\n    int result = libraryFine(d1, m1, y1, d2, m2, y2);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Cut the sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the cutTheSticks function below.\nvector\u003cint\u003e cutTheSticks(vector\u003cint\u003e arr) {\n    vector\u003cint\u003e result;\n    int min;\n    sort(arr.begin(),arr.end(),greater\u003cint\u003e());\n    result.push_back(arr.size());\n    while(arr.size()\u003e1)\n    {\n        for(int i=0;i\u003carr.size();i++)\n        {\n            if(arr[i]==arr[arr.size()-1]) {arr.pop_back();i--;continue;}\n            arr[i]-=arr[arr.size()-1];\n        }\n        result.push_back(arr.size());\n    }\n    return result;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    vector\u003cint\u003e result = cutTheSticks(arr);\n\n    for (int i = 0; i \u003c result.size(); i++) {\n        fout \u003c\u003c result[i];\n\n        if (i != result.size() - 1) {\n            fout \u003c\u003c \"\\n\";\n        }\n    }\n\n    fout \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.625,"language":"cpp"},{"contest":"Master","challenge":"Cut the sticks","code":"#include \u003ciostream\u003e\n#include\u003cvector\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main()\n{\n    vector\u003cint\u003e arr;\n    int n;\n    scanf(\"%d\",\u0026n);\n    while(n\u003e0)\n    {\n     int i;\n     scanf(\"%d\",\u0026i);\n     arr.push_back(i);\n     n--;\n    }\n    sort(arr.begin(),arr.end(),greater\u003cint\u003e());\n    while(arr.size()\u003e=1)\n    {\n        cout \u003c\u003c arr.size()\u003c\u003c endl;\n        for(int i=0;i\u003carr.size();i++)\n        {\n            if(arr[i]==arr[arr.size()-1]) {arr.pop_back();i--;continue;}\n            arr[i]-=arr[arr.size()-1];\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    for(int i=0;i\u003cs.size();i++) s[i]%=k;\n    vector\u003cint\u003e sum={0,0};\n    for(int i=1;i\u003cs.size();i++)\n    {\n        sum[0]+=s[i];sum[1]+=s[i-1];\n    }\n    if(sum[0]%k==0 \u0026\u0026 sum[1]%k==0)\n    {\n        vector\u003cint\u003e t;\n        t=s;\n        s.pop_back();\n        swap(t[0],t[t.size()-1]);\n        t.pop_back();\n        return max(nonDivisibleSubset(k,s),nonDivisibleSubset(k,t));\n    }\n    return s.size()-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    for(int i=0;i\u003c=(int)result.size()/2;i++) count+=max(result[i],result[(k-i)%k]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.4,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=0;i\u003c=(int)(k-1)/2;i++) count+=max(result[i],result[(k-i)%k]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.533333333333,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=0;i\u003c=(int)(k-1)/2;i++) count+=max(result[i],result[k-i]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.466666666667,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=0;i\u003c=(int)(k-1)/2;i++) count+=max(result[i],result[k-i]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.466666666667,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=0;i\u003c=(int)(k-1)/2;i++) count+=max(result[i],result[(k-i)%k]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.533333333333,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=1;i\u003c=(int)(k-1)/2;i++) count+=max(result[i],result[(k-i)%k]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.466666666667,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result.size()==1) return 1;\n    for(int i=0;i\u003c=(int)(k)/2;i++) count+=max(result[i],result[(k-i)%k]);\n    return count;\n    //return max(5,4);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.466666666667,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result[0]\u003e0) count++;\n    for(int i=1;i\u003c=k/2;i++) \n    {\n        if(k%2==0 \u0026\u0026 i==k/2 \u0026\u0026 result[i]\u003e0) {count++;continue;}\n        count+=max(result[i],result[(k-i)]);\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Non-Divisible Subset","code":"#include \u003cbits/stdc++.h\u003e\n#define max(i,j) i\u003cj?j:i\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'nonDivisibleSubset' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER k\n *  2. INTEGER_ARRAY s\n */\n\nint nonDivisibleSubset(int k, vector\u003cint\u003e s) {\n    vector\u003cint\u003e result(k,0);\n    int count=0;\n    for(int i:s) result[i%k]++;\n    if(result[0]) count++;\n    for(int i=1;i\u003c=k/2;i++) \n    {\n        if(k%2==0 \u0026\u0026 i==k/2 \u0026\u0026 result[i]) {count++;continue;}\n        count+=max(result[i],result[(k-i)]);\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string first_multiple_input_temp;\n    getline(cin, first_multiple_input_temp);\n\n    vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n    int n = stoi(first_multiple_input[0]);\n\n    int k = stoi(first_multiple_input[1]);\n\n    string s_temp_temp;\n    getline(cin, s_temp_temp);\n\n    vector\u003cstring\u003e s_temp = split(rtrim(s_temp_temp));\n\n    vector\u003cint\u003e s(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int s_item = stoi(s_temp[i]);\n\n        s[i] = s_item;\n    }\n\n    int result = nonDivisibleSubset(k, s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Repeated String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long count_a(string s,long k)\n{\n    long long a=0;\n    for(long long i=0;i\u003ck;i++) if(s[i]=='a') a++;\n    return a;\n}\n// Complete the repeatedString function below.\nlong long repeatedString(string s, long n) {\n    long long count=0;\n    count = (long long)(n/s.size())*count_a(s,s.size());\n    count+= count_a(s,n%s.size());\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    long n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    long result = repeatedString(s, n);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    for(;i\u003cc.size()/2;i+=2)\n        if(c[i]==0) i--;\n    return i;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.285714285714,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    for(;i\u003cc.size();i+=2)\n        if(c[i]==0) i--;\n    return (int)(i+1)/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    for(;i\u003cc.size();i+=2)\n    {   if(c[i]==0){i--;}\n        if(i+2\u003ec.size() \u0026\u0026 i\u003cc.size()) i++;\n    }\n    return (int)(i+1)/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    return (c.size()+1)/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    for(;i\u003cc.size();i+=2)\n    {   if(c[i]==0){i--;}\n        if(i+2\u003ec.size() \u0026\u0026 i\u003cc.size()) {i++;break;}\n    }\n    return (int)(i+1)/2;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    int j=0;\n    for(;i\u003cc.size();)\n    {   \n        cout \u003c\u003c i \u003c\u003c \" \";\n        if(i+2\u003ec.size()) break;\n        if(c[i+2]==1 || i+2==c.size()){i++;j++;continue;}\n        i+=2;j++;\n    }\n    cout \u003c\u003c i \u003c\u003c endl;\n    return j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    int j=0;\n    for(;i+2\u003cc.size();)\n    {   \n        cout \u003c\u003c i \u003c\u003c \" \";\n        if(c[i+2]==1 || i+2==c.size()){i++;j++;continue;}\n        i+=2;j++;\n    }\n    cout \u003c\u003c i \u003c\u003c endl;\n    return j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    int j=0;\n    for(;i+2\u003cc.size();)\n    {   \n        cout \u003c\u003c i \u003c\u003c \" \";\n        if(i+2\u003ec.size()) break;\n        if(c[i+2]==1 || i+2==c.size()){i++;j++;continue;}\n        i+=2;j++;\n    }\n    cout \u003c\u003c i \u003c\u003c endl;\n    return j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Jumping on the Clouds","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the jumpingOnClouds function below.\nint jumpingOnClouds(vector\u003cint\u003e c) {\n    int i=0;\n    int j=0;\n    for(;i\u003cc.size();)\n    {   \n        cout \u003c\u003c i \u003c\u003c \" \";\n        if(i+2\u003ec.size()) break;\n        if(c[i+2]==1 || i+2==c.size()){i++;j++;continue;}\n        i+=2;j++;\n    }\n    cout \u003c\u003c i \u003c\u003c endl;\n    return j;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string c_temp_temp;\n    getline(cin, c_temp_temp);\n\n    vector\u003cstring\u003e c_temp = split_string(c_temp_temp);\n\n    vector\u003cint\u003e c(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int c_item = stoi(c_temp[i]);\n\n        c[i] = c_item;\n    }\n\n    int result = jumpingOnClouds(c);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Equalize the Array","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nint count_rep(vector\u003cint\u003e arr)\n{\n    map\u003cint,int\u003e m;map\u003cint,int\u003e::iterator it;int M=0;\n    for(int i=0;i\u003carr.size();i++)\n    {\n        m[arr[i]]++;\n    }\n    for(it=m.begin();it!=m.end();it++)\n    {\n        M=max(M,it-\u003esecond);\n    }\n    return M;\n}\n// Complete the equalizeArray function below.\nint equalizeArray(vector\u003cint\u003e arr) {\n    return arr.size()-count_rep(arr);\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = equalizeArray(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    vector\u003cvector\u003cint\u003e\u003e v_obs;\n    int count_neg=0;\n    if(!obstacles.empty() || k!=0)\n        for(auto v:obstacles)\n        {\n            /*if(r_q-v[0]==c_q-v[1]) count_neg+=min(v[0],v[1])+1;\n            //v_obs.push_back(v);\n            if(r_q+v[0]==c_q-v[1]) count_neg+=min(c_q-v[1],n-v[0])+1;\n            //v_obs.push_back(v);\n            if(r_q+v[0]==c_q+v[1]) count_neg+=min(n-v[1],n-v[0])+1;\n            //v_obs.push_back(v);\n            if(r_q-v[0]==c_q+v[1]) count_neg+=min(n-v[1],r_q-v[0])+1;*/\n            if(r_q-v[0]==c_q-v[1]) count_neg+=min(v[0],v[1]);\n            if(r_q-v[0]==v[1]-c_q) count_neg+=min(c_q-v[1],n-v[0])+1;\n            if(v[0]-r_q==v[1]-c_q) count_neg+=min(n-v[1],n-v[0])+1;\n            if(v[0]-r_q==c_q-v[1]) count_neg+=min(n-v[1],r_q-v[0])+1;\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) count_neg+=v[1];\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) count_neg+=n-v[1];\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) count_neg+=v[0];\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) count_neg+=n-v[0];\n        }\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003csqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return false;\n    return true;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    vector\u003cvector\u003cint\u003e\u003e v_obs;vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    int count_neg=0;\n    if(!obstacles.empty() || k!=0)\n        for(auto v:obstacles)\n        {\n            if(r_q-v[0]==c_q-v[1]) //0\n            {\n                if(!realms[0].empty())\n                {\n                    if(is_closer(realms[0],v,r_q,c_q))\n                    { count_neg+=v[0]-realms[0][0]; realms[0]=v;}\n                }\n                count_neg+=min(v[0],v[1]);\n            }\n            if(r_q-v[0]==v[1]-c_q) \n            {\n                if(!realms[1].empty())\n                {\n                    if(is_closer(realms[1],v,r_q,c_q))\n                    { count_neg+=realms[1][0]-v[0]; realms[1]=v;}\n                }\n                count_neg+=min(c_q-v[1],n-v[0])+1;//1\n            }\n            if(v[0]-r_q==v[1]-c_q) \n            {\n                if(!realms[2].empty())\n                {\n                    if(is_closer(realms[2],v,r_q,c_q))\n                    { count_neg+=realms[2][0]-v[0]; realms[2]=v;}\n                }\n                count_neg+=min(n-v[1],n-v[0])+1;//2\n            }\n            if(v[0]-r_q==c_q-v[1]) \n            {\n                if(!realms[3].empty())\n                {\n                    if(is_closer(realms[3],v,r_q,c_q))\n                    { count_neg+=realms[3][0]-v[0]; realms[3]=v;}\n                }\n                count_neg+=min(n-v[1],r_q-v[0])+1;//3\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) count_neg+=v[1];//4\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) count_neg+=n-v[1];//5\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) count_neg+=v[0];//6\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) count_neg+=n-v[0];//7\n        }\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.146341463415,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003csqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return false;\n    return true;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    vector\u003cvector\u003cint\u003e\u003e v_obs;vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    int count_neg=0;\n    if(!obstacles.empty() || k!=0)\n        for(auto v:obstacles)\n        {\n            if(r_q-v[0]==c_q-v[1]) //0\n            {\n                if(!realms[0].empty())\n                {\n                    if(is_closer(realms[0],v,r_q,c_q))\n                    { count_neg+=v[0]-realms[0][0]; realms[0]=v;continue;}\n                }\n                count_neg+=min(v[0],v[1]);realms[0]=v;continue;\n            }\n            if(r_q-v[0]==v[1]-c_q) \n            {\n                if(!realms[1].empty())\n                {\n                    if(is_closer(realms[1],v,r_q,c_q))\n                    { count_neg+=realms[1][0]-v[0]; realms[1]=v;continue;}\n                }\n                count_neg+=min(c_q-v[1],n-v[0])+1;realms[1]=v;continue;\n            }\n            if(v[0]-r_q==v[1]-c_q) \n            {\n                if(!realms[2].empty())\n                {\n                    if(is_closer(realms[2],v,r_q,c_q))\n                    { count_neg+=realms[2][0]-v[0]; realms[2]=v;continue;}\n                }\n                count_neg+=min(n-v[1],n-v[0])+1;realms[2]=v;continue;\n            }\n            if(v[0]-r_q==c_q-v[1]) \n            {\n                if(!realms[3].empty())\n                {\n                    if(is_closer(realms[3],v,r_q,c_q))\n                    { count_neg+=realms[3][0]-v[0]; realms[3]=v;continue;}\n                }\n                count_neg+=min(n-v[1],r_q-v[0])+1;realms[3]=v;continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                if(!realms[4].empty())\n                {\n                    if(is_closer(realms[4],v,r_q,c_q))\n                    { count_neg+=v[1]-realms[4][1]; realms[4]=v;continue;}\n                }\n                count_neg+=v[1];realms[4]=v;continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                if(!realms[5].empty())\n                {\n                    if(is_closer(realms[5],v,r_q,c_q))\n                    { count_neg+=v[1]-realms[5][1]; realms[5]=v;continue;}\n                }\n                count_neg+=n-v[1];realms[5]=v;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                if(!realms[6].empty())\n                {\n                    if(is_closer(realms[6],v,r_q,c_q))\n                    { count_neg+=v[1]-realms[6][1]; realms[6]=v;continue;}\n                }\n                count_neg+=v[0];realms[6]=v;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                if(!realms[7].empty())\n                {\n                    if(is_closer(realms[8],v,r_q,c_q))\n                    { count_neg+=v[1]-realms[7][1]; realms[7]=v;continue;}\n                }\n                count_neg+=n-v[0];realms[7]=v;continue;\n            }\n        }\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.207317073171,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003csqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return false;\n    return true;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0])+1;continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1],v[0])+1;continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0];continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.268292682927,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0])+1;continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1],v[0])+1;continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.390243902439,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.69512195122,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include\u003ccmath\u003e\nusing namespace std;\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x)\u003e(obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    return total-count_neg;\n}\n\nint main()\n{\n    int n;int k;cin \u003e\u003e n  \u003e\u003e k; int q_y ;int q_x; cin \u003e\u003e q_y \u003e\u003e q_x;\n    vector\u003cint\u003e q={};\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k,q);\n    for(int i=0;i\u003ck;i++) { int x,y;cin \u003e\u003e y \u003e\u003e x; obstacles[i].push_back(y);obstacles[i].push_back(x);}\n    cout\u003c\u003cqueensAttack(n ,k,q_y ,q_x,obstacles);\n}\n","score":0.329268292683,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x)\u003e(obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.329268292683,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.69512195122,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(v[1]\u003erealms[5][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(v[0]\u003erealms[5][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(v[0]\u003crealms[5][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.207317073171,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.69512195122,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003crealms[6][0]) realms[6]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.268292682927,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.69512195122,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    /*if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;*/\n    if(max(obstakl_1[0]-y,obstakl_1[1]-x)\u003emax(obstakl_2[0]-y,obstakl_2[1]-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.512195121951,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;\n    /*if(max(obstakl_1[0]-y,obstakl_1[1]-x)\u003emax(obstakl_2[0]-y,obstakl_2[1]-x)) return true;*/\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.69512195122,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x) || max(obstakl_1[0]-y,obstakl_1[1]-x)\u003emax(obstakl_2[0]-y,obstakl_2[1]-x)) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.390243902439,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the queensAttack function below.\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    /*if(sqrt((obstakl_1[0]-y)*(obstakl_1[0]-y)+(obstakl_1[1]-x)*(obstakl_1[1]-x))\u003esqrt((obstakl_2[0]-y)*(obstakl_2[0]-y)+(obstakl_2[1]-x)*(obstakl_2[1])-x)) return true;*/\n    if(max(abs(obstakl_1[0]-y),abs(obstakl_1[1]-x))\u003emax(abs(obstakl_2[0]-y),abs(obstakl_2[1]-x))) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            //if(is_closer(realms[4],v,r_q,c_q)) realms[4]=v;continue;\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            //if(is_closer(realms[5],v,r_q,c_q)) realms[5]=v;continue;\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            //if(is_closer(realms[6],v,r_q,c_q)) realms[6]=v;continue;\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            //if(is_closer(realms[7],v,r_q,c_q)) realms[7]=v;continue;\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;//revise the if conditions \n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"ACM ICPC Team","code":"/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cvector\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbitset\u003c500\u003e string2bit(string str)\n{\n    bitset\u003c500\u003e rslt(str);\n    return rslt;\n\n}\nvoid acmTeam(vector\u003cstring\u003e v_bt) {\n    int max=0;int count=1;\n    for(int i=0;i\u003cv_bt.size()-1;i++)\n    {\n        for(int j=i+1;j\u003cv_bt.size();j++)\n        {\n            bitset\u003c500\u003e temp;\n            temp=string2bit(v_bt[i])|string2bit(v_bt[j]);\n            if(temp.count()==max) count++;\n            if(temp.count()\u003emax) {max=temp.count();count=1;}\n        }\n    }\n    cout \u003c\u003c max \u003c\u003c \"\\n\" \u003c\u003c count;\n}\n\nint main()\n{\n    int n,m;\n    cin \u003e\u003e n \u003e\u003e m;//n++;\n    vector\u003cstring\u003e v_bt;\n    for(int i=0;i\u003cn;i++){\n        string str;cin \u003e\u003e str;\n        v_bt.push_back(str);\n    }\n    acmTeam(v_bt);\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'taumBday' function below.\n *\n * The function is expected to return a LONG_INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER b\n *  2. INTEGER w\n *  3. INTEGER bc\n *  4. INTEGER wc\n *  5. INTEGER z\n */\n\nlong taumBday(int b, int w, int bc, int wc, int z) {\n    int p_b,p_w;\n    p_b=wc+z;p_w=bc+z;\n    if(p_b\u003cbc || p_w \u003c wc)\n    {\n        if(p_b\u003cp_w) return b*p_b+w*wc;\n        if(p_b\u003ep_w) return b*bc+w*p_w;\n    }\n    return b*bc+w*wc;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string t_temp;\n    getline(cin, t_temp);\n\n    int t = stoi(ltrim(rtrim(t_temp)));\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        string first_multiple_input_temp;\n        getline(cin, first_multiple_input_temp);\n\n        vector\u003cstring\u003e first_multiple_input = split(rtrim(first_multiple_input_temp));\n\n        int b = stoi(first_multiple_input[0]);\n\n        int w = stoi(first_multiple_input[1]);\n\n        string second_multiple_input_temp;\n        getline(cin, second_multiple_input_temp);\n\n        vector\u003cstring\u003e second_multiple_input = split(rtrim(second_multiple_input_temp));\n\n        int bc = stoi(second_multiple_input[0]);\n\n        int wc = stoi(second_multiple_input[1]);\n\n        int z = stoi(second_multiple_input[2]);\n\n        long result = taumBday(b, w, bc, wc, z);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.28,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'taumBday' function below.\n *\n * The function is expected to return a LONG_INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER b\n *  2. INTEGER w\n *  3. INTEGER bc\n *  4. INTEGER wc\n *  5. INTEGER z\n */\n\nlong taumBday(int b, int w, int bc, int wc, int z) {\n    long p_b,p_w;\n    long op[3];\n    op[0]=b*bc+w*wc;op[1]=b*(wc+z)+wc*w;op[2]=w*(bc+z)+bc*b;\n    long min=op[3];\n    for(int i=0;i\u003c3;i++) if(op[i]\u003cmin) min=op[i];\n    return min;\n}\n\nint main()\n{\n    long b,w;\n    int n,bc,wc,z;\n    cin \u003e\u003en;\n    for(;n\u003e0;n--) {cin \u003e\u003e b \u003e\u003e w; cin \u003e\u003e bc \u003e\u003e wc \u003e\u003e z;cout \u003c\u003c taumBday(b,w,bc,wc,z)\u003c\u003cendl;}\n    \n}\n","score":0.12,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n/*\n * Complete the 'taumBday' function below.\n *\n * The function is expected to return a LONG_INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER b\n *  2. INTEGER w\n *  3. INTEGER bc\n *  4. INTEGER wc\n *  5. INTEGER z\n */\n\nlong taumBday(int b, int w, int bc, int wc, int z) {\n    long p_b,p_w;\n    long op[3];\n    op[0]=b*bc+w*wc;op[1]=b*(wc+z)+wc*w;op[2]=w*(bc+z)+bc*b;\n    long min=op[2];\n    for(int i=0;i\u003c3;i++) if(op[i]\u003cmin) min=op[i];\n    return min;\n}\n\nint main()\n{\n    long b,w;\n    int n,bc,wc,z;\n    cin \u003e\u003en;\n    for(;n\u003e0;n--) {cin \u003e\u003e b \u003e\u003e w; cin \u003e\u003e bc \u003e\u003e wc \u003e\u003e z;\n    cout \u003c\u003c taumBday(b,w,bc,wc,z)\u003c\u003cendl;}\n}\n","score":0.28,"language":"cpp14"},{"contest":"Master","challenge":"Taum and B'day","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\ndef taumBDAY(b,w,bc,wc,z):\n    x=int(b)*int(bc)+int(w)*int(wc)\n    y=int(b)*int(wc)+int(b)*int(z)+int(wc)*int(w)\n    a=int(w)*int(bc)+int(w)*int(z)+int(bc)*int(b)\n    op = [a,x,y]\n    min=op[2]\n    for i in range(3):\n         if op[i] \u003c= min : \n             min=op[i]\n    return min\nn=int(input())\nfor i in range(n):\n    b,w=input().split()\n    bc,wc,z=input().split()\n    print(taumBDAY(b,w,bc,wc,z))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Cats and a Mouse","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstddef.h\u003e\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n\nchar* readline();\nchar** split_string(char*);\n\n// Complete the catAndMouse function below.\n\n// Please either make the string static or allocate on the heap. For example,\n// static char str[] = \"hello world\";\n// return str;\n//\n// OR\n//\n// char* str = \"hello world\";\n// return str;\n//\nint abs(int n)\n{\n    if (n\u003c0) return -n;\n    return n;\n}\nchar* catAndMouse(int x, int y, int z) {\n    if(abs(x-z)\u003cabs(y-z)) return \"Cat A\";\n    if(abs(x-z)\u003eabs(y-z)) return \"Cat B\";\n    return \"Mouse C\";\n}\n\nint main()\n{\n    FILE* fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n    char* q_endptr;\n    char* q_str = readline();\n    int q = strtol(q_str, \u0026q_endptr, 10);\n\n    if (q_endptr == q_str || *q_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        char** xyz = split_string(readline());\n\n        char* x_endptr;\n        char* x_str = xyz[0];\n        int x = strtol(x_str, \u0026x_endptr, 10);\n\n        if (x_endptr == x_str || *x_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n        char* y_endptr;\n        char* y_str = xyz[1];\n        int y = strtol(y_str, \u0026y_endptr, 10);\n\n        if (y_endptr == y_str || *y_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n        char* z_endptr;\n        char* z_str = xyz[2];\n        int z = strtol(z_str, \u0026z_endptr, 10);\n\n        if (z_endptr == z_str || *z_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n        char* result = catAndMouse(x, y, z);\n\n        fprintf(fptr, \"%s\\n\", result);\n    }\n\n    fclose(fptr);\n\n    return 0;\n}\n\nchar* readline() {\n    size_t alloc_length = 1024;\n    size_t data_length = 0;\n    char* data = malloc(alloc_length);\n\n    while (true) {\n        char* cursor = data + data_length;\n        char* line = fgets(cursor, alloc_length - data_length, stdin);\n\n        if (!line) { break; }\n\n        data_length += strlen(cursor);\n\n        if (data_length \u003c alloc_length - 1 || data[data_length - 1] == '\\n') { break; }\n\n        size_t new_length = alloc_length \u003c\u003c 1;\n        data = realloc(data, new_length);\n\n        if (!data) { break; }\n\n        alloc_length = new_length;\n    }\n\n    if (data[data_length - 1] == '\\n') {\n        data[data_length - 1] = '\\0';\n    }\n\n    data = realloc(data, data_length);\n\n    return data;\n}\n\nchar** split_string(char* str) {\n    char** splits = NULL;\n    char* token = strtok(str, \" \");\n\n    int spaces = 0;\n\n    while (token) {\n        splits = realloc(splits, sizeof(char*) * ++spaces);\n        if (!splits) {\n            return splits;\n        }\n\n        splits[spaces - 1] = token;\n\n        token = strtok(NULL, \" \");\n    }\n\n    return splits;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Picking Numbers","code":"\n#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nint pickingNumbers(vector\u003cint\u003e a,int k) {\n    vector\u003cint\u003e p(k+1,0);\n    int m=0;\n    for(auto i:a) p[i]++;\n    for(int i=1;i\u003ck;i++)\n    {\n        m=max(m,p[i]+p[i+1]);\n    }\n    return m;\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e a;int max=0;\n    for(;n\u003e0;n--) {\n        int i;cin \u003e\u003e i;a.push_back(i); \n        if(i\u003emax) max=i;\n    }\n    cout \u003c\u003c pickingNumbers(a,max);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Climbing the Leaderboard","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cint,pair\u003cint,int\u003e\u003e m;\n    int n;cin \u003e\u003e n;int count=0;\n    for(;n\u003e0;n--) \n    {\n            int i;cin \u003e\u003ei;\n            m[-i].first=1;m[-i].second=-1;\n    }\n    int k;cin \u003e\u003e k;vector\u003cint\u003e result(k+1,0);\n    for(;k\u003e0;k--) \n    { \n        int i;cin \u003e\u003ei;\n        m[-i].first+=2;m[-i].second=k;\n    }\n    for(map\u003cint,pair\u003cint,int\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        count++;\n        if(i-\u003esecond.first\u003e=2) \n        {\n            if(i-\u003esecond.first==2) {\n                result[i-\u003esecond.second]=count;\n                count--;\n            }\n            if(i-\u003esecond.first\u003e2) {\n                result[i-\u003esecond.second]=count;\n            }\n        }\n    }\n    for(int i=result.size()-1;i\u003e0;i--) cout \u003c\u003c result[i] \u003c\u003c endl;\n}\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Climbing the Leaderboard","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cint,pair\u003cint,vector\u003cint\u003e\u003e\u003e m;\n    int n;cin \u003e\u003e n;int count=0;\n    for(;n\u003e0;n--) \n    {\n            int i;cin \u003e\u003ei;\n            m[-i].first=1;m[-i].second={};\n    }\n    int k;cin \u003e\u003e k;vector\u003cint\u003e result(k+1,0);\n    for(;k\u003e0;k--) \n    { \n        int i;cin \u003e\u003ei;\n        m[-i].first+=2;m[-i].second.push_back(k);\n    }\n    for(map\u003cint,pair\u003cint,vector\u003cint\u003e\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        count++;\n        if(i-\u003esecond.first\u003e=2) \n        {\n            if(i-\u003esecond.first%2==0) {\n                while(!i-\u003esecond.second.empty())\n                {   \n                    result[i-\u003esecond.second[i-\u003esecond.second.size()-1]]=count;\n                    i-\u003esecond.second.pop_back();\n                }\n                count--;\n            }\n            if(i-\u003esecond.first%2==1) {\n                {   \n                    result[i-\u003esecond.second[i-\u003esecond.second.size()-1]]=count;\n                    i-\u003esecond.second.pop_back();\n                }\n            }\n        }\n    }\n    for(int i=result.size()-1;i\u003e0;i--) cout \u003c\u003c result[i] \u003c\u003c endl;\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Climbing the Leaderboard","code":"#include \u003cbits/stdc++.h\u003e\n#include\u003cutility\u003e\n#include\u003cvector\u003e\n#include\u003cmap\u003e\n#include\u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    map\u003cint,pair\u003cint,vector\u003cint\u003e\u003e\u003e m;\n    int n;cin \u003e\u003e n;int count=0;\n    for(;n\u003e0;n--) \n    {\n            int i;cin \u003e\u003ei;\n            m[-i].first=1;m[-i].second={};\n    }\n    int k;cin \u003e\u003e k;vector\u003cint\u003e result(k+1,0);\n    for(;k\u003e0;k--) \n    { \n        int i;cin \u003e\u003ei;\n        m[-i].first+=2;m[-i].second.push_back(k);\n    }\n    for(map\u003cint,pair\u003cint,vector\u003cint\u003e\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        count++;\n        if(i-\u003esecond.first\u003e=2) \n        {\n            if(i-\u003esecond.first%2==0) {\n                while(!i-\u003esecond.second.empty())\n                {   \n                    result[i-\u003esecond.second[i-\u003esecond.second.size()-1]]=count;\n                    i-\u003esecond.second.pop_back();\n                }\n                count--;\n            }\n            if(i-\u003esecond.first%2==1) {\n                while(!i-\u003esecond.second.empty())\n                {   \n                    result[i-\u003esecond.second[i-\u003esecond.second.size()-1]]=count;\n                    i-\u003esecond.second.pop_back();\n                }\n            }\n        }\n    }\n    for(int i=result.size()-1;i\u003e0;i--) cout \u003c\u003c result[i] \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Hurdle Race","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the hurdleRace function below.\nint hurdleRace(int k, vector\u003cint\u003e height) {\n    int m=0;\n    for(auto i:height) m=max(m,i);\n    if(m\u003ek) return m-k;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string height_temp_temp;\n    getline(cin, height_temp_temp);\n\n    vector\u003cstring\u003e height_temp = split_string(height_temp_temp);\n\n    vector\u003cint\u003e height(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int height_item = stoi(height_temp[i]);\n\n        height[i] = height_item;\n    }\n\n    int result = hurdleRace(k, height);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Designer PDF Viewer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the designerPdfViewer function below.\nint designerPdfViewer(vector\u003cint\u003e h, string word) {\n    int m=0;\n    for(char i:word) m=max(m,h[i-'0'-49]);\n    return m*word.size();\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string h_temp_temp;\n    getline(cin, h_temp_temp);\n\n    vector\u003cstring\u003e h_temp = split_string(h_temp_temp);\n\n    vector\u003cint\u003e h(26);\n\n    for (int i = 0; i \u003c 26; i++) {\n        int h_item = stoi(h_temp[i]);\n\n        h[i] = h_item;\n    }\n\n    string word;\n    getline(cin, word);\n\n    int result = designerPdfViewer(h, word);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Utopian Tree","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the utopianTree function below.\nint utopianTree(int n) {\n    int count=0;\n    if(n==0) return 1;;\n    if(n%2==1)\n    {\n        for(int i=1;i\u003c=(n+1)/2;i++)\n        {\n            count += 1\u003c\u003ci;\n        }\n        return count;\n    }\n    else \n    {\n        return 1+utopianTree(n-1);\n    }\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = utopianTree(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n// Complete the dayOfProgrammer function below.\nint months[]={31,28,31,30,31,30,31,31,30,31,30,31};\nbool leap_y(int y)\n{\n    if(y%4==0 || (y%100==0 \u0026\u0026 y%400==0) ) return true;\n    return false;\n}\nint main()\n{\n    int y;scanf(\"%i\",\u0026y);if(leap_y(y)) months[1]=29;int count=0;\n    for(int i=0;;i++)\n    {\n        count+=months[i];\n        if(count \u003e 256) {\n            count-=months[i];\n            cout \u003c\u003c 256-count \u003c\u003c\".0\"\u003c\u003c ++i \u003c\u003c\".\"\u003c\u003cy;\n            break;\n        }\n\n    }\n\n}\n","score":0.66,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\n\n// Complete the dayOfProgrammer function below.\nint months[]={31,28,31,30,31,30,31,31,30,31,30,31};\nbool leap_y(int y)\n{\n    if((y%4==0 \u0026\u0026 y%100!=0)  || (y%400==0) ) return true;\n    return false;\n}\nint main()\n{\n    int y;scanf(\"%i\",\u0026y);if(leap_y(y)) months[1]=29;int count=0;\n    for(int i=0;;i++)\n    {\n        count+=months[i];\n        if(count \u003e 256) {\n            count-=months[i];\n            cout \u003c\u003c 256-count \u003c\u003c\".0\"\u003c\u003c ++i \u003c\u003c\".\"\u003c\u003cy;\n            break;\n        }\n\n    }\n\n}\n","score":0.78,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\nbool leap_y(int y)\n{\n    if((y%4==0 \u0026\u0026 y%100!=0)  || (y%400==0) ) return true;\n    return false;\n}\nint main()\n{\n    int y;scanf(\"%i\",\u0026y);if(leap_y(y)) months[1]=29;int count=0;\n    if(y\u003e1918) \n        if(leap_y(y)) cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n        else cout \u003c\u003c \"13.09.\"\u003c\u003cy;\n    else if(y\u003c1918)\n        cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n    else cout \u003c\u003c \"26.09.\"\u003c\u003cy;\n\n    \n   \n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool leap_y(int y)\n{\n    if((y%4==0 \u0026\u0026 y%100!=0)  || (y%400==0) ) return true;\n    return false;\n}\nint main()\n{\n    int y;scanf(\"%i\",\u0026y);if(leap_y(y)) months[1]=29;int count=0;\n    if(y\u003e1918) \n        if(leap_y(y)) cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n        else cout \u003c\u003c \"13.09.\"\u003c\u003cy;\n    else if(y\u003c1918)\n        cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n    else cout \u003c\u003c \"26.09.\"\u003c\u003cy;\n\n    \n   \n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool leap_y(int y)\n{\n    if((y%4==0 \u0026\u0026 y%100!=0)  || (y%400==0) ) return true;\n    return false;\n}\nint main()\n{\n    int y;scanf(\"%i\",\u0026y);\n    if(y\u003e1918) \n        if(leap_y(y)) cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n        else cout \u003c\u003c \"13.09.\"\u003c\u003cy;\n    else if(y\u003c1918)\n        cout \u003c\u003c \"12.09.\"\u003c\u003cy;\n    else cout \u003c\u003c \"26.09.\"\u003c\u003cy;\n\n    \n   \n}\n","score":0.91,"language":"cpp"},{"contest":"Master","challenge":"Day of the Programmer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int feb;\n    int y;scanf(\"%i\",\u0026y);\n    if(y\u003e1918) \n        if((y%4==0 \u0026\u0026 y%100!=0)  || (y%400==0)) feb=29;\n        else feb=28;\n    else if(y\u003c1918)\n        if(y%4==0) feb=29;\n        else feb=28;\n    else feb=15;\n    printf(\"%d.09.%d\",256-215-feb,y);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Forming a Magic Square","code":"/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the formingMagicSquare function below.\nint formingMagicSquare(vector\u003cvector\u003cint\u003e\u003e s) {\n    vector\u003cint\u003e sums(8,0);\n    for(int i=0;i\u003c3;i++)\n    {\n        for(int j=0;j\u003c3;j++)\n        {\n            sums[i]+=s[i][j];sums[5-i]+=s[j][i];\n        }\n        sums[6]+=s[i][i];sums[7]+=s[i][2-i];\n    }\n    map\u003cint,vector\u003cint\u003e\u003e m;int wanted_sum=0;int mx=0;int num_of_changes=0;\n    for(int i=0;i\u003c8;i++) m[sums[i]].push_back(i);//a reviser\n    for(map\u003cint,vector\u003cint\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        if(i-\u003esecond.size()\u003emx) {mx=i-\u003esecond.size(); wanted_sum=i-\u003efirst;} \n    }\n    for(map\u003cint,vector\u003cint\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        if(i-\u003efirst==wanted_sum) continue;\n        num_of_changes+=max(num_of_changes,wanted_sum-i-\u003efirst);\n    }\n    return num_of_changes;\n}\n\nint main()\n{\n    vector\u003cvector\u003cint\u003e\u003e s;\n    for(int i=0;i\u003c3;i++)\n    {\n        int a,j,k;\n        cin \u003e\u003e a \u003e\u003e j \u003e\u003e k;\n        s.push_back({a,j,k});\n    }\n    cout \u003c\u003c formingMagicSquare(s);\n}\n","score":0.047619047619,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(int n) \n{ \n    string str=to_string(n*n);\n    string str1=str.substr(0,str.size()/2);string str2=str.substr(str.size()/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(int i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"def test(n):\n    i=str(int(n*n))\n    print(i+\" \" +str(len(i)))\n    if len(i) % 2 ==0 :\n        str1=i[0:len(i)/2-1]\n        str2=i[len(i)/2:]\n    else :\n        str1=i[0:int(len(i)/2)+1]\n        str2=i[int(len(i)/2+1):]\n    print( str1 + \" \" + str2)\n    result=int(str1)+int(str2)\n    if result == n :\n        print(n)\nb=int(input())\nl=int(input())\nfor i in range(b,l+1):\n    print(str(i) + \" \")\n    test(i)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(long long n) \n{ \n    string str=to_string(n*n);\n    string str1=str.substr(0,(str.size()+1)/2);string str2=str.substr((str.size()+1)/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(long long i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(int n) \n{ \n    string str=to_string(n*n);\n    string str1=str.substr(0,(str.size()+1)/2);string str2=str.substr((str.size()+1)/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(int i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(int n) \n{ \n    string str=to_string(n*n);\n    string str1=str.substr(0,str.size()/2);string str2=str.substr(str.size()/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(int i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(long long n) \n{ \n    long long i=n*n;\n    string str=to_string(n*n);string str1;string str2;\n    if(str.size()%2==0)\n        {\n             str1=str.substr(0,str.size()/2);\n             str2=str.substr(str.size()/2);\n        }\n    else \n        {\n             str1=str.substr(0,str.size()/2-1);\n             str2=str.substr(str.size()/2);\n        }\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(long long i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.4,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\n#define long long ll\nusing namespace std;\n\nbool iskaprekarNumbers(ll n) \n{ \n    ll i=n*n;\n    string str=to_string(n*n);\n    string str1=str.substr(0,str.size()/2);string str2=str.substr(str.size()/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(ll i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Modified Kaprekar Numbers","code":"#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nbool iskaprekarNumbers(long long n) \n{ \n    long long i=n*n;\n    string str=to_string(n*n);\n    string str1=str.substr(0,str.size()/2);string str2=str.substr(str.size()/2);\n    int resut= atoi(str1.c_str())+atoi(str2.c_str());\n    if(resut==n) return true;\n    return false;\n}\n\nint main()\n{\n    int n,l; cin \u003e\u003e n \u003e\u003e l; bool valid=0;\n    for(long long i=n;i\u003c=l;i++) if(iskaprekarNumbers(i)) { cout \u003c\u003c i \u003c\u003c \" \"; valid=1;}\n    if(!valid) cout \u003c\u003c \"INVALID RANGE\";\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Say \"Hello, World!\" With Python","code":"print(\"Hello, World!\")\n","score":1.0,"language":"pypy3"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003ciostream\u003e\n#include \u003cdeque\u003e\n#include \u003cmap\u003e\nusing namespace std;\nmap\u003cdeque\u003cchar\u003e,int\u003e proc_string;\nint palindrom(deque\u003cchar\u003e s)\n{\n    if(proc_string[s]) return proc_string[s];\n    bool pal=1;\n    for(int i=0;i\u003cs.size()/2;i++)\n    {\n        if(s[i]!=s[s.size()-1-i]) \n        {\n            pal=false;break;\n        }\n    }\n    if(pal) \n    {\n        proc_string[s]=s.size();\n        return s.size();\n    }\n    deque\u003cchar\u003e s1,s2;s1=s2=s;\n    s1.pop_front();s2.pop_back();\n    return max(palindrom(s1),palindrom(s2));\n}\nint main()\n{\n    deque\u003cchar\u003e s;\n    int n;cin \u003e\u003e n;\n    int i=0;\n    char c;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e c;\n        s.push_back(c);\n        i++;\n    }\n    for(int i=0;i\u003cs.size();i++)\n    {\n        cout \u003c\u003c palindrom(s)\u003c\u003c \"\\n\";\n        s.push_back(s[0]);s.pop_front();\n    }\n}\n","score":0.023622047244,"language":"cpp"},{"contest":"Master","challenge":"Hash Tables: Ice Cream Parlor","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n    map\u003cint,int\u003e id;\n    int n,money;cin \u003e\u003e money\u003e\u003e n;\n    vector\u003cint\u003e id_v(money,0);\n    for(int j=1;j\u003c=n;j++) {int i;cin \u003e\u003e i;if(i\u003cmoney) {id[i]=j;id_v[i]=1;}}\n    for(int i=1;i\u003cid_v.size();i++)\n    {\n        if(id_v[i]\u0026\u0026id_v[id_v.size()-i])\n        {\n            cout \u003c\u003c id[i] \u003c\u003c \" \" \u003c\u003c id[id_v.size()-i] \u003c\u003c \"\\n\";\n            break;\n        }\n    }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Hash Tables: Ice Cream Parlor","code":"/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cmap\u003e\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n    map\u003cint,vector\u003cint\u003e\u003e id;\n    int n,money;cin \u003e\u003e money\u003e\u003e n;\n    vector\u003cint\u003e id_v(money,0);\n    for(int j=1;j\u003c=n;j++) \n    {\n        int i;cin \u003e\u003e i;if(i\u003cmoney) \n        {\n        id[i].push_back(j);id_v[i]=1;\n        }\n        \n    }\n    int l=(id_v.size()%2==0)? + 1:id_v.size()/2;\n    for(int i=1;i\u003c=id_v.size()/2;i++)\n    {\n        if(id_v[i]\u0026\u0026id_v[id_v.size()-i] \u0026\u0026 id[i].size()==1)\n        {\n            cout \u003c\u003c id[i][0] \u003c\u003c \" \" \u003c\u003c id[id_v.size()-i][0] \u003c\u003c \"\\n\";\n            break;\n        }\n    }\n    if(id[id_v.size()/2].size()\u003e1 )\n        {\n            cout \u003c\u003c id[id_v.size()/2][0] \u003c\u003c \" \" \u003c\u003c id[id_v.size()/2][1] \u003c\u003c \"\\n\";\n        }\n    }\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Hash Tables: Ice Cream Parlor","code":"/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cmap\u003e\n#include \u003cset\u003e\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n    map\u003cint,vector\u003cint\u003e\u003e id;\n    int n,money;cin \u003e\u003e money\u003e\u003e n;\n    vector\u003cint\u003e id_v(money,0);\n    for(int j=1;j\u003c=n;j++) \n    {\n        int i;cin \u003e\u003e i;if(i\u003cmoney) \n        {\n        id[i].push_back(j);id_v[i]=1;\n        }\n        \n    }\n    set\u003cint\u003e rslt;\n    for(int i=1;i\u003c=id_v.size()/2;i++)\n    {\n        if(id_v[i]\u0026\u0026id_v[id_v.size()-i] \u0026\u0026 id[i].size()==1)\n        {\n            rslt.insert(id[i][0]);rslt.insert(id[id_v.size()-i][0]);\n            break;\n        }\n    }\n    if(id[id_v.size()/2].size()\u003e1 )\n    {\n            rslt.insert(id[id_v.size()/2][0]);rslt.insert(id[id_v.size()/2][1]);\n    }\n    for(auto i:rslt) cout \u003c\u003c i \u003c\u003c \" \";\n    cout \u003c\u003c endl;\n    }\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Hash Tables: Ice Cream Parlor","code":"/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cmap\u003e\n#include \u003cset\u003e\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n    map\u003cint,vector\u003cint\u003e\u003e id;\n    int n,money;cin \u003e\u003e money\u003e\u003e n;\n    vector\u003cbool\u003e id_v(money,0);\n    for(int j=1;j\u003c=n;j++) \n    {\n        int i;cin \u003e\u003e i;if(i\u003cmoney) \n        {\n        id[i].push_back(j);id_v[i]=1;\n        }\n        \n    }\n    set\u003cint\u003e rslt;\n    for(int i=1;i\u003c=id_v.size()/2;i++)\n    {\n        if(id_v[i]\u0026\u0026id_v[id_v.size()-i] \u0026\u0026 id[i].size()==1)\n        {\n            rslt.insert(id[i][0]);rslt.insert(id[id_v.size()-i][0]);\n            break;\n        }\n    }\n    if(id[id_v.size()/2].size()\u003e1 )\n    {\n            rslt.insert(id[id_v.size()/2][0]);rslt.insert(id[id_v.size()/2][1]);\n    }\n    for(auto i:rslt) cout \u003c\u003c i \u003c\u003c \" \";\n    cout \u003c\u003c endl;\n    }\n}\n\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"2D Array - DS","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cvector\u003cint\u003e\u003e arr(6);\nint addSHG(int i,int j)\n{\n    int total=0;\n    for(int k=i;k\u003ci+3;k+=2)\n    {\n        for(int l=j;l\u003cj+3;l++)\n        {\n            total+=arr[k][l];\n        }\n    }\n    total+=arr[i+1][j+1];\n    return total;\n}\n// Complete the hourglassSum function below.\nint hourglassSum(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int m=-63;\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n        {\n            m=max(m,addSHG(i,j));\n        }\n    }\n    return m;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = hourglassSum(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"2D Array - DS","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cvector\u003cint\u003e\u003e arr(6);\nint addSHG(int i,int j)\n{\n    int total=0;\n    for(int k=i;k\u003ci+3;k+=2)\n    {\n        for(int l=j;l\u003cj+3;l++)\n        {\n            total+=arr[k][l];\n        }\n    }\n    total+=arr[i+1][j+1];\n    return total;\n}\n// Complete the hourglassSum function below.\nint hourglassSum(vector\u003cvector\u003cint\u003e\u003e arr) {\n    int m=-63;\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n        {\n            m=max(m,addSHG(i,j));\n        }\n    }\n    return m;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = hourglassSum(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Arrays: Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#define read(i) int i;cin \u003e\u003e i;\nusing namespace std;\n\nint main()\n{\n    vector\u003cint\u003e v;\n    int n,d; cin \u003e\u003e n \u003e\u003e d;\n    while(n--) {read(i); v.push_back(i);}\n    for(int k=0;k\u003cv.size();k++)\n    {\n        cout \u003c\u003c v[(k+d)%v.size()] \u003c\u003c \" \";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Arrays: Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#define read(i) int i;cin \u003e\u003e i;\nusing namespace std;\n\nint main()\n{\n    vector\u003cint\u003e v;\n    int n,d; cin \u003e\u003e n \u003e\u003e d;\n    while(n--) {read(i); v.push_back(i);}\n    for(int k=0;k\u003cv.size();k++)\n    {\n        cout \u003c\u003c v[(k+d)%v.size()] \u003c\u003c \" \";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Dynamic Array","code":"#include \u003cbits/stdc++.h\u003e\n#define read(i) int i; scanf(\"%d\",\u0026i)\n#define write(i) printf(\"%d\\n\",i)\nusing namespace std;\n\nint main()\n{\n    read(N);read(Q);int lstrslt=0;vector\u003cint\u003e empt={};\n    vector\u003cvector\u003cint\u003e\u003e seqlst(N,empt);\n    for(int i=0;i\u003cQ;i++)\n    {\n        read(j);\n        read(x);read(y);\n        if(j==1)\n            seqlst[x^lstrslt%N].push_back(y);\n        else\n            {\n                 lstrslt=seqlst[x^lstrslt%N][y%seqlst[x^lstrslt%N].size()];\n                 write(lstrslt);\n            }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Dynamic Array","code":"#include \u003cbits/stdc++.h\u003e\n#define read(i) int i; scanf(\"%d\",\u0026i)\n#define write(i) printf(\"%d\\n\",i)\nusing namespace std;\n\nint main()\n{\n    read(N);read(Q);int lstrslt=0;vector\u003cint\u003e empt={};\n    vector\u003cvector\u003cint\u003e\u003e seqlst(N,empt);\n    for(int i=0;i\u003cQ;i++)\n    {\n        read(j);read(x);read(y);\n        if(j==1)\n            seqlst[(x^lstrslt)%N].push_back(y);\n        else\n            {\n                lstrslt=seqlst[(x^lstrslt)%N][y%seqlst[(x^lstrslt)%N].size()];\n                write(lstrslt);\n            }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n,d;scanf(\"%d %d\",\u0026n,\u0026d);\n    vector\u003cint\u003e v;\n    while(n--\u003e0)\n    {\n        int i;scanf(\"%d\",\u0026i);\n        v.push_back(i);\n    }\n    cout \u003c\u003c endl;\n    for(int i=0;i\u003cv.size();i++)\n    {\n        printf(\"%d \",v[(i+d)%v.size()]);\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Left Rotation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n,d;scanf(\"%d %d\",\u0026n,\u0026d);\n    vector\u003cint\u003e v;\n    while(n--\u003e0)\n    {\n        int i;scanf(\"%d\",\u0026i);\n        v.push_back(i);\n    }\n    for(int i=0;i\u003cv.size();i++)\n    {\n        printf(\"%d \",v[(i+d)%v.size()]);\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sparse Arrays","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main()\n{\n    map\u003cstring,int\u003e m;\n    int n;cin \u003e\u003e n;\n    while(n--) {string s; cin \u003e\u003e s;m[s]++;}\n    cin \u003e\u003e n;\n    while(n--) {\n        string s; cin \u003e\u003e s;\n        if(m[s]) \n        {\n            cout \u003c\u003c m[s] \u003c\u003c \"\\n\";\n        }\n        else \n        {\n            cout \u003c\u003c 0 \u003c\u003c \"\\n\";\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nvector\u003cint\u003e is_in(int a,int b,int c,int d)\n{\n    if(a\u003ec \u0026\u0026 b\u003cd)\n        return {a,b,1};\n    else if(a\u003c=c \u0026\u0026 b\u003cd)\n        return {c,b,1};\n    else if(a\u003ec \u0026\u0026 b\u003e=d)\n        return {a,d,1};\n    else if(a\u003cc \u0026\u0026 b\u003ed)\n        return {c,d,1};\n    else \n        return {a,b,0};\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n\u003e\u003em;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        if(v.empty())\n        {\n            v.push_back({a,b,c});\n        }    \n        else \n        {\n            if(v.size()==1)\n            {\n                if(is_in(a,b,v[0][0],v[0][1])[3])\n                {\n                    v[0][0]=is_in(a,b,v[0][0],v[0][1])[0];\n                    v[0][1]=is_in(a,b,v[0][0],v[0][1])[1];\n                    v[0][2]+=c;\n                }\n                else \n                {\n                    v.push_back({a,b,c});\n                }\n            }\n            else\n            {\n                for(int i=0;i\u003cv.size();i++)\n                {\n                    if(is_in(a,b,v[i][0],v[i][1])[3])\n                    {\n                    v[i][0]=is_in(a,b,v[i][0],v[i][1])[0];\n                    v[i][1]=is_in(a,b,v[i][0],v[i][1])[1];\n                    v[i][2]+=c;\n                    break;\n                    }\n                    if(i==v.size()-1)\n                    {\n                        v.push_back({a,b,c});\n                    }\n                }\n            }\n        }\n    }\n    int r=0;\n    for(auto i:v)\n    {\n        r=max(r,i[2]);\n    }\n    cout \u003c\u003c r;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nvector\u003cint\u003e is_in(int a,int b,int c,int d)\n{\n    if(a\u003e=c \u0026\u0026 b\u003c=d)\n        return {a,b,1};\n    else if(a\u003c=c \u0026\u0026 b\u003c=d)\n        return {c,b,1};\n    else if(a\u003e=c \u0026\u0026 b\u003e=d)\n        return {a,d,1};\n    else if(a\u003c=c \u0026\u0026 b\u003e=d)\n        return {c,d,1};\n    else \n        return {a,b,0};\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n\u003e\u003em;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        if(v.empty())\n        {\n            v.push_back({a,b,c});\n        }    \n        else \n        {\n                for(int i=0;i\u003cv.size();i++)\n                {\n                    if(is_in(a,b,v[i][0],v[i][1])[2])\n                    {\n                    v[i][0]=is_in(a,b,v[i][0],v[i][1])[0];\n                    v[i][1]=is_in(a,b,v[i][0],v[i][1])[1];\n                    v[i][2]+=c;\n                    break;\n                    }\n                    if(i==v.size()-1)\n                    {\n                        v.push_back({a,b,c});\n                    }\n                }\n        }\n    }\n    int r=0;\n    for(auto i:v)\n    {\n        r=max(r,i[2]);\n    }\n    cout \u003c\u003c r;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nvector\u003cint\u003e is_in(int a,int b,int c,int d)\n{\n    if(c!=d)\n    {\n        if(a\u003e=c \u0026\u0026 b\u003c=d)\n            return {a,b,1};\n        else if(a\u003c=c \u0026\u0026 b\u003c=d)\n            return {c,b,1};\n        else if(a\u003e=c \u0026\u0026 b\u003e=d)\n            return {a,d,1};\n        else if(a\u003c=c \u0026\u0026 b\u003e=d)\n            return {c,d,1};\n        else \n            return {a,b,0};\n    }\n    else \n    {\n        if(c \u003e= a \u0026\u0026 c \u003c= b)\n            return {c,c,1};\n        else \n            return {a,b,0};\n    }\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n\u003e\u003em;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        if(v.empty())\n        {\n            v.push_back({a,b,c});\n        }    \n        else \n        {\n                for(int i=0;i\u003cv.size();i++)\n                {\n                    if(is_in(a,b,v[i][0],v[i][1])[2])\n                    {\n                    v[i][0]=is_in(a,b,v[i][0],v[i][1])[0];\n                    v[i][1]=is_in(a,b,v[i][0],v[i][1])[1];\n                    v[i][2]+=c;\n                    break;\n                    }\n                    if(i==v.size()-1)\n                    {\n                        v.push_back({a,b,c});\n                    }\n                }\n        }\n    }\n    int r=0;\n    for(auto i:v)\n    {\n        r=max(r,i[2]);\n    }\n    cout \u003c\u003c r;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nvector\u003cint\u003e is_in(int a,int b,int c,int d)\n{\n    if(c!=d)\n    {\n        if(a\u003c=d \u0026\u0026 b \u003e=c)\n            return {max(a,c),min(b,d),1};\n        else \n            return {0,0,0};\n    }\n    else \n    {\n        if(c \u003e= a \u0026\u0026 c \u003c= b)\n            return {c,c,1};\n        else \n            return {a,b,0};\n    }\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n\u003e\u003em;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        if(v.empty())\n        {\n            v.push_back({a,b,c});\n        }    \n        else \n        {\n                for(int i=0;i\u003cv.size();i++)\n                {\n                    if(is_in(a,b,v[i][0],v[i][1])[2])\n                    {\n                    v[i][0]=is_in(a,b,v[i][0],v[i][1])[0];\n                    v[i][1]=is_in(a,b,v[i][0],v[i][1])[1];\n                    v[i][2]+=c;\n                    break;\n                    }\n                    if(i==v.size()-1)\n                    {\n                        v.push_back({a,b,c});\n                        break;\n                    }\n                }\n        }\n    }\n    int r=0;\n    for(auto i:v)\n    {\n        r=max(r,i[2]);\n    }\n    cout \u003c\u003c r;\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;\n    vector\u003cint\u003e v(n,0);\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        for(int i=a;i\u003c=b;i++)\n            v[i]+=c;\n    }\n    int r=0;\n    for(auto i:v) r=max(r,i);\n    cout \u003c\u003c r; \n}\n","score":0.133333333333,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;\n    vector\u003cint\u003e v(n,0);\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        for(int i=a-1;i\u003cb;i++)\n            v[i]+=c;\n    }\n    int r=0;\n    for(auto i:v) r=max(r,i);\n    cout \u003c\u003c r; \n}\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Array Manipulation","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;int r=0;\n    vector\u003cint\u003e v(n,0);\n    while(m--)\n    {\n        int a,b,c;\n        cin \u003e\u003e a \u003e\u003e b \u003e\u003e c;\n        for(int i=a-1;i\u003cb;i++)\n        {  \n             v[i]+=c;\n             r=max(r,v[i]);\n        }\n    }\n    cout \u003c\u003c r;\n}\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Print the Elements of a Linked List","code":"\n\n// Complete the printLinkedList function below.\n\nvoid printLinkedList(SinglyLinkedListNode* head) {\n    SinglyLinkedListNode* curr= head;\n    while(1)\n    {\n        cout \u003c\u003c curr-\u003edata \u003c\u003c endl;\n        if(curr-\u003enext==nullptr) break;\n        curr=curr-\u003enext;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Insert a Node at the Tail of a Linked List","code":"\n\n// Complete the insertNodeAtTail function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* insertNodeAtTail(SinglyLinkedListNode* head, int data) {\n    SinglyLinkedListNode* new_Node=(SinglyLinkedListNode*)malloc(sizeof(SinglyLinkedListNode));\n    new_Node-\u003edata=data;new_Node-\u003enext=nullptr;\n    if(head==nullptr)\n    {\n        head=new_Node;\n        return head;\n    }\n    SinglyLinkedListNode* rtr=head;\n    while(rtr-\u003enext!=nullptr)\n    {\n        rtr=rtr-\u003enext;\n    }\n    rtr-\u003enext = new_Node;\n    return head;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Insert a node at the head of a linked list","code":"\n\n// Complete the insertNodeAtHead function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* insertNodeAtHead(SinglyLinkedListNode* llist, int data) {\n    SinglyLinkedListNode* new_node=(SinglyLinkedListNode*)malloc(sizeof(SinglyLinkedListNode));\n    new_node-\u003edata=data;new_node-\u003enext=nullptr;\n    if(llist==nullptr)\n    {\n        llist= new_node;\n        return new_node;\n    }\n    new_node-\u003enext=llist;\n    return new_node;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Insert a node at a specific position in a linked list","code":"\n\n// Complete the insertNodeAtPosition function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* insertNodeAtPosition(SinglyLinkedListNode* head, int data, int position) {\n    int i=0;\n    SinglyLinkedListNode* crnt=head;\n    SinglyLinkedListNode* new_node=(SinglyLinkedListNode*)malloc(sizeof(SinglyLinkedListNode));\n    new_node-\u003edata=data;\n    while(crnt-\u003enext \u0026\u0026 i\u003cposition-1)\n    {\n        crnt=crnt-\u003enext;\n        i++;\n    }\n    new_node-\u003enext=crnt-\u003enext;\n    crnt-\u003enext=new_node;\n    return head;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Delete a Node","code":"\n\n// Complete the deleteNode function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* deleteNode(SinglyLinkedListNode* head, int position) {\n    int i=0;\n    SinglyLinkedListNode* crnt=head;\n    while(i\u003cposition-1)\n    {\n        crnt=crnt-\u003enext;\n        i++;\n    }\n    crnt-\u003enext=crnt-\u003enext-\u003enext;\n    return head;\n}\n\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Delete a Node","code":"\n\n// Complete the deleteNode function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* deleteNode(SinglyLinkedListNode* head, int position) {\n    int i=0;\n    SinglyLinkedListNode* crnt=head;\n    if(i==0)\n        return head-\u003enext;\n    while(i\u003cposition-1)\n    {\n        crnt=crnt-\u003enext;\n        i++;\n    }\n    crnt-\u003enext=crnt-\u003enext-\u003enext;\n    return head;\n}\n\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Delete a Node","code":"\n\n// Complete the deleteNode function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* deleteNode(SinglyLinkedListNode* head, int position) {\n    int i=0;\n    SinglyLinkedListNode* crnt=head;\n    if(position==0)\n        return head-\u003enext;\n    while(i\u003cposition-1)\n    {\n        crnt=crnt-\u003enext;\n        i++;\n    }\n    crnt-\u003enext=crnt-\u003enext-\u003enext;\n    return head;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Print in Reverse","code":"\n\n// Complete the reversePrint function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nvoid reversePrint(SinglyLinkedListNode* head) {\n    SinglyLinkedListNode* crnt=head;\n    vector\u003cint\u003e v;v.push_back(crnt-\u003edata);\n    while(crnt-\u003enext) \n    { \n        crnt=crnt-\u003enext;\n        v.push_back(crnt-\u003edata);\n    }\n    for(int i=0;i\u003cv.size();i++)\n     cout \u003c\u003c v[v.size()-i-1] \u003c\u003c endl;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Reverse a linked list","code":"\n\n// Complete the reverse function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nSinglyLinkedListNode* reverse(SinglyLinkedListNode* head) {\n    if(!head)\n        return head;\n    SinglyLinkedListNode* ex=nullptr;\n    SinglyLinkedListNode* crnt=head;\n    SinglyLinkedListNode* next;\n    while(crnt-\u003enext)\n    {\n        next=crnt-\u003enext;\n        crnt-\u003enext=ex;\n        ex=crnt;\n        crnt=next;\n        if(!crnt-\u003enext)\n        {\n            crnt-\u003enext=ex;\n            break;\n        }\n    }\n    return crnt;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Game of Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the gameOfStones function below.\nbool gameOfStones(int n) {\n    if(n==1) return 1;\n    if(n\u003c=5 \u0026\u0026 n!=1) return 0;\n    else \n    {\n        return !gameOfStones(n-2) \u0026\u0026 !gameOfStones(n-3) \u0026\u0026 !gameOfStones(n-5);\n    }\n\n}\n\nint main()\n{\n    int t;scanf(\"%d\",\u0026t);\n    while(t--) {int n;scanf(\"%d\",\u0026n);\n        if(gameOfStones(n))\n             printf(\"Second\\n\");\n        else\n            printf(\"First\\n\");\n        }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Game of Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint v[101];\n// Complete the gameOfStones function below.\nbool gameOfStones(int n) {\n    if(n==1) return 1;\n    if(n\u003c=5 \u0026\u0026 n!=1) return 0;\n    else \n    {\n        if(v[n]==-1) \n        {\n            v[n]=(!gameOfStones(n-2) \u0026\u0026 !gameOfStones(n-3) \u0026\u0026 !gameOfStones(n-5));\n            return v[n];\n        }\n        return v[n];\n    }\n\n}\n\nint main()\n{\n    for(int i=0;i\u003c101;i++) v[i]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--) {int n;scanf(\"%d\",\u0026n);\n        if(gameOfStones(n))\n             printf(\"Second\\n\");\n        else\n            printf(\"First\\n\");\n        }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Game of Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint v[101];\n// Complete the gameOfStones function below.\nbool gameOfStones(int n) {\n    if(n==1) return 1;\n    if(n\u003c=5 \u0026\u0026 n!=1) return 0;\n    else \n    {\n        if(v[n]==-1) \n        {\n            v[n]=(!gameOfStones(n-2) \u0026\u0026 !gameOfStones(n-3) \u0026\u0026 !gameOfStones(n-5));\n            return v[n];\n        }\n        return v[n];\n    }\n\n}\n\nint main()\n{\n    for(int i=0;i\u003c101;i++) v[i]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--) {int n;scanf(\"%d\",\u0026n);\n        if(gameOfStones(n))\n             printf(\"Second\\n\");\n        else\n            printf(\"First\\n\");\n        }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint M[15][15];\nvector\u003cint\u003e chessboardGame(int x, int y,bool p) {\n    if(x+1\u003e15 || x-1\u003c1 || y+1 \u003e15 || y-1 \u003c1 || x-2 \u003c1 || y-2 \u003c1)\n        return {0,!p};\n    vector\u003cint\u003eq={0,p};vector\u003cvector\u003cint\u003e\u003e v(4,q);\n    v[0][0]+=chessboardGame(1+x,y-2,!p)[0];\n    v[1][0]+=chessboardGame(x-1,y-2,!p)[0];\n    v[2][0]+=chessboardGame(x-2,y+1,!p)[0];\n    v[3][0]+=chessboardGame(x-2,y-1,!p)[0];\n    int m=0;\n    for(int i=0;i\u003c4;i++)\n        m=max(m,v[i][0]);\n    for(int i=0;i\u003c4;i++)\n        if(v[i][0]==m)\n            return v[i];\n    return q;\n}\n\nint main()\n{\n    for(int i=0;i\u003c15;i++)\n        for(int j=0;j\u003c15;j++)\n            M[i][j]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int x,y;scanf(\"%d %d\",\u0026x,\u0026y);\n        if(chessboardGame(x, y,false)[1])\n        {\n            printf(\"Second\\n\");\n        }\n        else \n        {\n            printf(\"First\\n\");\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint M[15][15];\nbool chessboardGame(int x, int y,bool p) {\n    if(M[x][y]!=-1) return M[x][y];\n    if(x\u003c=2 || y\u003c=2)\n    {\n        return !p;\n    }\n    if(x-2\u003e0 \u0026\u0026 y+1\u003c15)\n    {\n        p\u0026=chessboardGame(x-2,y+1,!p);\n    }\n    if(x-2\u003e0 \u0026\u0026 y-1\u003e0)\n    {\n        p\u0026=chessboardGame(x-2,y-1,!p);\n    }\n    if(x+1\u003c15 \u0026\u0026 y-2\u003e0)\n    {\n        p\u0026=chessboardGame(x+1,y-2,!p);\n    }\n    if(x-1\u003e0 \u0026\u0026 y-2\u003c15)\n    {\n        p\u0026=chessboardGame(x-1,y-2,!p);\n    }\n    M[x][y]=p;\n    return M[x][y];\n}\n\nint main()\n{\n    for(int i=0;i\u003c15;i++)\n        for(int j=0;j\u003c15;j++)\n            M[i][j]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int x,y;scanf(\"%d %d\",\u0026x,\u0026y);\n        if(chessboardGame(x, y,false))\n        {\n            printf(\"Second\\n\");\n        }\n        else \n        {\n            printf(\"First\\n\");\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint M[15][15];\nbool chessboardGame(int x, int y,bool p) {\n    if(M[x][y]!=-1) return M[x][y];\n    if(x\u003c=2\u0026\u0026y\u003c=2)\n    {\n        return !p;\n    }\n    if(x-2\u003e0 \u0026\u0026 y+1\u003c=15)\n    {\n        p\u0026=chessboardGame(x-2,y+1,!p);\n    }\n    if(x-2\u003e0 \u0026\u0026 y-1\u003e0)\n    {\n        p\u0026=chessboardGame(x-2,y-1,!p);\n    }\n    if(x+1\u003c15 \u0026\u0026 y-2\u003e0)\n    {\n        p\u0026=chessboardGame(x+1,y-2,!p);\n    }\n    if(x-1\u003e0 \u0026\u0026 y-2\u003c=15)\n    {\n        p\u0026=chessboardGame(x-1,y-2,!p);\n    }\n    M[x][y]=p;\n    return M[x][y];\n}\n\nint main()\n{\n    for(int i=0;i\u003c15;i++)\n        for(int j=0;j\u003c15;j++)\n            M[i][j]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int x,y;scanf(\"%d %d\",\u0026x,\u0026y);\n        if(chessboardGame(x, y,false))\n        {\n            printf(\"Second\\n\");\n        }\n        else \n        {\n            printf(\"First\\n\");\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint main()\n{\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int i,j;scanf(\"%d %d\",\u0026i,\u0026j);\n        if((i%4==1 ||i%4==2)\u0026\u0026(j%4==1 ||j%4==2))\n        {\n            cout \u003c\u003c \"Second\\n\";\n        }\n        else \n            cout \u003c\u003c \"First\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"\n#include \u003ciostream\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint main()\n{\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int i,j;scanf(\"%d %d\",\u0026i,\u0026j);\n        if((i%4==1 ||i%4==2)\u0026\u0026(j%4==1 ||j%4==2))\n        {\n            cout \u003c\u003c \"Second\\n\";\n        }\n        else \n            cout \u003c\u003c \"First\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"A Chessboard Game","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint M[15][15];\nbool chessboardGame(int x, int y) {\n    if(x\u003c1 || x\u003e15 || y\u003c1 || y\u003e15)\n    {\n            return 0;\n    }\n    if(x\u003c=2 \u0026\u0026 y\u003c=2) \n    {\n        M[x-1][y-1]=1;\n        return M[x-1][y-1];\n    }\n    else \n    {\n        if(M[x-1][y-1]!=-1) return M[x-1][y-1];\n        M[x-1][y-1]=!chessboardGame(x-2,y+1) \u0026 !chessboardGame(x-2,y-1) \u0026 !chessboardGame(x+1,y-2) \u0026 !chessboardGame(x-1,y-2);\n        return M[x-1][y-1];\n    }\n}\n\nint main()\n{\n    for(int i=0;i\u003c15;i++)\n        for(int j=0;j\u003c15;j++)\n            M[i][j]=-1;\n    int t;scanf(\"%d\",\u0026t);\n    while(t--)\n    {\n        int x,y;scanf(\"%d %d\",\u0026x,\u0026y);\n        if(chessboardGame(x, y))\n        {\n            printf(\"Second\\n\");\n        }\n        else \n        {\n            printf(\"First\\n\");\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the timeInWords function below.\nint main()\n{\n    map\u003cint,string\u003e n;\n    n[00]=\"o' clock\";n[30]=\"half past \";\n    n[15]=\"quarter past \";n[45]=\"quarter to \";\n    map\u003cint,string\u003e m;\n    m[1]=\"one\";m[2]=\"two\";m[3]=\"three\";m[04]=\"four\";m[05]=\"five\";m[06]=\"six\";m[7]=\"seven\";m[8]=\"eight\";m[9]=\"nine\";m[10]=\"ten\";m[11]=\"eleven\";m[12]=\"twelve\";m[13]=\"thirteen\";m[14]=\"fourteen\";m[15]=\"fifteen\";m[16]=\"sixteen\";m[17]=\"seventeen\";m[18]=\"eighteen\";m[19]=\"nineteen\";m[20]=\"twenty\";m[21]=\"twenty one\";m[22]=\"twenty two\";m[23]=\"twenty three\";m[24]=\"twenty four\";m[25]=\"twenty five\";m[26]=\"twenty six\";m[27]=\"twenty seven\";m[28]=\"twenty eight\";m[29]=\"twenty nine\";\n    int x;\n    cin \u003e\u003e x;\n    int y;\n    cin \u003e\u003e y;\n    if(y==15 || y==30 || y==00 || y==45)\n    {\n        if(y!=00)\n            cout \u003c\u003c n[y] \u003c\u003c m[x]; \n        else if(y==45)\n            cout \u003c\u003c m[x] \u003c\u003c \" \" \u003c\u003c n[y+1];\n        else   \n            cout \u003c\u003c m[x] \u003c\u003c \" \" \u003c\u003c n[y];\n    }\n    else \n    {\n        if(y\u003c=30)\n        {\n            cout \u003c\u003c m[y] \u003c\u003c \" minutes past \" \u003c\u003c m[x];\n        }\n        else\n        {\n            cout \u003c\u003c m[60-y] \u003c\u003c \" minutes to \" \u003c\u003c m[x+1];\n        }\n    }\n    return 0;\n}\n","score":0.75,"language":"cpp"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nint main()\n{\n    map\u003cint,string\u003e n;\n    n[00]=\"o' clock\";n[30]=\"half past \";\n    n[15]=\"quarter past \";n[45]=\"quarter to \";\n    map\u003cint,string\u003e m;\n    m[1]=\"one\";m[2]=\"two\";m[3]=\"three\";m[04]=\"four\";m[05]=\"five\";m[06]=\"six\";m[7]=\"seven\";m[8]=\"eight\";m[9]=\"nine\";m[10]=\"ten\";m[11]=\"eleven\";m[12]=\"twelve\";m[13]=\"thirteen\";m[14]=\"fourteen\";m[15]=\"fifteen\";m[16]=\"sixteen\";m[17]=\"seventeen\";m[18]=\"eighteen\";m[19]=\"nineteen\";m[20]=\"twenty\";m[21]=\"twenty one\";m[22]=\"twenty two\";m[23]=\"twenty three\";m[24]=\"twenty four\";m[25]=\"twenty five\";m[26]=\"twenty six\";m[27]=\"twenty seven\";m[28]=\"twenty eight\";m[29]=\"twenty nine\";\n    int x;\n    cin \u003e\u003e x;\n    int y;\n    cin \u003e\u003e y;\n    if(y==15 || y==30 || y==00 || y==45)\n    {\n        if(y!=00 \u0026\u0026 y!=45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x]; \n        else if(y==45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x+1];\n        else   \n            cout \u003c\u003c m[x] \u003c\u003c \" \" \u003c\u003c n[y];\n    }\n    else \n    {\n        if(y\u003c=30)\n        {\n            cout \u003c\u003c m[y] \u003c\u003c \" minutes past \" \u003c\u003c m[x];\n        }\n        else\n        {\n            cout \u003c\u003c m[60-y] \u003c\u003c \" minutes to \" \u003c\u003c m[x+1];\n        }\n    }\n    return 0;\n}\n","score":0.875,"language":"cpp"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nint main()\n{\n    map\u003cint,string\u003e n;\n    n[00]=\"o' clock\";n[30]=\"half past \";\n    n[15]=\"quarter past \";n[45]=\"quarter to \";\n    map\u003cint,string\u003e m;\n    m[1]=\"one\";m[2]=\"two\";m[3]=\"three\";m[04]=\"four\";m[05]=\"five\";m[06]=\"six\";m[7]=\"seven\";m[8]=\"eight\";m[9]=\"nine\";m[10]=\"ten\";m[11]=\"eleven\";m[12]=\"twelve\";m[13]=\"thirteen\";m[14]=\"fourteen\";m[15]=\"fifteen\";m[16]=\"sixteen\";m[17]=\"seventeen\";m[18]=\"eighteen\";m[19]=\"nineteen\";m[20]=\"twenty\";m[21]=\"twenty one\";m[22]=\"twenty two\";m[23]=\"twenty three\";m[24]=\"twenty four\";m[25]=\"twenty five\";m[26]=\"twenty six\";m[27]=\"twenty seven\";m[28]=\"twenty eight\";m[29]=\"twenty nine\";\n    int x;\n    cin \u003e\u003e x;\n    int y;\n    cin \u003e\u003e y;\n    if(y==15 || y==30 || y==00 || y==45)\n    {\n        if(y!=00 \u0026\u0026 y!=45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x]; \n        else if(y==45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x+1];\n        else   \n            cout \u003c\u003c m[x] \u003c\u003c \" \" \u003c\u003c n[y];\n    }\n    else \n    {\n        if(y\u003c=30)\n        {\n            if(y==1)\n            {\n                cout \u003c\u003c m[y] \u003c\u003c \" minute past \" \u003c\u003c m[x];\n            }\n            else\n                cout \u003c\u003c m[y] \u003c\u003c \" minutes past \" \u003c\u003c m[x];\n        }\n        else\n        {\n            cout \u003c\u003c m[60-y] \u003c\u003c \" minutes to \" \u003c\u003c m[x+1];\n        }\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Time in Words","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\nint main()\n{\n    map\u003cint,string\u003e n;\n    n[00]=\"o' clock\";n[30]=\"half past \";\n    n[15]=\"quarter past \";n[45]=\"quarter to \";\n    map\u003cint,string\u003e m;\n    m[1]=\"one\";m[2]=\"two\";m[3]=\"three\";m[04]=\"four\";m[05]=\"five\";m[06]=\"six\";m[7]=\"seven\";m[8]=\"eight\";m[9]=\"nine\";m[10]=\"ten\";m[11]=\"eleven\";m[12]=\"twelve\";m[13]=\"thirteen\";m[14]=\"fourteen\";m[15]=\"fifteen\";m[16]=\"sixteen\";m[17]=\"seventeen\";m[18]=\"eighteen\";m[19]=\"nineteen\";m[20]=\"twenty\";m[21]=\"twenty one\";m[22]=\"twenty two\";m[23]=\"twenty three\";m[24]=\"twenty four\";m[25]=\"twenty five\";m[26]=\"twenty six\";m[27]=\"twenty seven\";m[28]=\"twenty eight\";m[29]=\"twenty nine\";\n    int x;\n    cin \u003e\u003e x;\n    int y;\n    cin \u003e\u003e y;\n    if(y==15 || y==30 || y==00 || y==45)\n    {\n        if(y!=00 \u0026\u0026 y!=45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x]; \n        else if(y==45)\n            cout \u003c\u003c n[y] \u003c\u003c m[x+1];\n        else   \n            cout \u003c\u003c m[x] \u003c\u003c \" \" \u003c\u003c n[y];\n    }\n    else \n    {\n        if(y\u003c=30)\n        {\n            if(y==1)\n            {\n                cout \u003c\u003c m[y] \u003c\u003c \" minute past \" \u003c\u003c m[x];\n            }\n            else\n                cout \u003c\u003c m[y] \u003c\u003c \" minutes past \" \u003c\u003c m[x];\n        }\n        else\n        {\n            cout \u003c\u003c m[60-y] \u003c\u003c \" minutes to \" \u003c\u003c m[x+1];\n        }\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Chocolate Feast ","code":"#include \u003ciostream\u003e\nusing namespace std;\nint chocolateFeast(int n, int c, int m) {\n    if(n/c==0)\n        return 0;\n    else \n        return n/c + chocolateFeast(n/c+n%c,m,m);\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n,c,m;cin \u003e\u003e n \u003e\u003e c \u003e\u003e m;\n        int result = chocolateFeast(n, c, m);\n        cout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Chocolate Feast ","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nint chocolateFeast(int n, int c, int m,bool p) {\n    if(n/c==0)\n        return 0;\n    else \n    {\n        if(!p)\n            return n/c + chocolateFeast(n/c,m,m,1);\n        return n/c + chocolateFeast(n/c+n%c,m,m,1);\n    }\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n,c,m;cin \u003e\u003e n \u003e\u003e c \u003e\u003e m;\n        int result = chocolateFeast(n, c, m,0);\n        cout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Encryption","code":"#include \u003ccmath\u003e\n#include\u003ciostream\u003e\n#include \u003cstring\u003e\n#include\u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    string s;int total=0;\n    getline(cin,s);\n    for (int i = 0; s[i]; i++) \n        if (s[i] != ' ') \n            s[total++] = s[i];\n    s[total] = '\\0';int row,col;\n    if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n    {\n        row=sqrt(total);col=row+1;\n    }\n    else \n    {\n        row=col=sqrt(total)+1;\n    }\n    //cout \u003c\u003c s \u003c\u003c \" \" \u003c\u003c row \u003c\u003c \" \" \u003c\u003c col \u003c\u003c endl;\n    {\n        for(int i=0;i\u003ccol;i++)\n        {\n            for(int j=0;j\u003crow;j++)\n            {\n                if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n                {\n                    if(i+j*(row+1)\u003e=total) break;\n                    cout \u003c\u003c s[i+j*(row+1)];\n                }\n                else\n                {\n                    if(i+j*(row)\u003e=total) break;\n                    cout \u003c\u003c s[i+j*(row)];\n                    \n                }\n            }\n            cout \u003c\u003c \" \";\n        }\n    }\n}\n","score":0.7,"language":"cpp"},{"contest":"Master","challenge":"Encryption","code":"#include \u003ccmath\u003e\n#include\u003ciostream\u003e\n#include \u003cstring\u003e\n#include\u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    string s;int total=0;\n    getline(cin,s);\n    for (int i = 0; s[i]; i++) \n        if (s[i] != ' ') \n            s[total++] = s[i];\n    s[total] = '\\0';int row,col;\n    if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n    {\n        if((int)sqrt(total)*(int)sqrt(total)==total)\n            row=col=sqrt(total);\n        else\n            row=sqrt(total);col=row+1;\n    }\n    else \n    {\n        row=col=sqrt(total)+1;\n    }\n    //cout \u003c\u003c s \u003c\u003c \" \" \u003c\u003c s.size() \u003c\u003c \" \" \u003c\u003c row \u003c\u003c \" \" \u003c\u003c col \u003c\u003c endl;\n    {\n        for(int i=0;i\u003ccol;i++)\n        {\n            for(int j=0;j\u003crow;j++)\n            {\n                if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n                {\n                    if(i+j*(row+1)\u003e=total) break;\n                    if((int)sqrt(total)*(int)sqrt(total)==total)\n                        cout \u003c\u003c s[i+j*(row)];\n                    else\n                        cout \u003c\u003c s[i+j*(row+1)];\n                }\n                else\n                {\n                    if(i+j*(row)\u003e=total) break;\n                    cout \u003c\u003c s[i+j*(row)];\n                    \n                }\n            }\n            cout \u003c\u003c \" \";\n        }\n    }\n}\n","score":0.7,"language":"cpp"},{"contest":"Master","challenge":"Encryption","code":"#include \u003ccmath\u003e\n#include\u003ciostream\u003e\n#include \u003cstring\u003e\n#include\u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    string s;int total=0;\n    getline(cin,s);\n    for (int i = 0; s[i]; i++) \n        if (s[i] != ' ') \n            s[total++] = s[i];\n    s[total] = '\\0';int row,col;\n    if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n    {\n        if((int)sqrt(total)*(int)sqrt(total)==total)\n           row=col=sqrt(total);\n        else\n         {   row=sqrt(total);col=row+1;}\n    }\n    else \n    {\n        row=col=sqrt(total)+1;\n    }\n    cout \u003c\u003c s \u003c\u003c \" \" \u003c\u003c total \u003c\u003c \" \" \u003c\u003c row \u003c\u003c \" \" \u003c\u003c col \u003c\u003c endl;\n    {\n        for(int i=0;i\u003ccol;i++)\n        {\n            for(int j=0;j\u003crow;j++)\n            {\n                if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n                {\n                    \n                    if((int)sqrt(total)*(int)sqrt(total)==total)\n                    {if(i+j*(row)\u003e=total) break;cout \u003c\u003c s[i+j*(row)];}\n                    else\n                    {if(i+j*(row+1)\u003e=total) break;cout \u003c\u003c s[i+j*(row+1)];}\n                }\n                else\n                {\n                    if(i+j*(row)\u003e=total) break;\n                    cout \u003c\u003c s[i+j*(row)];\n                    \n                }\n            }\n            cout \u003c\u003c \" \";\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Encryption","code":"#include \u003ccmath\u003e\n#include\u003ciostream\u003e\n#include \u003cstring\u003e\n#include\u003cvector\u003e\nusing namespace std;\n\nint main()\n{\n    string s;int total=0;\n    getline(cin,s);\n    for (int i = 0; s[i]; i++) \n        if (s[i] != ' ') \n            s[total++] = s[i];\n    s[total] = '\\0';int row,col;\n    if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n    {\n        if((int)sqrt(total)*(int)sqrt(total)==total)\n           row=col=sqrt(total);\n        else\n         {   row=sqrt(total);col=row+1;}\n    }\n    else \n    {\n        row=col=sqrt(total)+1;\n    }\n    //cout \u003c\u003c s \u003c\u003c \" \" \u003c\u003c total \u003c\u003c \" \" \u003c\u003c row \u003c\u003c \" \" \u003c\u003c col \u003c\u003c endl;\n    {\n        for(int i=0;i\u003ccol;i++)\n        {\n            for(int j=0;j\u003crow;j++)\n            {\n                if((int)sqrt(total)*((int)sqrt(total)+1)\u003e=total) \n                {\n                    \n                    if((int)sqrt(total)*(int)sqrt(total)==total)\n                    {if(i+j*(row)\u003e=total) break;cout \u003c\u003c s[i+j*(row)];}\n                    else\n                    {if(i+j*(row+1)\u003e=total) break;cout \u003c\u003c s[i+j*(row+1)];}\n                }\n                else\n                {\n                    if(i+j*(row)\u003e=total) break;\n                    cout \u003c\u003c s[i+j*(row)];\n                    \n                }\n            }\n            cout \u003c\u003c \" \";\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint xoringNinja(vector\u003clong long\u003e arr) {\n    if(arr.empty()) return 0;\n    if(arr.size()==1) return arr[0];\n    int a=arr[arr.size()-1]; arr.pop_back();\n    return xoringNinja(arr)^a;\n}\nint subs4subs(vector\u003clong long\u003e arr,int i,vector\u003clong long\u003e v,long long n) {\n    n=xoringNinja(v);\n    long long m=n;vector\u003clong long\u003e w=v;w.pop_back();w.push_back(arr[i-1]);v.push_back(arr[i-1]);\n\n    if(i==0) return n;\n    return n+=subs4subs(arr,i-1,v,n)+subs4subs(arr,i-1,w,m);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        vector\u003clong long\u003e w={v[n-1]};\n        cout \u003c\u003c subs4subs(v,n-1,w,0)\u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n//rework it using bitset where subs4subs generate the subsets in form of binaries and xor func goes through arr (0 means skip 1 means operate on)\nint xor_rec(vector\u003clong long\u003e arr) {\n    if(arr.empty()) return 0;\n    if(arr.size()==1) return arr[0];\n    int a=arr[arr.size()-1]; arr.pop_back();\n    return xor_rec(arr)^a;\n}\nint xor_iter(vector\u003clong long\u003e arr) {\n    if(arr.empty()) return 0;int ttl=arr[0];\n    for(int i=1;i\u003carr.size();i++) ttl^=arr[i];\n    return ttl;\n}\nint subs4subs(vector\u003clong long\u003e arr,int i,vector\u003clong long\u003e v,long long n) {\n    n=xor_iter(v);//n=xor_rec(v);\n    long long m=n;vector\u003clong long\u003e w=v;w.pop_back();w.push_back(arr[i-1]);v.push_back(arr[i-1]);\n    if(i==0) return n;\n    return n+=subs4subs(arr,i-1,v,n)+subs4subs(arr,i-1,w,m);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        vector\u003clong long\u003e w={v[n-1]};\n        cout \u003c\u003c subs4subs(v,n-1,w,0)\u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n//rework it using bitset where subs4subs generate the subsets in form of binaries and xor func goes through arr (0 means skip 1 means operate on);\nmap\u003cvector\u003clong long\u003e,long long\u003e Memo;\nint xor_rec(vector\u003clong long\u003e arr,map\u003cvector\u003clong long\u003e,long long\u003e Memo) {\n    if(arr.empty()) return 0;\n    if(arr.size()==1) return arr[0];\n    if(Memo[arr]) return Memo[arr];\n    int a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint xor_iter(vector\u003clong long\u003e arr) {\n    if(arr.empty()) return 0;int ttl=arr[0];\n    for(int i=1;i\u003carr.size();i++) ttl^=arr[i];\n    return ttl;\n}\nint subs4subs(vector\u003clong long\u003e arr,int i,vector\u003clong long\u003e v,long long n) {\n    n=xor_rec(v,Memo);//n=xor_iter(v);\n    long long m=n;vector\u003clong long\u003e w=v;w.pop_back();w.push_back(arr[i-1]);v.push_back(arr[i-1]);\n    if(i==0) return n;\n    return n+=subs4subs(arr,i-1,v,n)+subs4subs(arr,i-1,w,m);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        vector\u003clong long\u003e w={v[n-1]};\n        cout \u003c\u003c subs4subs(v,n-1,w,0)\u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\n//rework it using bitset where subs4subs generate the subsets in form of binaries and xor func goes through arr (0 means skip 1 means operate on);\nmap\u003cvector\u003clong long\u003e,long long\u003e Memo;\nlong long xor_rec(vector\u003clong long\u003e arr) {\n    if(arr.empty()) return 0;\n    if(arr.size()==1) return arr[0];\n    if(Memo[arr]) return Memo[arr];\n    long long a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint subs4subs(vector\u003clong long\u003e arr,int i,vector\u003clong long\u003e v,long long n) {\n    n=xor_rec(v);//n=xor_iter(v);\n    long long m=n;vector\u003clong long\u003e w=v;w.pop_back();w.push_back(arr[i-1]);v.push_back(arr[i-1]);\n    if(i==0) return n;\n    return n+=subs4subs(arr,i-1,v,n)+subs4subs(arr,i-1,w,m);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        vector\u003clong long\u003e w={v[n-1]};\n        cout \u003c\u003c subs4subs(v,n-1,w,0)\u003c\u003c\"\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nmap\u003cvector\u003clong long\u003e,long long\u003e Memo;\nlong long xor_rec(vector\u003clong long\u003e arr,map\u003cvector\u003clong long\u003e,long long\u003e Memo) {\n    if(arr.empty()) return 0;\n    if(Memo[arr]) return Memo[arr];\n    long long a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        long long ttl=0;\n        for(int i=1;i\u003c(1\u003c\u003cv.size());i++)\n        {\n            vector\u003clong long\u003e w={};\n            bitset\u003c131072\u003e bit(i);\n            for(int j=0;j\u003cv.size();j++)\n            {\n            if(bit[j]) w.push_back(v[j]);\n            }\n            ttl+=xor_rec(w,Memo);\n        }\n        cout \u003c\u003c ttl \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nlong long xor_rec(vector\u003clong long\u003e arr,map\u003cvector\u003clong long\u003e,long long\u003e Memo) {\n    if(arr.empty()) return 0;\n    if(Memo[arr]) return Memo[arr];\n    long long a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        map\u003cvector\u003clong long\u003e,long long\u003e Memo;\n        int n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        long long ttl=0;\n        for(int i=1;i\u003c(1\u003c\u003cv.size());i++)\n        {\n            vector\u003clong long\u003e w={};\n            bitset\u003c131072\u003e bit(i);\n            for(int j=0;j\u003cv.size();j++)\n            {\n                if(bit[j]) w.push_back(v[j]);\n            }\n            ttl+=xor_rec(w,Memo);\n        }\n        cout \u003c\u003c ttl \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nlong long xor_rec(vector\u003clong long\u003e arr,map\u003cvector\u003clong long\u003e,long long\u003e Memo) {\n    if(arr.empty()) return 0;\n    if(Memo[arr]) return Memo[arr];\n    long long a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        map\u003cvector\u003clong long\u003e,long long\u003e Memo;\n        long long n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        long long ttl=0;\n        for(int i=1;i\u003c(1\u003c\u003cv.size());i++)\n        {\n            vector\u003clong long\u003e w={};\n            bitset\u003c131072\u003e bit(i);\n            for(int j=0;j\u003cv.size();j++)\n            {\n                if(bit[j]) w.push_back(v[j]);\n            }\n            ttl+=xor_rec(w,Memo);\n        }\n        cout \u003c\u003c ttl \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nlong long xor_rec(vector\u003clong long\u003e arr,map\u003cvector\u003clong long\u003e,long long\u003e Memo) {\n    if(arr.empty()) return 0;\n    if(Memo[arr]) return Memo[arr];\n    long long a=arr[arr.size()-1]; arr.pop_back();\n    Memo[arr]=xor_rec(arr,Memo)^a;return Memo[arr];\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        map\u003cvector\u003clong long\u003e,long long\u003e Memo;\n        long long n;cin\u003e\u003en;vector\u003clong long\u003e v(n,0);\n        for(int i=0;i\u003cn;i++) cin \u003e\u003e v[i];\n        long long ttl=0;\n        for(int i=1;i\u003c(1\u003c\u003cv.size());i++)\n        {\n            vector\u003clong long\u003e w={};\n            bitset\u003c131072\u003e bit(i);\n            for(int j=0;j\u003cv.size();j++)\n            {\n                if(bit[j]) w.push_back(v[j]);\n            }\n            ttl+=xor_rec(w,Memo)%(1000000007);\n        }\n        cout \u003c\u003c ttl \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nlong long big_pow_mod(long long a, long long n, long long m)\n{\n    if(n==0) return 1;if(a==1) return 1;\n    if(n%2==0) return ((big_pow_mod(a,n/2,m)%m)*(big_pow_mod(a,n/2,m)%m))%m;\n    else return ((big_pow_mod(a,n-1,m)%m)*(a%m))%m;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        long long a=0;\n        for(int i=0;i\u003cn;i++) \n        {\n            int k; cin \u003e\u003e k; a|=k;\n        }\n        a*=big_pow_mod(2,n-1,1000000007)%1000000007;\n        cout \u003c\u003c a \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nlong long int power(long long int n, long long int k)\n{\n  long long int result, pow;\n  if(k==0)\n    return 1;\n  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  result=n%1000000007;\n  pow=1;\n  while(pow*2\u003c=k)\n  {\n    pow=pow*2;\n    result=(result*result);\n    result=result%1000000007;\n  }\n \n  if(k-pow!=0)\n  result=result*power(n, k-pow);\n  result=result%1000000007;\n \n  return result;\n}\n \nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        long long a=0;\n        for(int i=0;i\u003cn;i++) \n        {\n            int k; cin \u003e\u003e k; a|=k;\n        }\n        a*=power(2,n-1)%1000000007;\n        cout \u003c\u003c a \u003c\u003c\"\\n\";\n    }\n}\n","score":0.371428571429,"language":"cpp"},{"contest":"Master","challenge":"Xoring Ninja","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n    \n#define MOD 1000000007\n    \nlong long int power(long long int n, long long int k)\n{\n  long long int result, pow;\n  if(k==0)\n    return 1;\n  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  result=n%MOD;\n  pow=1;\n  while(pow*2\u003c=k)\n  {\n    pow=pow*2;\n    result=(result*result);\n    result=result%MOD;\n  }\n \n  if(k-pow!=0)\n  result=result*power(n, k-pow);\n  result=result%MOD;\n \n  return result;\n}\n    \nint main() {\n  int t;\n  cin\u003e\u003et;\n  while(t--)\n    {\n    int n;\n    cin\u003e\u003en;\n    long long ans=0,temp;\n    for(int i=0;i\u003cn;i++)\n      {\n      cin\u003e\u003etemp;\n      ans|=temp;\n      }\n    ans*=power(2,n-1);\n    ans%=MOD;\n    cout\u003c\u003cans\u003c\u003c\"\\n\";\n   }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"The Grid Search","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cutility\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\nbool GridSearch(vector\u003cstring\u003e G, vector\u003cstring\u003e P) {\n    int j=0;int p=0;\n    for(int i=0;i\u003c=G[0].size()-P[0].size();i++)\n    {\n        if(G[j][i]==P[0][p]) { p++;}\n        \n        if(p==P[0].size()-1 \u0026\u0026 j\u003cG.size()-P.size()) \n        { \n            int t=0;\n            for(int l=1;l\u003cP.size();l++)\n            {\n                for(int m=0;m\u003cP[0].size();m++)\n                {\n                    if(P[l][m]==G[j+l][i-p+1+m]) t++;\n                    else {p=0;break;}\n                }\n            }\n            if(t==(P.size()-1)*(P[0].size())) return true;\n            p=0;\n        }\n        if(p \u0026\u0026 G[j][i+1]!=P[0][p]) p=0;\n        if(i==G[0].size()-P[0].size()-1) {i=0;j++;p=0;}\n        if(j==G.size()-P.size()-1) {break;}\n    }\n    return false;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int C,R;cin \u003e\u003e C \u003e\u003e R;\n        vector\u003cstring\u003e v(C,\"\");\n        for(int i=0;i\u003cC;i++)\n        {\n            cin \u003e\u003e v[i];\n        }\n        int c,r;cin \u003e\u003e c \u003e\u003e r;\n        vector\u003cstring\u003e w(c,\"\");\n        for(int i=0;i\u003cc;i++)\n        {\n            cin \u003e\u003e w[i];\n        }\n        if(GridSearch(v,w)) \n            cout \u003c\u003c \"YES\\n\";\n        else \n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.235294117647,"language":"cpp"},{"contest":"Master","challenge":"The Grid Search","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cutility\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\nbool GridSearch(vector\u003cstring\u003e G, vector\u003cstring\u003e P) {\n    int j=0;int p=0;\n    for(int i=0;i\u003c=G[0].size()-P[0].size();i++)\n    {\n        if(G[j][i]==P[0][p]) { p++;}\n        if(p==P[0].size()-1 \u0026\u0026 j\u003cG.size()-P.size()) \n        { \n            int t=0;\n            for(int l=1;l\u003cP.size();l++)\n            {\n                for(int m=0;m\u003cP[0].size();m++)\n                {\n                    if(P[l][m]==G[j+l][i-p+1+m]) t++;\n                    else {i-=p;p=0;i++;break;}\n                }\n            }\n            if(t==(P.size()-1)*(P[0].size())) return true;\n            i-=p;i++;\n            p=0;\n        }\n        //if(p \u0026\u0026 G[j][i+1]!=P[0][p]) p=0;\n        if(i==G[0].size()-P[0].size()-1) {i=0;j++;p=0;}\n        if(j==G.size()-P.size()-1) {break;}\n    }\n    return false;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int C,R;cin \u003e\u003e C \u003e\u003e R;\n        vector\u003cstring\u003e v(C,\"\");\n        for(int i=0;i\u003cC;i++)\n        {\n            cin \u003e\u003e v[i];\n        }\n        int c,r;cin \u003e\u003e c \u003e\u003e r;\n        vector\u003cstring\u003e w(c,\"\");\n        for(int i=0;i\u003cc;i++)\n        {\n            cin \u003e\u003e w[i];\n        }\n        if(GridSearch(v,w)) \n            cout \u003c\u003c \"YES\\n\";\n        else \n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.411764705882,"language":"cpp"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biker_is_stroonekr(string w) {\n    bool p=false;int j;\n    for(int i=w.size();i\u003e=0;i--)\n    {\n        for(j=i-1;j\u003e=0;j--)\n        {\n            if(w[j]\u003cw[i]){\n                char t=w[i];w[i]=w[j];w[j]=t;\n                if(j!=i-1) p=!p;\n                goto top;\n            } \n        }\n    }\n    top:\n    if(p)\n    {\n        sort(w.begin()+j+1,w.end());\n    }\n    return w;\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string s;cin \u003e\u003e s;string ss=biker_is_stroonekr(s);\n        s=(ss==s?\"no answer\":ss);cout \u003c\u003c s \u003c\u003c \"\\n\" ;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biker_is_stroonekr(string w) {\n    bool p=false;int j;\n    for(int i=w.size();i\u003e=0;i--)\n    {\n        for(j=i-1;j\u003e=0;j--)\n        {\n            //cout \u003c\u003c w \u003c\u003c \" \";\n            if(w[j]\u003cw[i]){\n                char t=w[i];w[i]=w[j];w[j]=t;\n                if(j!=w.size()-1) p=!p;\n                //cout \u003c\u003c w \u003c\u003c endl;\n                goto top;\n            } \n        }\n    }\n    top:\n    if(p)\n    {\n        sort(w.begin()+j+1,w.end());\n    }\n    return w;\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string s;cin \u003e\u003e s;string ss=biker_is_stroonekr(s);\n        s=(ss==s?\"no answer\":ss);cout \u003c\u003c s \u003c\u003c \"\\n\" ;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biker_is_stroonekr(string w) {\n    map\u003cint,int\u003e m;\n    bool p=false;\n    for(int i=w.size();i\u003e=0;i--)\n    {\n        for(int j=i-1;j\u003e=0;j--)\n        {\n            if(w[j]\u003cw[i]){\n                m[i]=j;\n                break;\n            } \n        }\n    }\n    top:\n    int j=-1;int i=-1;\n    for(map\u003cint,int\u003e::iterator it=m.begin();it!=m.end();it++)\n    {\n        if(it-\u003esecond\u003e=j \u0026\u0026 it-\u003efirst\u003ei) {\n            j=it-\u003esecond;i=it-\u003efirst;\n        }\n    }\n    if(j!=-1) {char t=w[i];w[i]=w[j];w[j]=t;if(j!=w.size()-1) p=!p;}\n    \n    if(p)\n    {\n        sort(w.begin()+j+1,w.end());\n    }\n    return w;\n}\n\nint main()\n{\n    int n,m;cin \u003e\u003e n;m=n;\n    while(n--)\n    {\n        string s;cin \u003e\u003e s;string ss=biker_is_stroonekr(s);\n        s=(ss==s?\"no answer\":ss);cout \u003c\u003c s \u003c\u003c \"\\n\" ;//\n    }\n\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Bigger is Greater","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the biggerIsGreater function below.\nstring biker_is_stroonekr(string w) {\n    map\u003cint,int\u003e m;\n    bool p=false;\n    for(int i=w.size();i\u003e=0;i--)\n    {\n        for(int j=i-1;j\u003e=0;j--)\n        {\n            if(w[j]\u003cw[i]){\n                m[i]=j;\n                break;\n            } \n        }\n    }\n    top:\n    int j=-1;int i=-1;\n    for(map\u003cint,int\u003e::iterator it=m.begin();it!=m.end();it++)\n    {\n        if(it-\u003esecond\u003e=j \u0026\u0026 it-\u003efirst\u003ei) {\n            j=it-\u003esecond;i=it-\u003efirst;\n        }\n    }\n    if(j!=-1) {char t=w[i];w[i]=w[j];w[j]=t;if(j!=w.size()-1) p=!p;}\n    \n    if(p)\n    {\n        sort(w.begin()+j+1,w.end());\n    }\n    return w;\n}\n\nint main()\n{\n    int n,m;cin \u003e\u003e n;m=n;\n    while(n--)\n    {\n        string s;cin \u003e\u003e s;string ss=biker_is_stroonekr(s);\n        s=(ss==s?\"no answer\":ss);cout \u003c\u003c s \u003c\u003c \"\\n\" ;//\n    }\n\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Beautiful Triplets","code":"#include \u003cbits/stdc++.h\u003e\n#define read(n) int n;cin \u003e\u003e n;\nusing namespace std;\nint main()\n{\n    map\u003cint,int\u003e m;int count=0;\n    read(n);read(d);vector\u003cint\u003e v;\n    while(n--)\n    {\n        read(c);m[c]++;v.push_back(c);\n    }\n    for(int i=0;i\u003cv.size();i++)\n    {\n        if(m[v[i]+d] \u0026\u0026 m[v[i]+2*d]) count++;\n    }\n    cout \u003c\u003c count;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Minimum Distances","code":"#include \u003cbits/stdc++.h\u003e\n#define read(n) int n;cin \u003e\u003e n\n#define make(i,a) int i=a;\nusing namespace std;\n\nint main()\n{\n    read(n);map\u003cint,pair\u003cint,int\u003e\u003e m;make(i,0);make(ans,n+1);\n    while(i\u003cn)\n    {\n        read(t);\n        if(m[t].first) {\n            if(i-m[t].first\u003cm[t].second) m[t].second=i-m[t].first;\n            m[t].first=i;\n        }\n        else { \n            m[t].first=i;m[t].second=n+1;\n        }\n        i++;\n    }\n    for(map\u003cint,pair\u003cint,int\u003e\u003e::iterator it=m.begin();it!=m.end();it++)\n    {\n        if(it-\u003esecond.second\u003cans) ans=it-\u003esecond.second;\n    }\n    if(ans==n+1) cout \u003c\u003c -1;\n    else cout \u003c\u003c ans;\n}\n","score":0.875,"language":"cpp"},{"contest":"Master","challenge":"Minimum Distances","code":"#include \u003cbits/stdc++.h\u003e\n#define read(n) int n;cin \u003e\u003e n\n#define make(i,a) int i=a;\nusing namespace std;\n\nint main()\n{\n    read(n);map\u003cint,pair\u003cint,int\u003e\u003e m;make(i,1);\n    while(i\u003c=n)\n    {\n        read(t);\n        if(m[t].first) {\n            if(i-m[t].first\u003c=m[t].second) m[t].second=i-m[t].first;\n            m[t].first=i;\n        }\n        else { \n            m[t].first=i;m[t].second=n+1;\n        }\n        i++;\n    }\n    int ans=n+1;\n    for(map\u003cint,pair\u003cint,int\u003e\u003e::iterator it=m.begin();it!=m.end();it++)\n    {\n        if(it-\u003esecond.second\u003cans) ans=it-\u003esecond.second;\n    }\n    if(ans==n+1) cout \u003c\u003c -1;\n    else cout \u003c\u003c ans;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Halloween Sale","code":"#include \u003cbits/stdc++.h\u003e\n#define read(n) int n;cin \u003e\u003e n\n#define make(i,a) int i=a\n#define print(a) cout \u003c\u003c a\nusing namespace std;\n\nint main()\n{\n    read(p);read(d);read(m);read(s);make(count,0);\n    while(s-p\u003e=0)\n    {\n        if(p-d\u003cm)\n        {\n            count++;\n            s-=m;\n        }\n        else\n        {\n            count++;s-=p;\n            p-=d;\n        }\n    }\n    print(count);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Halloween Sale","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\n#define read(n) int n;scanf(\"%d\",\u0026n)\n#define make(i,a) int i=a\n#define print(a) printf(\"%d\",a)\nusing namespace std;\n\nint main()\n{\n    read(p);read(d);read(m);read(s);make(count,0);\n    while(s-p\u003e=0)\n    {\n        if(p-d\u003cm)\n        {\n            count++;\n            s-=m;\n        }\n        else\n        {\n            count++;s-=p;\n            p-=d;\n        }\n    }\n    print(count);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Service Lane","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a) int a;scanf(\"%d\",\u0026a)\n#define init(a,b) int a=b\n#define print(a) scanf(\"%d\",a)\nusing namespace std;\nint serviceLane(int a,int b,vector\u003cint\u003e v) {\n    int m=v[a];\n    for(int i=a;i\u003c=b;i++)\n        m=min(m,v[i]);\n    return m;\n}\n\nint main()\n{\n    read(n);read(m);vector\u003cint\u003e v;vector\u003cpair\u003cint,int\u003e\u003e w(m);init(i,0);\n    while(n--){read(t);v.push_back(t);}\n    while(i\u003cm){cin \u003e\u003e w[i].first;cin \u003e\u003e w[i].second;i++;}\n    for(int i=0;i\u003cw.size();i++) cout \u003c\u003c serviceLane(w[i].first,w[i].second,v) \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Service Lane","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a) int a;scanf(\"%d\",\u0026a)\n#define init(a,b) int a=b\n#define print(a) scanf(\"%d\",a)\nusing namespace std;\nint serviceLane(int a,int b,vector\u003cint\u003e v) {\n    int m=v[a];\n    for(int i=a;i\u003c=b;i++)\n        m=min(m,v[i]);\n    return m;\n}\n\nint main()\n{\n    read(n);read(m);vector\u003cint\u003e v;vector\u003cpair\u003cint,int\u003e\u003e w(m);init(i,0);\n    while(n--){read(t);v.push_back(t);}\n    while(i\u003cm){cin \u003e\u003e w[i].first;cin \u003e\u003e w[i].second;i++;}\n    for(int i=0;i\u003cw.size();i++) cout \u003c\u003c serviceLane(w[i].first,w[i].second,v) \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Find the Point","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\n\nclass point\n{\n    public:\n    point();\n    point(int a,int b)\n    {\n        x=a;y=b;\n    }\n    int x;int y;\n};\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        int a,b,c,d;cin \u003e\u003e a \u003e\u003e b \u003e\u003e c \u003e\u003e d;\n        point p(a,b);point s(c,d);point r(2*s.x-p.x,2*s.y-p.y);\n        cout \u003c\u003c r.x \u003c\u003c \" \" \u003c\u003c r.y \u003c\u003c endl; \n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Draws","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the maximumDraws function below.\n */\nint maximumDraws(int n) {\n    if(n==1) return 2;\n    else \n        return n*2-1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = maximumDraws(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Draws","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n/*\n * Complete the maximumDraws function below.\n */\nint maximumDraws(int n) {\n    if(n==0) return 0;\n    if(n==1) return 2;\n    else \n        return n+1;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = maximumDraws(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Handshake","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong long fact(int n)\n{\n    if(n==0) return 1;\n    else \n    {\n        long long i=1;\n        while(n\u003e0)\n        {\n            i*=n;n--;\n        }\n        return i;\n    }\n}\nint handshake(int n) {\n    if(n==0 || n==1) return 0;\n    return fact(n)/(fact(n-2)*2);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int t;\n    cin \u003e\u003e t;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int t_itr = 0; t_itr \u003c t; t_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        int result = handshake(n);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Handshake","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\nlong long handshake(int n) {\n    if(n==1 || n==0) return 0;\n    else \n    {\n        return n*(n-1)/2;\n    }\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        cout \u003c\u003c handshake(a) \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Minimum Height Triangle","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint lowestTriangle(int base, int area){\n    float t=(float)area*2/(float)base;int tt=t;\n    if(t==tt) return tt;\n    else return tt+1;\n}\n\nint main() {\n    int base;\n    int area;\n    cin \u003e\u003e base \u003e\u003e area;\n    int height = lowestTriangle(base, area);\n    cout \u003c\u003c height \u003c\u003c endl;\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Summing the N series ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong long summingSeries(long n) {\n    return ((n%10000007)*(n%10000007))%10000007;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        long a;cin \u003e\u003e a;\n        cout \u003c\u003c summingSeries(a) \u003c\u003c endl;\n    }\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Summing the N series ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong long summingSeries(long n) {\n    return ((n%1000000007)*(n%1000000007))%1000000007;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        long a;cin \u003e\u003e a;\n        cout \u003c\u003c summingSeries(a) \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Is Fibo","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nconst double theta = (1+sqrt(5))/2;\nconst double phi = (1-sqrt(5))/2;\nstring solve(long n) {\n    for(int i=0;;i++)\n    {    \n        long long test=(pow(theta,i)-pow(phi,i))/sqrt(5);// cout \u003c\u003c test \u003c\u003c endl;\n        if(test==n)\n            return \"IsFibo\";\n        if(test\u003en)\n            return \"IsNotFibo\";\n    }\n}\n\nint main() {\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        long a;cin \u003e\u003e a;\n        cout \u003c\u003c solve(a) \u003c\u003c endl;\n    }\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Is Fibo","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nconst double theta = (1+sqrt(5))/2;\nconst double phi = (1-sqrt(5))/2;\nint main() {\n    int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n    while(n--)\n    {\n        long a;cin \u003e\u003e a;v.push_back(a);\n    }\n    sort(v.begin(),v.end());\n    int j=0;\n    for(int i=0;j\u003cv.size();i++)\n    {    \n        long long test=(pow(theta,i)-pow(phi,i))/sqrt(5);// cout \u003c\u003c test \u003c\u003c endl;\n        if(test==v[j])\n        {\n             cout \u003c\u003c \"IsFibo\\n\";if(j==v.size()-1) break;j++;\n        }\n        \n        if(test\u003ev[j])\n        {\n             cout \u003c\u003c \"IsNotFibo\\n\";if(j==v.size()-1) break;j++;i--;\n        }\n    }\n}\n\n","score":0.333333333333,"language":"cpp"},{"contest":"Master","challenge":"Is Fibo","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nconst double theta = (1+sqrt(5))/2;\nconst double phi = (1-sqrt(5))/2;\nint main() {\n    map\u003cint,vector\u003cint\u003e\u003e m;\n    int n;cin \u003e\u003e n;vector\u003cbool\u003e v(n,0);int i=0;\n    while(i\u003cn)\n    {\n        long a;cin \u003e\u003e a;m[a].push_back(i);i++;\n    }\n    auto j= m.begin();\n    for(int i=0;j!=m.end();i++)\n    {    \n        long long test=(pow(theta,i)-pow(phi,i))/sqrt(5);\n        if(test==j-\u003efirst)\n        {\n             while(!j-\u003esecond.empty())\n             {\n                 v[j-\u003esecond[j-\u003esecond.size()-1]]=1;\n                 j-\u003esecond.pop_back();\n             }\n             if(j++==m.end()) break;\n             i--;\n        }\n        if(test\u003ej-\u003efirst)\n        {\n            if(j++==m.end()) break;\n             i--;\n        }\n    }\n    for(int i=0;i\u003cv.size();i++)\n        if(v[i]) \n            cout \u003c\u003c \"IsFibo\\n\";\n        else\n            cout \u003c\u003c \"IsNotFibo\\n\";\n}\n\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Is Fibo","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nconst double theta = (1+sqrt(5))/2;\nconst double phi = (1-sqrt(5))/2;\nint main() {\n    map\u003clong,bool\u003e m;\n    int n;cin \u003e\u003e n;vector\u003clong\u003e v;long x=0;\n    while(n--)\n    {\n        long a;cin \u003e\u003e a;x=max(x,a);v.push_back(a);\n    }\n    for(int i=0;;i++)\n    {    \n        long long test=(pow(theta,i)-pow(phi,i))/sqrt(5);\n        m[test]=1;\n        if(test\u003e=x) break;\n    }\n    for(int i=0;i\u003cv.size();i++)\n    {\n       if(m[v[i]]) \n            cout \u003c\u003c \"IsFibo\\n\";\n       else \n            cout \u003c\u003c \"IsNotFibo\\n\";\n    }\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v(n+1);long long tst=1;v[0]=v[v.size()-1]=tst;\n        for(int i=1;i\u003c=(v.size())/2;i++,n--)\n        {\n            v[i]=v[v.size()-i-1]=v[i-1]*n/i;       \n        }\n        for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.157894736842,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v(n+1);long long tst=1;v[0]=v[v.size()-1]=tst;\n        for(int i=1;i\u003c=(v.size())/2;i++,n--)\n        {\n            v[i]=v[v.size()-i-1]=((v[i-1]%1000000000)*(n%1000000000)/i)%1000000000;       \n        }\n        for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.157894736842,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003clong long\u003e v(n+1);long long tst=1;v[0]=v[v.size()-1]=tst;\n        for(int i=1;i\u003c=(v.size())/2;i++,n--)\n        {\n            v[i]=v[v.size()-i-1]=((v[i-1]%1000000000)*(n%1000000000)/i)%1000000000;       \n        }\n        for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.157894736842,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003clong long\u003e v(n+1);long long tst=1;v[0]=v[v.size()-1]=tst;\n        cout \u003c\u003c v[0] \u003c\u003c \" \";\n        for(long long i=1;i\u003cv.size();i++,n--)\n        {\n            v[i]=((v[i-1]%1000000000)*(n%1000000000)/i)%1000000000;    \n            cout \u003c\u003c v[i] \u003c\u003c \" \";\n        }\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.157894736842,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"t=int(input())\nfor i in range(t):\n    n=int(input())\n    v=[]\n    for j in range(n+1):\n        if(j==0):\n            v.append(1)\n        else :\n            v.append(v[j-1]*(n+1-j)/j)\n        print(str(int(v[j])), end = ' ')\n    print()\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"t=int(input())\nfor i in range(t):\n    n=int(input())\n    v=[]\n    for j in range(n+1):\n        if(j==0):\n            v.append(1)\n        else :\n            v.append(v[j-1]*(n+1-j)/j)\n        print(str(int(v[j]%1000000000)), end = ' ')\n    print()\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"t=int(input())\nfor i in range(t):\n    n=int(input())\n    v=[]\n    for j in range(0,n+1):\n        if(j==0):\n            v.append(1)\n            print(str(int(v[j]%1000000000)), end = ' ')\n        else :\n            if(j\u003c=n/2):\n                v.append(v[j-1]*(n+1-j)/j)\n                print(str(int(v[j]%1000000000)), end = ' ')\n            elif(j\u003en/2):\n                print(str(int(v[n-j]%1000000000)), end = ' ')\n    print()\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"t=int(input())\nfor i in range(t):\n    n=int(input())\n    v=[]\n    for j in range(0,n+1):\n        if(j==0):\n            v.append(1)\n            print(str(int(v[j]%1000000000)), end = ' ')\n        else :\n            if(j\u003cn/2):\n                v.append(v[j-1]*(n+1-j)/j)\n                print(str(int(v[j]%1000000000)), end = ' ')\n            elif(j\u003en/2):\n                print(str(int(v[n-j]%1000000000)), end = ' ')\n            else :\n                if(n%2==1):\n                    continue\n                else:\n                    v.append(v[j-1]*(n+1-j)/j)\n                    print(str(int(v[j]%1000000000)), end = ' ')\n    print()\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"t=int(input())\nfor i in range(t):\n    n=int(input())\n    c=1\n    for j in range(1,n+2):\n        print(str(int(c%10**9)),end=' ')\n        c=c*(n+1-j)/j\n    print()\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"def solve(n):\n    c=1\n    for j in range(1,n+2):\n        print(str(int(c%10**9)),end=' ')\n        c=c*(n+1-j)/j\n    print()\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    solve(n)\n\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cunsigned long long\u003e v(n+1);unsigned long long tst=1;v[0]=v[v.size()-1]=tst;\n        cout \u003c\u003c v[0] \u003c\u003c \" \";\n        for(long long i=1;i\u003cv.size();i++,n--)\n        {\n            v[i]=((v[i-1])*(n)/i);    \n            cout \u003c\u003c v[i]%1000000000 \u003c\u003c \" \";\n        }\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.157894736842,"language":"cpp"},{"contest":"Master","challenge":"Army Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the gameWithCells function below.\n */\nint gameWithCells(int n, int m) {\n    int t=min(n,m);int T=max(n,m);\n    if(t==1 \u0026\u0026 T==1) return 1;\n    if(t==1 || t==2) return T-1;\n    else\n    {\n        return (T-1)*(t-2);\n    }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    int result = gameWithCells(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.318181818182,"language":"cpp"},{"contest":"Master","challenge":"Army Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n/*\n * Complete the gameWithCells function below.\n */\nint gameWithCells(int n, int m) {\n    int t=min(n,m);int T=max(n,m);\n    if(t==1 \u0026\u0026 T==1) return 1;\n    if(t==1 || t==2) return T-1;\n    else\n    {\n        return (T-2)*(t-2);\n    }\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nm_temp;\n    getline(cin, nm_temp);\n\n    vector\u003cstring\u003e nm = split_string(nm_temp);\n\n    int n = stoi(nm[0]);\n\n    int m = stoi(nm[1]);\n\n    int result = gameWithCells(n, m);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.318181818182,"language":"cpp"},{"contest":"Master","challenge":"nCr table","code":"def solve(n):\n    c = 1\n    for i in range(1,n+2):\n        print(c%(10**9),end=' ')\n        c = int(c * (n+1-i)/i)\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"def solve(n):\n    c = 1\n    for i in range(1,n+2):\n        if(c-int(c)!=0):\n            print(int(c)%(10**9)+1,end=' ')\n        else :\n            print(int(c)%(10**9),end=' ')\n        c = c * (n+1-i)/i\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"import math\ndef solve(n):\n    c = 1\n    for i in range(1,n+2):\n        print(c%(10**9),end=' ')\n        c = c * (n+1-i)/i\n        c=int(round(c))\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"import math\ndef solve(n):\n    c = 1\n    for i in range(1,n+2):\n        print(int(round(c))%(10**9),end=' ')\n        c = c * (n+1-i)/i\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"import math\ndef solve(n):\n    c = 1\n    for i in range(1,n+2):\n        print(c%10**9,end=' ')\n        c=int(c)\n        c =c*(n+1-i)/i\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"nCr table","code":"import math\ndef solve(n):\n    c = 1\n    for i in range(1,n+2):\n        print(c%10**9,end=' ')\n        c=round(c)\n        c =c*(n+1-i)//i\n    print()\n    \nfor t in range(int(input())):\n    solve(int(input()))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"K Candy Store","code":"def solve(n, k):\n    r=1\n    for i in range(1,k+1):\n        r*=(n*k+1-i)\n        r//=i\n    if(k==1):\n        print(r)\n    else :\n        print(r//(k+n))                 \nt=int(input())\nfor i in range(t):\n    a=int(input())\n    b=int(input())\n    solve(a,b)\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Python: Division","code":"a=int(input())\nb=int(input())\nprint(a//b)\nprint(a/b)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Loops","code":"n=int(input())\nfor _ in range(n):\n    print(_**2)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Write a function","code":"def is_leap(year):\n    leap = False\n    \n    if(year%4==0 and year%400==0):\n        leap=True \n    return leap\n\n","score":0.8,"language":"python3"},{"contest":"Master","challenge":"Write a function","code":"def is_leap(year):\n    leap = False\n    \n    if(year%4==0):\n        if(year%400==0):\n            leap=True\n    return leap\n\n","score":0.8,"language":"python3"},{"contest":"Master","challenge":"Write a function","code":"def is_leap(year):\n    leap = False\n    \n    if(year%4==0):\n        leap=True\n        if(year%100==0):\n            leap=False\n            if(year%400==0):\n                leap=True\n    return leap\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Print Function","code":"n = int(input())\nfor _ in range(1,n+1):\n    print(_,end='')\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Iterables and Iterators","code":"def bin(n,k):\n    r=1\n    if(n==k or k==0):\n         return r\n    for i in range(1,k+1):\n        r*=(n+1-i)\n        r=r//i\n    return r\nn=int(input())\ncount_a=0\ns=input()\nfor _ in s:\n    if(_=='a'):\n        count_a+=1\nk=int(input())\nresult=0\ntotal_space=bin(n,k)\nfor i in range(1,k+1):\n    result+=bin(n-count_a,k-i)*bin(count_a,i)\nprint(result/total_space)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"K Candy Store","code":"import math\ndef solve(n,k):\n    c = 1\n    for i in range(1,k+1):\n        c=round(c)\n        c =c*(n+1-i)//i\n    return c\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    k=int(input())\n    r=solve(n+k-1,k)\n    print(r)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"K Candy Store","code":"import math\ndef solve(n,k):\n    c = 1\n    for i in range(1,k+1):\n        c=round(c)\n        c =c*(n+1-i)//i\n    return c\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    k=int(input())\n    r=solve(n+k-1,k)\n    print(r%10**9)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Leonardo's Prime Factors","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\nint gener(long long n) {\n    if(n\u003c2) return 0;\n    vector\u003cint\u003e v={2};\n    long long count=1;\n    for(int i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        for(int j=0;v[j]\u003c=sqrt(i);j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n                break;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);count*=i;\n        } \n        if(count\u003en) {v.pop_back();break;}\n    }\n    return v.size();\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long long m;cin \u003e\u003e m;\n        cout \u003c\u003c gener(m) \u003c\u003cendl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Leonardo's Prime Factors","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\nvector\u003clong long\u003e gener(long long n) {\n    vector\u003clong long\u003e v={2};\n    long long count=1;\n    for(int i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(int)l==0) continue;\n        for(int j=0;v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n                break;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            count*=i;\n        }\n        if(count\u003en) break;\n    }\n    return v;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;long long l=-1;\n    vector\u003clong long\u003e queries;\n    while(t--){\n        long long m;cin \u003e\u003e m;queries.push_back(m);l=max(l,m);\n    }\n    vector\u003clong long\u003e p=gener(l);\n    for(auto i:queries)\n    {\n        if(i\u003c2) {cout \u003c\u003c 0 \u003c\u003c endl;continue;}\n        long long r=1;int j=0;\n        for(j=0;r\u003c=i;j++)\n            r*=p[j];\n        cout \u003c\u003c j-1 \u003c\u003c endl;\n    }\n}\n","score":0.79,"language":"cpp"},{"contest":"Master","challenge":"Leonardo's Prime Factors","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\nvector\u003clong long\u003e gener(long long n) {\n    vector\u003clong long\u003e v={2};\n    long long count=1;\n    for(int i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(int)l==0) continue;\n        for(int j=0;v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n                break;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            count*=i;\n        }\n        if(count\u003en) break;\n    }\n    return v;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;long long l=-1;\n    vector\u003clong long\u003e queries;\n    while(t--){\n        long long m;cin \u003e\u003e m;queries.push_back(m);l=max(l,m);\n    }\n    vector\u003clong long\u003e p=gener(l);\n    for(auto i:queries)\n    {\n        if(i\u003c2) {cout \u003c\u003c 0 \u003c\u003c endl;continue;}\n        long long r=1;int j=0;\n        for(j=1;r\u003c=i;j++)\n        {   \n            r*=p[j-1];\n            if(r==i) {cout \u003c\u003c j \u003c\u003c endl;break;}\n            if(r\u003ei){cout \u003c\u003c j-1\u003c\u003cendl;break;}\n        }\n    }\n}\n","score":0.86,"language":"cpp"},{"contest":"Master","challenge":"Leonardo's Prime Factors","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\nusing namespace std;\nvector\u003clong long\u003e gener(long long n) {\n    vector\u003clong long\u003e v={2};\n    long long count=1;\n    for(int i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(int)l==0) continue;\n        for(int j=0;v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n                break;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            count*=i;\n        }\n        if(count\u003en) break;\n    }\n    return v;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;long long l=-1;\n    vector\u003clong long\u003e queries;\n    while(t--){\n        long long m;cin \u003e\u003e m;queries.push_back(m);l=max(l,m);\n    }\n    vector\u003clong long\u003e p=gener(l);\n    for(auto i:queries)\n    {\n        if(i\u003c2) {cout \u003c\u003c 0 \u003c\u003c endl;continue;}\n        long double r=1;int j=0;\n        for(j=1;r\u003c=i;j++)\n        {   \n            r*=p[j-1];\n            if(r==i) {cout \u003c\u003c j \u003c\u003c endl;break;}\n            if(r\u003ei){cout \u003c\u003c j-1\u003c\u003cendl;break;}\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint solve(int x1, int y1, int x2, int y2) {\n    float a=(float)(y2-y1)/(x2-x1);float b=y1-a*x1;int count=0;\n    for(int i=min(x1,x2)+1;i\u003cx2;i++)\n        if((a*i+b)-(int)(a*i+b)==0) count++;\n    return count;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2)\u003c\u003cendl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint solve(int x1, int y1, int x2, int y2) {\n    float a=(float)(y2-y1)/(x2-x1);float b=y1-a*x1;int count=0;\n    for(int i=min(x1,x2)+1;i\u003cx2;i++)\n        if((a*i+b)-(int)(a*i+b)==0) count++;\n    return count;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2)\u003c\u003cendl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint solve(int x1, int y1, int x2, int y2) {\n    float a=(float)(y2-y1)/(x2-x1);float b=y1-a*x1;int count=0;float m=(float)(x2+x1)/2;\n    for(int i=min(x1,x2)+1;i\u003c=m;i++)\n        if((a*i+b)-(int)(a*i+b)==0) count++;\n    count*=2;\n    if(m-(int)m==0 \u0026\u0026 (a*m+b)-(int)(a*m+b)==0) count--;\n    return count;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2)\u003c\u003cendl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(int x1, int y1, int x2, int y2) {\n    int a=(y2-y1)/(x2-x1);\n    return abs(y2-y1*a-1);\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;int n=t;vector\u003cint\u003e v,q;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(int x1, int y1, int x2, int y2) {\n    int a=(y2-y1)/(x2-x1);\n    return abs(y2-y1*a)-1;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;int n=t;vector\u003cint\u003e v,q;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sumar and the Floating Rocks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the solve function below.\nint solve(int x1, int y1, int x2, int y2) {\n    int c=__gcd(abs(y2-y1),abs(x2-x1));\n    return c-1;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;int n=t;vector\u003cint\u003e v,q;\n    while(t--)\n    {\n        int x1,y1,x2,y2;cin \u003e\u003e x1\u003e\u003ey1\u003e\u003ex2\u003e\u003ey2;\n        cout \u003c\u003c solve(x1,y1,x2,y2) \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Russian Peasant Exponentiation","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n    // Complete the solve function below.\n    static void solve(long a, long b, long k, long m) {\n        long c;\n        long d;\n        if(k==0)\n        {\n            a=1;\n            b=0;\n        }\n        while(k%2==0)\n        {\n            long t=a;\n            a=(a*a)%m-(b*b)%m;b=(2*t*b)%m;\n            k\u003e\u003e=1;\n        }\n        c=a;d=b;k\u003e\u003e=1;\n        while(k\u003e0)\n        { \n            long t=a;\n            a=(a*a)%m-(b*b)%m;\n            b=(2*t*b)%m;\n            if(k%2!=0){\n                t=c;\n                c=(c*a-d*b)%m;d=(a*d+b*t)%m;\n            }\n            k\u003e\u003e=1;\n        }\n        Console.WriteLine(c + \" \" + d);        \n    }\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            string[] s=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(s[0]);\n            long b=Convert.ToInt64(s[1]);\n            long k=Convert.ToInt64(s[2]);\n            long m=Convert.ToInt64(s[3]);\n            solve(a,b,k,m);\n        }\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Russian Peasant Exponentiation","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n    // Complete the solve function below.\n    static void solve(long a, long b, long k, long m) {\n        long c=1;\n        long d=0;\n        if(k==0)\n        {\n            a=1;\n            b=0;\n        }\n        while(k\u003e0)\n        { \n            if(k%2==0)\n            {\n                long t=a;\n                a=(a*a)%m-(b*b)%m;\n                b=(2*t*b)%m;\n                k\u003e\u003e=1;h\u003c\u003c=1;\n            }\n            else if(k%2!=0){\n                long t=c;\n                c=(c*a-b*d)%m;d=(a*d+b*t)%m;\n                k-=1;h++;\n            }\n        }\n    }\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            string[] s=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(s[0]);\n            long b=Convert.ToInt64(s[1]);\n            long k=Convert.ToInt64(s[2]);\n            long m=Convert.ToInt64(s[3]);\n            Console.WriteLine(a+\" \"+b+\" \"+k+\" \"+m);\n            solve(a,b,k,m);\n        }\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Russian Peasant Exponentiation","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n    // Complete the solve function below.\n    static void solve(long a, long b, long k, long m) {\n        long c=1;\n        long d=0;\n        if(k==0)\n        {\n            a=1;\n            b=0;\n        }\n        while(k\u003e0)\n        { \n            if(k%2==0)\n            {\n                long t=a;\n                a=(a*a)%m-(b*b)%m;\n                b=(2*t*b)%m;\n                k\u003e\u003e=1;\n            }\n            else if(k%2!=0){\n                long t=c;\n                c=(c*a-b*d)%m;d=(a*d+b*t)%m;\n                k-=1;\n            }\n        }\n        Console.WriteLine(c+\" \"+d);\n    }\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            string[] s=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(s[0]);\n            long b=Convert.ToInt64(s[1]);\n            long k=Convert.ToInt64(s[2]);\n            long m=Convert.ToInt64(s[3]);\n            solve(a,b,k,m);\n        }\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Russian Peasant Exponentiation","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n    // Complete the solve function below.\n    static void solve(long a, long b, long k, long m) {\n        long c=1;\n        long d=0;\n        if(k==0)\n        {\n            a=1;\n            b=0;\n        }\n        while(k\u003e0)\n        { \n            if(k%2==0)\n            {\n                long t=a;\n                a=(a*a)%m-(b*b)%m;\n                b=(2*t*b)%m;\n                k\u003e\u003e=1;\n            }\n            else if(k%2!=0){\n                long t=c;\n                c=(c*a)%m-(b*d)%m;d=(a*d)%m+(b*t)%m;\n                k-=1;\n            }\n        }\n        c%=m;d%=m;\n        if(c\u003c0 \u0026\u0026 d \u003c0)\n            Console.WriteLine((c+m)+\" \"+(d+m));\n        else if(c\u003c0 \u0026\u0026 d\u003e0) \n            Console.WriteLine((c+m)+\" \"+d);\n        else if(d\u003c0 \u0026\u0026 c\u003e0)\n            Console.WriteLine(c+\" \"+(d+m));\n        else \n            Console.WriteLine(c+\" \"+d);\n    }\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            string[] s=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(s[0]);\n            long b=Convert.ToInt64(s[1]);\n            long k=Convert.ToInt64(s[2]);\n            long m=Convert.ToInt64(s[3]);\n            solve(a,b,k,m);\n        }\n    }\n}\n","score":0.05,"language":"csharp"},{"contest":"Master","challenge":"Russian Peasant Exponentiation","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n    // Complete the solve function below.\n    static void solve(long a, long b, long k, long m) {\n        long c=1;\n        long d=0;\n        if(k==0)\n        {\n            a=1;\n            b=0;\n        }\n        while(k\u003e0)\n        { \n            if(k%2==0)\n            {\n                long t=a;\n                a=(a*a)%m-((b*b)%m+m)%m;\n                b=(2*t*b)%m;\n                k\u003e\u003e=1;\n            }\n            else if(k%2!=0){\n                long t=c;\n                c=(c*a)%m-(b*d)%m;d=(a*d)%m+(b*t)%m;\n                k-=1;\n            }\n        }\n        c=(c%m+m)%m;d=(d%m+m)%m;\n        Console.WriteLine(c+\" \"+d);\n    }\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            string[] s=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(s[0]);\n            long b=Convert.ToInt64(s[1]);\n            long k=Convert.ToInt64(s[2]);\n            long m=Convert.ToInt64(s[3]);\n            solve(a,b,k,m);\n        }\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Let's Echo","code":"echo \"HELLO\"\n\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"K Factorization","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        s=Console.ReadLine().Split(' ');\n        ArrayList list = new ArrayList();\n        ArrayList rslt = new ArrayList();\n        foreach(var a in s)\n        {\n            int t=Convert.ToInt32(a);\n            if(n%t==0)\n                list.Add(t);\n        }\n        list.Sort();\n        for(int i=list.Count-1;i\u003e=0;i--)\n        {\n            int temp=n/Convert.ToInt32(list[i]);\n            rslt.Add(list[i]);\n            for(int j=i-1;j\u003e=0;j--)\n            {\n                if(temp%Convert.ToInt32(list[j])!=0)\n                    continue;\n                else\n                {\n                    rslt.Add(list[j]);\n                    temp/=Convert.ToInt32(list[j]);\n                }\n            }\n            if(temp==1)\n            {\n                \n                break;\n            }\n            else\n                rslt.Clear();\n        }\n        if(rslt.Count==0)\n            Console.Write(-1);\n        else\n        {\n            int tempo=1;\n            for(int i=rslt.Count-1;i\u003e=0;i--)\n            {\n                Console.Write(tempo + \" \");\n                tempo*=Convert.ToInt32(rslt[i]);\n            }\n            Console.Write(tempo + \" \");\n        }\n    }\n}\n","score":0.038461538462,"language":"csharp"},{"contest":"Master","challenge":"K Factorization","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        s=Console.ReadLine().Split(' ');\n        ArrayList list = new ArrayList();\n        ArrayList rslt = new ArrayList();\n        foreach(var a in s)\n        {\n            int t=Convert.ToInt32(a);\n            if(n%t==0)\n                list.Add(t);\n        }\n        list.Sort();\n        for(int i=list.Count-1;i\u003e=0;i--)\n        {\n            int temp=n/Convert.ToInt32(list[i]);\n            rslt.Add(list[i]);\n            for(int j=i;j\u003e=0;j--)\n            {\n                if(temp%Convert.ToInt32(list[j])!=0)\n                    continue;\n                else\n                {\n                    rslt.Add(list[j]);\n                    temp/=Convert.ToInt32(list[j]);\n                    if(temp%Convert.ToInt32(list[j])==0)\n                        j++;\n                }\n            }\n            if(temp==1)\n            {\n                \n                break;\n            }\n            else\n                rslt.Clear();\n        }\n        if(rslt.Count==0)\n            Console.Write(-1);\n        else\n        {\n            int tempo=1;\n            for(int i=rslt.Count-1;i\u003e=0;i--)\n            {\n                Console.Write(tempo + \" \");\n                tempo*=Convert.ToInt32(rslt[i]);\n            }\n            Console.Write(tempo + \" \");\n        }\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Bowling Pins","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            int m=Convert.ToInt32(Console.ReadLine());\n            string s=Console.ReadLine();\n            int[] l=new int[m+1];int count=0;\n            for(int c=0;c\u003cs.Count();c++)\n            {\n                if((s[c]=='X'))//IXXI XIIX\n                {\n                    if(count!=0)\n                    {\n                        l[count]+=1;\n                    }\n                    count=0;\n                    continue;\n                }\n                else\n                {\n                    count++;\n                    if(c==s.Count()-1)\n                    {\n                        l[count]+=1;\n                        count=0;\n                        continue;    \n                    }\n                }\n            }\n            bool p=false;bool winner=false;bool begin=false;\n            for(int j=l.Count()-1;j\u003e0;j--)\n            {\n                if(l[j]==0) continue;\n                if(begin) {\n                    if(l[j]%2==0)\n                    {\n                        winner=!winner;\n                    }\n                    else\n                    {\n                        p=!p;\n                    }\n                }\n                else {\n                    begin=true;\n                    if(l[j]%2==0)\n                    {\n                        winner=!winner;\n                    }\n                    else\n                    {\n                        p=!p;\n                    }\n                }\n            }\n            if(winner)\n                Console.WriteLine(\"LOSE\");\n            else\n                Console.WriteLine(\"WIN\");\n        }\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Bowling Pins","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            int m=Convert.ToInt32(Console.ReadLine());\n            string s=Console.ReadLine();\n            int[] l=new int[m+1];int count=0;\n            for(int c=0;c\u003cs.Count();c++)\n            {\n                if((s[c]=='X'))//IXXI XIIX\n                {\n                    if(count!=0)\n                    {\n                        l[count]+=1;\n                    }\n                    count=0;\n                    continue;\n                }\n                else\n                {\n                    count++;\n                    if(c==s.Count()-1)\n                    {\n                        l[count]+=1;\n                        count=0;\n                        continue;    \n                    }\n                }\n            }\n            bool p=false;bool winner=false;bool begin=false;\n            for(int j=l.Count()-1;j\u003e0;j--)\n            {\n                //Console.Write(l[j]+\" || \");//\n                if(l[j]==0) continue;\n                if(begin) {\n                    if(l[j]%2==0)//special cases for j\u003e2 wayarround for p1 to win is possible\n                    {\n                        winner=!p;\n                        p=!p;\n                    }\n                    else\n                    {\n                        winner=p;\n                        p=!p;\n                    }\n                }\n                else {\n                    begin=true;\n                    if(l[j]%2==0 \u0026\u0026 j\u003c=2)\n                    {\n                        winner=!winner;\n                    }\n                    else\n                    {\n                        p=!p;\n                    }\n                }\n                Console.Write(Convert.ToInt32(winner)+\" \");\n            }\n            if(winner)\n                Console.WriteLine(\"\\nLOSE\");\n            else\n                Console.WriteLine(\"\\nWON\");\n        }\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Bowling Pins","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            int m=Convert.ToInt32(Console.ReadLine());\n            string s=Console.ReadLine();\n            int[] l=new int[m+1];int count=0;\n            for(int c=0;c\u003cs.Count();c++)\n            {\n                if((s[c]=='X'))//IXXI XIIX\n                {\n                    if(count!=0)\n                    {\n                        l[count]+=1;\n                    }\n                    count=0;\n                    continue;\n                }\n                else\n                {\n                    count++;\n                    if(c==s.Count()-1)\n                    {\n                        l[count]+=1;\n                        count=0;\n                        continue;    \n                    }\n                }\n            }\n            bool p=false;bool winner=false;bool begin=false;\n            for(int j=l.Count()-1;j\u003e0;j--)//for(int j=1;j\u003cl.Count();j++)\n            {\n                if(l[j]==0) continue;\n                if(begin) {\n                    if(l[j]%2==0 \u0026\u0026 j!=1)\n                    {\n                        winner=(!p\u0026winner);\n                        p=!p;\n                    }\n                    else if(l[j]%2!=0 \u0026\u0026 j!=1)\n                    {\n                        winner=(p\u0026winner);\n                        p=!p;\n                    }\n                    if(j==1)\n                    {\n                        if(l[j]%2==0)\n                        {\n                            winner=!p;\n                            p=!p;\n                        }\n                        else\n                        {\n                            winner=p;\n                            p=!p;\n                        }\n                    }\n                }\n                else {\n                    begin=true;\n                    if(l[j]%2==0)\n                    {\n                        winner=!winner;\n                    }\n                    else if(l[j]%2!=0)\n                    {\n                            p=!p;\n                    }\n                }\n            }\n            if(winner)\n                Console.WriteLine(\"LOSE\");\n            else\n                Console.WriteLine(\"WIN\");\n        }\n    }\n}\n","score":0.090909090909,"language":"csharp"},{"contest":"Master","challenge":"Bowling Pins","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n    public static int[] theo_arr;\n    static int solve(int l)\n    {\n        if(l==0)\n            return 0;\n        else if(l==1)\n            return 1;\n        else if(l==3)\n            return 2;\n        else if(theo_arr[l]!=-1)\n            return theo_arr[l];\n        List\u003cint\u003e r=new List\u003cint\u003e();\n        //List\u003cint\u003e p=new List\u003cint\u003e();\n        int m=highestPowerof2(l);\n        for(int i=0;i\u003c=m;i++)\n        {\n            if((l\u0026(1\u003c\u003ci))\u003e0)\n            {\n                l-=1\u003c\u003ci;int count=0;\n                for(int j=0;j\u003c=m;j++)\n                    if((l\u0026(1\u003c\u003cj))==0)\n                    {\n                        l\u003e\u003e=1;\n                        count++;\n                        j--;\n                    }\n                    else \n                        break;\n                r.Add(solve(l));\n                l\u003c\u003c=count;\n                l+=1\u003c\u003ci;\n            }\n            else\n            {\n                continue;\n            }\n            if(i\u003c=m-1 \u0026\u0026 (l\u0026(1\u003c\u003ci))\u003e0 \u0026\u0026 (l\u0026(1\u003c\u003c(i+1)))\u003e0)\n            {\n                l-=1\u003c\u003ci;l-=1\u003c\u003c(i+1);int count=0;\n                for(int j=0;j\u003c=m;j++)\n                    if(l!=0 \u0026\u0026 (l\u0026(1\u003c\u003cj))==0)\n                    {\n                        l\u003e\u003e=1;\n                        count++;\n                        j--;\n                    }\n                    else \n                        break;\n                r.Add(solve(l));\n                l\u003c\u003c=count;\n                l+=1\u003c\u003ci;l+=1\u003c\u003c(i+1);\n            }\n        }\n        /*p.Add(Mex(r));\n        int n=p[0];\n        for(int i=1;i\u003cp.Count();i++)\n            n^=p[i];*/\n        int n=Mex(r);\n        theo_arr[l]=n;\n        return n;\n    }\n    static int Mex(List\u003cint\u003e s)\n    {\n        s.Sort();\n        int min=0;\n        for(int i=0;i\u003cs.Count;i++){\n            if(s[i]==min)\n            {\n                min++;\n            }\n            else\n            {\n                return min;\n            }\n        }\n        return min;\n    }\n    static int highestPowerof2(int n) \n    { \n        int p = (int)Math.Log(n,2); \n        return p;  \n    }    \n    //--------------------------------------------------------------------------------------------------\n    static void Main(string[] args) {\n        int n=Convert.ToInt32(Console.ReadLine());\n        for(int i=0;i\u003cn;i++)\n        {\n            int m=Convert.ToInt32(Console.ReadLine());\n            string s=Console.ReadLine();\n            int count=(1\u003c\u003cm+1)-1;count\u003e\u003e=1;\n            theo_arr=new int[count+1];\n            for(int j=0;j\u003c=count;j++)\n                theo_arr[j]=-1;\n            for(int c=0;c\u003cs.Count();c++)\n            {\n                if((s[c]=='X'))\n                {\n                    count-=1\u003c\u003cc;\n                }\n                else\n                {\n                    continue;\n                }\n            }\n            if(solve(count)\u003e0)\n                Console.Write(\"WIN\\n\");\n            else\n                Console.Write(\"LOSE\\n\");\n        }\n            \n    }\n}\n","score":0.090909090909,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n\n    /*\n     * Complete the 'getTotalX' function below.\n     *\n     * The function is expected to return an INTEGER.\n     * The function accepts following parameters:\n     *  1. INTEGER_ARRAY a\n     *  2. INTEGER_ARRAY b\n     */\n\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=b[0];int m=a[0];int temp=1;\n        foreach(var i in b)\n            n=GCD(i,n);\n        foreach(var i in a)\n        {    m=GCD(i,m);temp*=i;}\n        m=(temp/m);\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n);\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":0.285714285714,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n\n    /*\n     * Complete the 'getTotalX' function below.\n     *\n     * The function is expected to return an INTEGER.\n     * The function accepts following parameters:\n     *  1. INTEGER_ARRAY a\n     *  2. INTEGER_ARRAY b\n     */\n\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=b[0];int m=a[0];int temp=1;\n        foreach(var i in b)\n            n=GCD(i,n);\n        foreach(var i in a)\n        {    m=GCD(i,m);temp*=i;}\n        m=(temp/m);\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n){1};\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":0.571428571429,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n\n    /*\n     * Complete the 'getTotalX' function below.\n     *\n     * The function is expected to return an INTEGER.\n     * The function accepts following parameters:\n     *  1. INTEGER_ARRAY a\n     *  2. INTEGER_ARRAY b\n     */\n\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=b[0];int m=a[0];int temp=1;\n        foreach(var i in b)\n            n=GCD(i,n);\n        if(a.Count()\u003e1)\n        {\n            foreach(var i in a)\n            {\n                m=GCD(i,m);\n                temp*=i;\n            }\n            m=(temp/m);\n        }\n            m=a[0];\n        else\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n);\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":0.0,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n\n    /*\n     * Complete the 'getTotalX' function below.\n     *\n     * The function is expected to return an INTEGER.\n     * The function accepts following parameters:\n     *  1. INTEGER_ARRAY a\n     *  2. INTEGER_ARRAY b\n     */\n\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=b[0];int m=a[0];int temp=1;\n        foreach(var i in b)\n            n=GCD(i,n);\n        if(a.Count()\u003e1)\n        {\n            foreach(var i in a)\n            {\n                m=GCD(i,m);\n                temp*=i;\n            }\n            m=(temp/m);\n        }\n        else\n            m=a[0];\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n);\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":0.571428571429,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=GCD(b);\n        int m=LCM(a);\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    static int GCD(List\u003cint\u003e l)\n    {\n        int n=l[0];\n        foreach(var i in l)\n            n=GCD(i,n);\n        return n;\n    }\n    static int LCM(int a, int b)\n    {\n         return b*a/GCD(a,b);\n    }\n    static int LCM(List\u003cint\u003e l)\n    {\n         int n=l[0];\n         for(int i=1;i\u003cl.Count();i++)\n            n=  LCM(n,l[i]);\n        return n;\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n);\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":0.857142857143,"language":"csharp"},{"contest":"Master","challenge":"Between Two Sets","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n    public static int getTotalX(List\u003cint\u003e a, List\u003cint\u003e b)\n    {\n        int n=GCD(b);\n        int m=LCM(a);\n        if(m\u003en || m\u003c0)\n            return 0;\n        int count=0;\n        for(int j=m;j\u003c=n;j++)\n        {\n            if(j%m==0 \u0026\u0026 n%j==0)\n                count++;\n        }\n        return count;\n    }\n    static int GCD(int a, int b)\n    {\n         return b == 0 ? a : GCD(b, a % b);\n    }\n    static int GCD(List\u003cint\u003e l)\n    {\n        int n=l[0];\n        foreach(var i in l)\n            n=GCD(i,n);\n        return n;\n    }\n    static int LCM(int a, int b)\n    {\n         return b*a/GCD(a,b);\n    }\n    static int LCM(List\u003cint\u003e l)\n    {\n         int n=l[0];\n         for(int i=1;i\u003cl.Count();i++)\n            n=  LCM(n,l[i]);\n        return n;\n    }\n    public static void Main(string[] args)\n    {\n        string[] s=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(s[0]);\n        int m=Convert.ToInt32(s[1]);\n        List\u003cint\u003e l=new List\u003cint\u003e(n);\n        List\u003cint\u003e r=new List\u003cint\u003e(m);\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            l.Add(Convert.ToInt32(_s));\n        s=Console.ReadLine().Split(' ');\n        foreach(var _s in s)\n            r.Add(Convert.ToInt32(_s));\n        Console.Write(getTotalX(l,r));\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Grading Students","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Result\n{\n\n    /*\n     * Complete the 'gradingStudents' function below.\n     *\n     * The function is expected to return an INTEGER_ARRAY.\n     * The function accepts INTEGER_ARRAY grades as parameter.\n     */\n\n    public static List\u003cint\u003e gradingStudents(List\u003cint\u003e g)\n    {\n        for(int i=0;i\u003cg.Count();i++)\n        {\n            if(g[i]\u003c38)\n            {\n                continue;\n            }\n            else\n            {\n                if(5-g[i]%5\u003c3)\n                {\n                    g[i]+=(5-g[i]%5);\n                }\n                else\n                    continue;\n            }\n        }\n        return g;\n    }\n\n}\n\nclass Solution\n{\n    public static void Main(string[] args)\n    {\n        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable(\"OUTPUT_PATH\"), true);\n\n        int gradesCount = Convert.ToInt32(Console.ReadLine().Trim());\n\n        List\u003cint\u003e grades = new List\u003cint\u003e();\n\n        for (int i = 0; i \u003c gradesCount; i++)\n        {\n            int gradesItem = Convert.ToInt32(Console.ReadLine().Trim());\n            grades.Add(gradesItem);\n        }\n\n        List\u003cint\u003e result = Result.gradingStudents(grades);\n\n        textWriter.WriteLine(String.Join(\"\\n\", result));\n\n        textWriter.Flush();\n        textWriter.Close();\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Lisa's Workbook","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    // Complete the workbook function below.\n    static int workbook(int n, int k, int[] arr) {\n        int sum=0;\n        int page=0;int prob=arr[0];int chap=0;\n        for(int i=0;chap\u003cn;i++)\n        {\n            if(i==page-1)\n                sum++;\n            if(i%k==0 \u0026\u0026 i!=prob)\n            {\n                page++;\n            }\n            if(i==prob)\n            {\n                chap++;\n                if(chap==n)\n                    break;\n                prob=arr[chap];\n                i=0;\n                page++;\n            }\n        }\n        return sum;\n    }\n\n    static void Main(string[] args) {\n        string[] s = Console.ReadLine().Split(' ');\n        int n = Convert.ToInt32(s[0]);\n        int k = Convert.ToInt32(s[1]);\n        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp =\u003e Convert.ToInt32(arrTemp));\n        int result = workbook(n, k, arr);\n        Console.WriteLine(result);\n    }\n}\n","score":0.33,"language":"csharp"},{"contest":"Master","challenge":"Lisa's Workbook","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n    static int workbook(int n, int k, int[] arr) {\n        int sum=0;\n        int page=1;int chap=0;int prob=arr[chap];\n        for(int i=1;chap\u003cn;i++)\n        {\n            if(i==page)\n            {\n                sum++;\n            }\n            if(i%k==0 \u0026\u0026 i!=prob)\n            {\n                page++;\n            }\n            if(i==prob)\n            {\n                chap++;\n                if(chap==n)\n                    break;\n                prob=arr[chap];\n                i=0;\n                page++;\n            }\n        }\n        return sum;\n    }\n\n    static void Main(string[] args) {\n        string[] s = Console.ReadLine().Split(' ');\n        int n = Convert.ToInt32(s[0]);\n        int k = Convert.ToInt32(s[1]);\n        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp =\u003e Convert.ToInt32(arrTemp));\n        int result = workbook(n, k, arr);\n        Console.WriteLine(result);\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Flatland Space Stations","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint max(int a,int b)\n{\n    return a\u003cb?b:a;\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;\n    if(n==m)\n        cout \u003c\u003c 0;\n    else\n    {\n        vector\u003cint\u003e c;\n        while(m--)\n        {\n            int a;cin \u003e\u003e a;c.push_back(a);\n        }\n        sort(c.begin(),c.end());\n        int count=0;\n        for(int it=0;it\u003cc.size();it++)\n        {\n            if(it==0 || (it==c.size()-1 \u0026\u0026 n-1\u003ec[it]))\n            {\n                count=max(count,c[it]);\n            }\n            else \n            {\n                int n=(c[it-1]+c[it])/2;\n                count=max(count,n);\n            }\n        }\n        cout \u003c\u003c count \u003c\u003c\" \";\n    }\n\n}\n","score":0.072727272727,"language":"cpp"},{"contest":"Master","challenge":"Flatland Space Stations","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint max(int a,int b)\n{\n    return a\u003cb?b:a;\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;\n    if(n==m)\n        cout \u003c\u003c 0;\n    else\n    {\n        vector\u003cint\u003e c;\n        while(m--)\n        {\n            int a;cin \u003e\u003e a;c.push_back(a);\n        }\n        sort(c.begin(),c.end());\n        int count=0;\n        for(int it=0;it\u003cc.size();it++)\n        {\n            if(it==0)\n            {\n                count=max(count,c[it]);\n            }\n            else if((it==c.size()-1 \u0026\u0026 n-1\u003ec[it])) \n            {\n                int k=n-1-c[it];\n                count=max(count,k);    \n            }\n            else\n            {\n                int k=(c[it]-c[it-1])/2;\n                count=max(count,k);\n            }\n        }\n        cout \u003c\u003ccount;\n    }\n\n}\n","score":0.963636363636,"language":"cpp"},{"contest":"Master","challenge":"Flatland Space Stations","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint max(int a,int b)\n{\n    return a\u003cb?b:a;\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;\n    if(n==m)\n        cout \u003c\u003c 0;\n    else\n    {\n        vector\u003cint\u003e c;\n        while(m--)\n        {\n            int a;cin \u003e\u003e a;c.push_back(a);\n        }\n        sort(c.begin(),c.end());\n        int count=0;\n        for(int it=0;it\u003cc.size();it++)\n        {\n            if(it==0 \u0026\u0026 c.size()!=1)\n            {\n                count=max(count,c[it]);\n            }\n            else if((it==c.size()-1 \u0026\u0026 n-1\u003ec[it]) \u0026\u0026 c.size()!=1) \n            {\n                int k=n-1-c[it];\n                count=max(count,k);    \n            }\n            else if(c.size()==1)\n            {\n                count=max(n-1-c[0],c[0]);\n            }\n            else\n            {\n                int k=(c[it]-c[it-1])/2;\n                count=max(count,k);\n            }\n        }\n        cout \u003c\u003c count;\n    }\n\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Looping and Skipping","code":"for ((i=1; i\u003c=100; i+=2)); do echo $i; done \n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Looping and Skipping","code":"for i in {1..100..2}\ndo\n    if(($i%2==1)); then\n     echo $i; fi\ndone\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"A Personalized Echo","code":"var a=\"\"\nread a\necho \"Welcome $a\"  \n\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Looping with Numbers","code":"for i in {1..50}\ndo\n    echo $i\ndone\n\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Day 0: Hello, World.","code":"Imports System\n\nModule Solution\n    \n    Public Shared Sub Main()\n        ' Create a String variable:\n        Dim greeting As String \n\n        ' Read value from stdin and save it to variable:\n        greeting = Console.ReadLine() \n\n        ' Print \"Hello, World.\" to stdout:\n        Console.WriteLine(\"Hello, World.\")\n        Console.WriteLine(greeting)\n        ' Write your code here; print the contents of the 'greeting' variable to stdout.\n\n    End Sub\nEnd Module\n\n","score":1.0,"language":"visualbasic"},{"contest":"Master","challenge":"Day 1: Data Types","code":"\n        dim a as integer\n        dim b as decimal\n        dim i_s as string \n        a=Convert.ToInt32(Console.ReadLine())\n        Console.WriteLine(Convert.ToInt32(a+i))\n        b=decimal.parse(Console.ReadLine())\n        Console.WriteLine(b+d)\n        i_s=Console.ReadLine()\n        Console.WriteLine(s+i_s)\n","score":1.0,"language":"visualbasic"},{"contest":"Master","challenge":"Basics of Sets and Relations #1","code":"{2,3,4,5,6}\n\n","score":0.0,"language":"text"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nvoid solve(double meal_cost, int tip_percent, int tax_percent) {\n    double result=meal_cost+meal_cost*tip_percent/100+meal_cost*tax_percent/100;\n    cout \u003c\u003c result;\n}\n\nint main()\n{\n    double meal_cost;\n    cin \u003e\u003e meal_cost;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tip_percent;\n    cin \u003e\u003e tip_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tax_percent;\n    cin \u003e\u003e tax_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    solve(meal_cost, tip_percent, tax_percent);\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nvoid solve(double meal_cost, int tip_percent, int tax_percent) {\n    double result=meal_cost+meal_cost*tip_percent/100+meal_cost*tax_percent/100;\n    cout \u003c\u003c result;\n}\n\nint main()\n{\n    double meal_cost;\n    cin \u003e\u003e meal_cost;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tip_percent;\n    cin \u003e\u003e tip_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tax_percent;\n    cin \u003e\u003e tax_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    solve(meal_cost, tip_percent, tax_percent);\n\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nvoid solve(double meal_cost, int tip_percent, int tax_percent) {\n    double result=meal_cost+meal_cost*tip_percent/100+meal_cost*tax_percent/100;\n    cout \u003c\u003c (int)result;\n}\n\nint main()\n{\n    double meal_cost;\n    cin \u003e\u003e meal_cost;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tip_percent;\n    cin \u003e\u003e tip_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tax_percent;\n    cin \u003e\u003e tax_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    solve(meal_cost, tip_percent, tax_percent);\n\n    return 0;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Day 2: Operators","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nvoid solve(double meal_cost, int tip_percent, int tax_percent) {\n    double result=meal_cost+meal_cost*tip_percent/100+meal_cost*tax_percent/100;\n    int n = round(result);\n    cout \u003c\u003c n;\n}\n\nint main()\n{\n    double meal_cost;\n    cin \u003e\u003e meal_cost;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tip_percent;\n    cin \u003e\u003e tip_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int tax_percent;\n    cin \u003e\u003e tax_percent;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    solve(meal_cost, tip_percent, tax_percent);\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\ndeque\u003cchar\u003e s;\nmap\u003cpair\u003cint,int\u003e,int\u003e m;\nint big_Pal(int a,int b)\n{\n    pair\u003cint,int\u003e p=make_pair(a,b);\n    if(m[p]) return m[p];\n    else\n    {\n        if(a==b) return 1;\n        bool c=false; \n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[a+i]!=s[b-i])\n            {\n                c=true;break;\n            }       \n        }\n        if(c)\n        {\n            m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n            return  m[p];\n        }\n        else\n        {\n            m[p]=b-a+1;\n        }   return m[p];\n    }\n}\nvoid cercle()\n{\n    char temp=s[0];\n    s.pop_front();s.push_back(temp);\n    m.clear();\n}\nvoid circularPalindromes(int n) {\n    vector\u003cint\u003e v;\n    while(n--)\n    {\n        int count=big_Pal(0,s.size()-1);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";\n        cercle();\n    }\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    string ss;cin \u003e\u003e ss;\n    for(auto i:ss)\n        s.push_back(i);\n    circularPalindromes(n);\n}\n","score":0.110236220472,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\ndeque\u003cchar\u003e s;\nint big_Pal(int a,int b)\n{\n    if(a==b) return 1;\n    bool c=false; \n    for(int i=0;i\u003c=(b-a)/2;i++)\n    {\n        if(s[a+i]!=s[b-i])\n        {\n            c=true;break;\n        }       \n    }\n    if(c)\n    {\n        return max(big_Pal(a+1,b),big_Pal(a,b-1));\n    }\n    else\n        return b-a+1;\n}\nvoid cercle()\n{\n    char temp=s[0];\n    s.pop_front();s.push_back(temp);\n}\nvoid circularPalindromes(int n) {\n    vector\u003cint\u003e v;\n    while(n--)\n    {\n        int count=big_Pal(0,s.size()-1);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";\n        cercle();\n    }\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    string ss;cin \u003e\u003e ss;\n    for(auto i:ss)\n        s.push_back(i);\n    circularPalindromes(n);\n}\n","score":0.023622047244,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nstring s;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong big_Pal(long a,long b)\n{\n    pair\u003clong,long\u003e p=make_pair(a,b%s.size());\n    if(m[p]) return m[p];\n    else\n    {\n        if(a%s.size()==b) return 1;\n        bool c=false; \n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%s.size()]!=s[(b-i)%s.size()])\n            {\n                c=true;break;\n            }     \n        }\n        if(c)\n        {\n            m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n            return m[p];\n        }\n        else\n        {\n            m[p]=b-a+1;\n            return m[p];\n        }\n    }\n}\nvoid circularPalindromes(long n) {\n    long i=0;\n    while(i\u003cn)\n    {\n        long count=big_Pal(0+i,s.size()-1+i);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n\nint main()\n{\n    long n;cin \u003e\u003e n;cin \u003e\u003e s;\n    circularPalindromes(n);\n}\n","score":0.204724409449,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nstring s;\nlong n;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong big_Pal(long a,long b)\n{\n    pair\u003clong,long\u003e p=make_pair(a,b%n);\n    if(m[p]) return m[p];\n    else\n    {\n        if(a%n==b) return 1;\n        bool c=false; \n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%n]!=s[(b-i)%n])\n            {\n                m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n                return m[p];\n            }     \n        }\n        m[p]=b-a+1;\n        return m[p];\n    }\n}\nint main()\n{\n    cin \u003e\u003e n;cin \u003e\u003e s;\n    long i=0;\n    while(i\u003cn)\n    {\n        long count=big_Pal(0+i,n-1+i);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n","score":0.204724409449,"language":"cpp"},{"contest":"Master","challenge":"Happy Ladybugs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the happyLadybugs function below.\nstring happyLadybugs(string b) {\n    map\u003cchar,int\u003e m;\n    for(auto i:b)\n        m[i]++;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        if((i-\u003esecond==1 \u0026\u0026 i-\u003efirst!='_')||m['_']==0)\n        {\n            return\"NO\";\n        }\n        return\"YES\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int g;\n    cin \u003e\u003e g;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int g_itr = 0; g_itr \u003c g; g_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n        string b;\n        getline(cin, b);\n\n        string result = happyLadybugs(b);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":0.777777777778,"language":"cpp"},{"contest":"Master","challenge":"Happy Ladybugs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the happyLadybugs function below.\nstring happyLadybugs(string b) {\n    map\u003cchar,pair\u003cint,int\u003e\u003e m;m[b[0]].first++;m[b[0]].second++;\n    bool c=true;\n    for(int i=1;i\u003cb.size();i++)\n    {\n        if(b[i-1]==b[i])\n        {   \n            if(c)\n            {\n                m[b[i]].first++;m[b[i]].second--;c=false;\n            }\n            else\n            {\n                m[b[i]].first++;\n            }\n        }\n        else\n        {    m[b[i]].first++;m[b[i]].second++;c=true;}\n    }\n    for(map\u003cchar,pair\u003cint,int\u003e\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        if((i-\u003esecond.first==1  \u0026\u0026 i-\u003efirst!='_')||(m['_'].first==0\u0026\u0026i-\u003esecond.second\u003e=1))\n        {\n            return\"NO\";\n        }\n    }\n    return\"YES\";\n}\n\nint main()\n{\n    int g;\n    cin \u003e\u003e g;\n    for (int g_itr = 0; g_itr \u003c g; g_itr++) {\n        int n;\n        cin \u003e\u003e n;\n        string b;\n        cin \u003e\u003e b;\n        cout \u003c\u003c happyLadybugs(b) \u003c\u003c \"\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nstring s;\nint n;\nmap\u003cpair\u003cint,int\u003e,int\u003e m;\nlong big_Pal(int a,int b,int l)\n{\n    pair\u003cint,int\u003e p=make_pair(a,b%n);\n    if(m[p]) return m[p];\n    else\n    {\n        if(a%n==b || l==0) {\n            m[p]=1;\n            return m[p];\n        } \n        if(b-a+1\u003c=l \u0026\u0026 l!=-1)\n            return l;\n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%n]!=s[(b-i)%n])\n            {\n                int M=big_Pal(a+1,b,-1);\n                int K=big_Pal(a,b-1,M);\n                m[p]=max(K,M);\n                return m[p];\n            }     \n        }\n        m[p]=b-a+1;\n        return m[p];\n    }\n}\nint main()\n{\n    cin \u003e\u003e n;cin \u003e\u003e s;\n    int i=0;\n    while(i\u003cn)\n    {\n        int count=big_Pal(0+i,n-1+i,-1);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n","score":0.204724409449,"language":"cpp"},{"contest":"Master","challenge":"Day 3: Intro to Conditional Statements","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    if(n%2)\n        cout \u003c\u003c \"Weird\";\n    else\n    {\n        if(n\u003c=20 \u0026\u0026 n\u003e=6)\n            cout \u003c\u003c \"Weird\";\n        else \n            cout \u003c\u003c \"Not Weird\"; \n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Python If-Else","code":"n = int(input())\nif(n%2==1):\n    print('Weird')\nelse:\n    if(n\u003c=20 and n\u003e=6):\n        print('Weird')\n    else:\n        print('Not Weird')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Arithmetic Operators","code":"if __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    print(a+b)\n    print(a-b)\n    print(a*b)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nstring s;\nint n;\nmap\u003cpair\u003cint,int\u003e,int\u003e m;\nint big_Pal(int a,int b)\n{\n\n    pair\u003cint,int\u003e p=make_pair(a%n,b%n);\n    if(m[p]) return m[p]; \n    else\n    {\n        if(a%n==b%n)\n        {\n            m[p]=1;\n            return m[p];\n        }\n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%n]!=s[(b-i)%n])\n            {\n                m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n                return m[p];\n            }     \n        }\n        m[p]=b-a+1;\n        return m[p];\n    }\n}\nint main()\n{\n    scanf(\"%d\",\u0026n);cin\u003e\u003es;\n    int i=0;\n    while(i\u003cn)\n    {\n        int count=big_Pal(i,n-1+i);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n","score":0.236220472441,"language":"cpp"},{"contest":"Master","challenge":"HackerRank in a String!","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nstring temp=\"hackerrank\";\n// Complete the hackerrankInString function below.\nstring hacker(string s) {\n    queue\u003cchar\u003e q;\n    for(auto i:temp) q.push(i);\n    for(int i=0;i\u003cs.size();i++)\n        if(q.front()==s[i])\n            q.pop();\n    if(q.empty())\n        return \"YES\\n\";\n    else\n        return \"NO\\n\";\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string s;cin\u003e\u003es;\n        cout \u003c\u003c hacker(s);\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Pangrams","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the pangrams function below.\nstring pangrams(string s) {\n    map\u003cchar,int\u003e m;int count=0;\n    for(auto i:s)\n    {\n        if(m[i] || i==' ')\n        {\n            continue;\n        }\n        else\n        {\n            m[i]++;\n            count++;\n        }\n    }\n    if(count==26)\n        return\"pangram\";\n    else\n        return\"not pangram\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = pangrams(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.473684210526,"language":"cpp"},{"contest":"Master","challenge":"Pangrams","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n// Complete the pangrams function below.\nstring pangrams(string s) {\n    map\u003cchar,int\u003e m;int count=0;\n    for(auto i:s)\n    {\n        i=tolower(i);\n        if(m[i] || i==' ')\n        {\n            continue;\n        }\n        else\n        {\n            m[i]++;\n            count++;\n        }\n    }\n    if(count==26)\n        return\"pangram\";\n    else\n        return\"not pangram\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = pangrams(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Strong Password","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cregex\u003e\nusing namespace std;\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    string s;\n    cin \u003e\u003e s;\n    smatch m;\n    regex upper(\"[A-Z]\");\n    regex lower(\"[a-z]\");\n    regex number(\"[0-9]\");\n    regex weird(\"[!@#$%^\u0026*()-+]\");\n    int count=0;\n    if(regex_search(s,m,upper)) count++;\n    if(regex_search(s,m,lower)) count++;\n    if(regex_search(s,m,number)) count++;\n    if(regex_search(s,m,weird)) count++;\n    if(s.size()\u003e=6)\n    {\n        if(count==4)\n            cout \u003c\u003c 0;\n        else\n        {\n            cout \u003c\u003c 4-count;\n        }\n    }\n    else\n    {\n        cout \u003c\u003c 6-s.size();\n    }\n}\n","score":0.863636363636,"language":"cpp"},{"contest":"Master","challenge":"Strong Password","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cregex\u003e\nusing namespace std;\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    string s;\n    cin \u003e\u003e s;\n    smatch m;\n    regex upper(\"[A-Z]\");\n    regex lower(\"[a-z]\");\n    regex number(\"[0-9]\");\n    regex weird(\"[!@#$%^\u0026*()-+]\");\n    int count=0;\n    if(regex_search(s,m,upper)) count++;\n    if(regex_search(s,m,lower)) count++;\n    if(regex_search(s,m,number)) count++;\n    if(regex_search(s,m,weird)) count++;\n    if(s.size()\u003e=6)\n    {\n        if(count==4)\n            cout \u003c\u003c 0;\n        else\n        {\n            cout \u003c\u003c 4-count;\n        }\n    }\n    else\n    {\n        cout \u003c\u003c max(4-count,6-n);\n    }\n}\n","score":0.988636363636,"language":"cpp"},{"contest":"Master","challenge":"Strong Password","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cregex\u003e\nusing namespace std;\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    string s;\n    cin \u003e\u003e s;\n    smatch m;\n    regex upper(\"[A-Z]\");\n    regex lower(\"[a-z]\");\n    regex number(\"[0-9]\");\n    regex weird(\"[!@#$%^\u0026*()--+]\");\n    int count=0;\n    if(regex_search(s,m,upper)) count++;\n    if(regex_search(s,m,lower)) count++;\n    if(regex_search(s,m,number)) count++;\n    if(regex_search(s,m,weird)) count++;\n    if(s.size()\u003e=6)\n    {\n        if(count==4)\n            cout \u003c\u003c 0;\n        else\n        {\n            cout \u003c\u003c 4-count;\n        }\n    }\n    else\n    {\n        cout \u003c\u003c max(4-count,6-n);\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 4: Class vs. Instance","code":"\n\nclass Person{\n    public:\n        int age;\n        Person(int initialAge);\n        void amIOld();\n        void yearPasses();\n    };\n\n    Person::Person(int initAge){\n        if(initAge\u003e=0)\n            age=initAge;\n        else\n        {\n            age=0;cout \u003c\u003c \"Age is not valid, setting age to 0.\\n\";\n        }\n\n    }\n\n    void Person::amIOld(){\n        if(age\u003e=18)\n            cout \u003c\u003c \"You are old.\\n\";\n        else if(age\u003c13)\n            cout \u003c\u003c \"You are young.\\n\";\n        else\n            cout \u003c\u003c \"You are a teenager.\\n\";\n    }\n\n    void Person::yearPasses(){\n        age++;\n    }\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Finding the percentage","code":"if __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    med=0\n    j=0\n    for i in student_marks[query_name]:\n        med+=i\n        j+=1\n    med/=j\n    print ('%.2f'%med)\n    \n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;//Work in progress :)\ndouble weird_func(int k,int i)\n{\n    double r=1;\n    for(double p=1;p\u003c=i;p++)\n    {\n        r*=(k-p)/p;\n    }\n    r=r*i/k;\n    return r;\n}\nint rev_pow_2(int n) \n{ \n   int p = (int)log2(n); \n   return (int)pow(2, p);  \n}\ndouble solve(int a,int b,int l,int L,int n)\n{\n    double r=0;\n    for(int i=l;i\u003c=L;i++)\n    {\n        for(int j=0;j\u003ci;j++)\n            r+=weird_func(i,j);\n    }\n    r/=n;\n    return r;\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        int n=b-a+1;\n        int l=rev_pow_2(a)+1;int L=rev_pow_2(b)+1;\n        cout \u003c\u003c solve(a,b,l,L,n) \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\nusing namespace std;\n\nint rev(int n) \n{ \n   int p = (int)log2(n); \n   return p;  \n} \nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;float count=b-a+1;float r=0;float rr=0;\n        for(int i=a;i\u003c=b;i++)\n        {\n            float n=rev(i)+1;\n            bitset\u003c31\u003e b(i);\n            r+=b.count()/count;\n            rr+=b.count()/(count*n);\n        }\n        cout \u003c\u003c setprecision(5) \u003c\u003c rr \u003c\u003c \" \" \u003c\u003c setprecision(6) \u003c\u003c r ;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\nusing namespace std;\n\nint rev(int n) \n{ \n   int p = (int)log2(n); \n   return p;  \n} \nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;float count=b-a+1;float r=0;float rr=0;\n        for(int i=a;i\u003c=b;i++)\n        {\n            float n=rev(i)+1;\n            bitset\u003c31\u003e b(i);\n            r+=b.count()/count;\n            rr+=b.count()/(count*n);\n        }\n        cout \u003c\u003c rr \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.021739130435,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\nusing namespace std;\n\nint rev(int n) \n{ \n   int p = (int)log2(n); \n   return p;  \n} \nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;float count=b-a+1;float r=0;float rr=0;\n        for(int i=a;i\u003c=b;i++)\n        {\n            float n=rev(i)+1;\n            bitset\u003c31\u003e b(i);\n            r+=b.count()/count;\n            rr+=b.count()/(count*n);\n        }\n        cout \u003c\u003c rr \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.021739130435,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\nusing namespace std;\n\nint rev(int n) \n{ \n   int p = (int)log2(n); \n   return p;  \n} \nint cnt(int n)\n{\n    int count=0;\n    while (n!=0)\n    {\n        n = n \u0026 (n-1);\n        count++;\n    }\n    return count;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;float count=b-a+1;float r=0;float rr=0;\n        for(int i=a;i\u003c=b;i++)\n        {\n            float n=rev(i)+1;float c=cnt(i);\n            //bitset\u003c31\u003e b(i);c=b.count();\n            r+=c/count;\n            rr+=c/(count*n);\n        }\n        cout \u003c\u003c rr \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.021739130435,"language":"cpp"},{"contest":"Master","challenge":"Day 5: Loops","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\n\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    for(int i=1;i\u003c=10;i++)\n        cout \u003c\u003c n \u003c\u003c \" x \" \u003c\u003c i \u003c\u003c \" = \" \u003c\u003c i*n \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Two Strings","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the twoStrings function below.\nstring twoStrings(string s1, string s2) {\n    map\u003cchar,bool\u003e m;\n    for(auto i:s1)\n        m[i]++;\n    for(auto i:s2)\n        if(m[i])\n            return \"YES\";\n    return \"NO\";\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int q;\n    cin \u003e\u003e q;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    for (int q_itr = 0; q_itr \u003c q; q_itr++) {\n        string s1;\n        getline(cin, s1);\n\n        string s2;\n        getline(cin, s2);\n\n        string result = twoStrings(s1, s2);\n\n        fout \u003c\u003c result \u003c\u003c \"\\n\";\n    }\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nfloat perm(int i,int k)\n{\n    pair\u003cint,int\u003e p=make_pair(i,k);\n    if(m[p])return m[p];\n    float r=1;\n    for(float p=1;p\u003c=i;p++)\n    {\n        r*=(k-p)/p;\n    }\n    r=r*i/k;\n    m[p]=r;\n    return m[p];\n}\nint rev(int n) \n{ \n    /*int count=0;\n    while(n!=1)\n    {\n        n=n\u003e\u003e1;\n        count++;\n    }\n    return count;*/\n    int p = (int)log2(n); \n   return p;  \n} \nint cnt(int n)\n{\n    int count=0;\n    while (n!=0)\n    {\n        n = n \u0026 (n-1);\n        count++;\n    }\n    return count;\n}\n/*float test_impl(int f_a,int f_b)\n{\n    float r=0;\n    for(int i=f_a;i\u003c=f_b;i++)\n    {\n        for(int j=0;j\u003ci;j++)\n        {\n            r+=perm(j,i);\n        }\n    }\n    return r;\n}*/\nfloat test_impl(int f_a,int f_b)\n{\n    float r=0;\n    for(int i=f_a;i\u003c=f_b;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(float)(b_1+c_1)/l_n;\n    }\n    return r;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        float count=b-a+1;\n        int f_a=rev(a)+1;int f_b=rev(b)-1;\n        int l=1\u003c\u003cf_a;int L=1\u003c\u003cf_b+1;\n        float r=0;float rr=0;\n        {\n            if(a!=1\u003c\u003cf_a-1)\n            {\n                for(int i=a;i\u003cl;i++)\n                {\n                    double c=cnt(i);\n                    r+=c/(f_a+1);\n                }\n            }\n            else\n                f_a--;\n            if(b!=1\u003c\u003cf_b+1)\n                for(int i=L;i\u003c=b;i++)\n                {\n                    float c=cnt(i);\n                    r+=c/(f_b+1);\n                }\n            else\n            {\n               r+=(float)1/(f_b+2);\n            }\n            r+=test_impl(f_a, f_b);\n        }\n        cout \u003c\u003c r/count \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day 6: Let's Review","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        string s;string o_s;string e_s;\n        cin \u003e\u003e s;\n        for(int i=0;i\u003cs.size();i+=2) \n        {\n            e_s.push_back(s[i]);o_s.push_back(s[i+1]);\n        }\n        cout \u003c\u003c e_s \u003c\u003c \" \" \u003c\u003c o_s \u003c\u003c endl;\n    }\n}\n","score":0.111111111111,"language":"cpp"},{"contest":"Master","challenge":"Day 6: Let's Review","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        string s;string o_s;string e_s;\n        cin \u003e\u003e s;\n        for(int i=0;i\u003cs.size()-1;i+=2) \n        {\n            e_s.push_back(s[i]);o_s.push_back(s[i+1]);\n        }\n        cout \u003c\u003c e_s \u003c\u003c \" \" \u003c\u003c o_s \u003c\u003c endl;\n    }\n}\n","score":0.111111111111,"language":"cpp"},{"contest":"Master","challenge":"Day 6: Let's Review","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        string s;string o_s;string e_s;\n        cin \u003e\u003e s;\n        for(int i=0;i\u003cs.size();i+=2) \n        {\n            e_s.push_back(s[i]);\n            if(s[i+1]!='\\0')\n                o_s.push_back(s[i+1]);\n        }\n        cout \u003c\u003c e_s \u003c\u003c \" \" \u003c\u003c o_s \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cbitset\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(int n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nfloat count_1(int n)\n{\n    float r=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(float)(b_1+c_1)/l_n;\n    }\n    return r;\n}\nfloat count_1(int m,int n)//this B doesn't work right \n{\n    float r=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;//int l_n=i+1; \n        r+=(float)(b_1+c_1);//l_n;\n    }\n    r+=m+1;\n    return r/(m+1);\n}\nfloat solve(int a,int b)\n{\n    int f_b = rev(b);int f_a=rev(a);int count=b-a+1;\n    int b_2=b-(1\u003c\u003cf_b);int a_2=a-(1\u003c\u003cf_a);float r=0;\n    {\n        r+=count_1(f_b);r-=count_1(f_a);\n        if(1\u003c\u003cf_b==b) r+=(float)1/(f_b+1);\n        while(b_2!=0)\n        {\n            r+=count_1(f_b,b_2);\n            b_2=b_2-(1\u003c\u003crev(b_2));\n        }\n        while(a_2!=0)\n        {\n            r-=count_1(f_a,a_2);\n            a_2=a_2-(1\u003c\u003crev(a_2));\n        }\n    }\n    return r/count;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b; cin \u003e\u003e a  \u003e\u003e b;\n        cout \u003c\u003c solve(a,b) \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(int n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nfloat count_1(int n)\n{\n    float r=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(float)(b_1+c_1)/l_n;\n    }\n    return r;\n}\nfloat count_1(int m,int n)//this B doesn't work right \n{\n    float r=0;\n    for(int i=1;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;//int l_n=i+1; \n        r+=(float)(b_1+c_1);//l_n;\n    }\n    r+=m+1;\n    return r/(m+1);\n}\nfloat solve(int a,int b)\n{\n    int f_b = rev(b);int f_a=rev(a);int count=b-a+1;\n    int b_2=b-(1\u003c\u003cf_b);int a_2=a-(1\u003c\u003cf_a);float r=0;\n    {\n        r+=count_1(f_b);r-=count_1(f_a);\n        if(1\u003c\u003cf_b==b) r+=(float)1/(f_b+1);\n        while(b_2!=0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t);\n            b_2=b_2-(1\u003c\u003cf_t);\n        }\n        while(a_2!=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t);\n            a_2=a_2-(1\u003c\u003cf_t);\n        }\n    }\n    return r/count;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b; cin \u003e\u003e a  \u003e\u003e b;\n        cout \u003c\u003c solve(a,b) \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(int n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nvector\u003cfloat\u003e count_1(int n)\n{\n    float r=0;float c=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(float)(b_1+c_1)/l_n;\n        c+=(b_1+c_1);\n    }\n    return {r,c};\n}\nvector\u003cfloat\u003e count_1(int m,int n,int k)\n{\n    float r=0;if(n==0)r++;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;\n        r+=(b_1+c_1);//l_n;\n    }\n    r+=(k+1);\n    return {(float)r/(m+1),r};\n}\nvoid solve(int a,int b)\n{\n    int f_b = rev(b);int f_a=rev(a);int count=b-a+1;\n    int b_2=b-(1\u003c\u003cf_b);int a_2=a-1-(1\u003c\u003cf_a);float r=0;float c=0;\n    {\n        r+=count_1(f_b)[0];r-=count_1(f_a)[0];\n        c+=count_1(f_b)[1];c-=count_1(f_a)[1];\n        while(b_2\u003e0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t,b_2)[0];\n            c+=count_1(f_b,f_t,b_2)[1];\n            b_2=b_2-(1\u003c\u003cf_t);\n        }\n        while(a_2\u003e=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t,a_2)[0];\n            c-=count_1(f_a,f_t,a_2)[1];\n            a_2=a_2-(1\u003c\u003cf_t);\n        }\n    }\n    cout \u003c\u003c r/count \u003c\u003c \" \" \u003c\u003c c/count \u003c\u003c endl;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b; cin \u003e\u003e a  \u003e\u003e b;\n        solve(a,b);\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(int n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nvector\u003cfloat\u003e count_1(int n)\n{\n    float r=0;float c=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(float)(b_1+c_1)/l_n;\n        c+=(b_1+c_1);\n    }\n    return {r,c};\n}\nvector\u003cfloat\u003e count_1(int m,int n,int k)\n{\n    float r=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;\n        r+=(b_1+c_1);\n    }\n    r+=(k+1);\n    return {(float)r/(m+1),r};\n}\nvoid solve(int a,int b)\n{\n    int f_b = rev(b);int f_a=rev(a);int count=b-a+1;\n    int b_2=b-(1\u003c\u003cf_b);int a_2=a-1-(1\u003c\u003cf_a);float r=0;float c=0;\n    {\n        r+=count_1(f_b)[0];r-=count_1(f_a)[0];\n        c+=count_1(f_b)[1];c-=count_1(f_a)[1];\n        while(b_2\u003e=0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t,b_2)[0];\n            c+=count_1(f_b,f_t,b_2)[1];\n            b_2=b_2-(1\u003c\u003cf_t);\n        }\n        while(a_2\u003e=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t,a_2)[0];\n            c-=count_1(f_a,f_t,a_2)[1];\n            a_2=a_2-(1\u003c\u003cf_t);\n        }\n    }\n    cout \u003c\u003c r/count \u003c\u003c \" \" \u003c\u003c c/count \u003c\u003c endl;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b; cin \u003e\u003e a  \u003e\u003e b;\n        solve(a,b);\n    }\n    return 0;\n}\n","score":0.021739130435,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(int n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nvector\u003cdouble\u003e count_1(int n)\n{\n    double r=0;float c=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(double)(b_1+c_1)/l_n;\n        c+=(b_1+c_1);\n    }\n    return {r,c};\n}\nvector\u003cdouble\u003e count_1(int m,int n,int k)\n{\n    double r=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1\u003c\u003ci;int c_1=(1\u003c\u003c(i-1))*i;\n        r+=(b_1+c_1);\n    }\n    r+=(k+1);\n    return {(double)r/(m+1),r};\n}\nvoid solve(int a,int b)\n{\n    int f_b = rev(b);int f_a=rev(a);int count=b-a+1;\n    int b_2=b-(1\u003c\u003cf_b);int a_2=a-1-(1\u003c\u003cf_a);double r=0;double c=0;\n    {\n        r+=count_1(f_b)[0];r-=count_1(f_a)[0];\n        c+=count_1(f_b)[1];c-=count_1(f_a)[1];\n        while(b_2\u003e=0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t,b_2)[0];\n            c+=count_1(f_b,f_t,b_2)[1];\n            b_2=b_2-(1\u003c\u003cf_t);\n        }\n        while(a_2\u003e=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t,a_2)[0];\n            c-=count_1(f_a,f_t,a_2)[1];\n            a_2=a_2-(1\u003c\u003cf_t);\n        }\n    }\n    cout \u003c\u003c r/count \u003c\u003c \" \" \u003c\u003c c/count \u003c\u003c endl;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        int a,b; cin \u003e\u003e a  \u003e\u003e b;\n        solve(a,b);\n    }\n    return 0;\n}\n","score":0.217391304348,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nmap\u003cpair\u003cint,int\u003e,float\u003e m;\nint rev(long n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nvector\u003cdouble\u003e count_1(int n)\n{\n    double r=0;float c=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1ULL\u003c\u003ci;int c_1=(1ULL\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(double)(b_1+c_1)/l_n;\n        c+=(b_1+c_1);\n    }\n    return {r,c};\n}\nvector\u003cdouble\u003e count_1(int m,int n,int k)\n{\n    double r=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int b_1=1ULL\u003c\u003ci;int c_1=(1ULL\u003c\u003c(i-1))*i;\n        r+=(b_1+c_1);\n    }\n    r+=(k+1);\n    return {(double)r/(m+1),r};\n}\nvoid solve(long a,long b)\n{\n    int f_b = rev(b);int f_a=rev(a);long  count=b-a+1;\n    long b_2=b-(1ULL\u003c\u003cf_b);long a_2=a-1-(1ULL\u003c\u003cf_a);\n    double r=0;double c=0;\n    {\n        r+=count_1(f_b)[0];r-=count_1(f_a)[0];\n        c+=count_1(f_b)[1];c-=count_1(f_a)[1];\n        while(b_2\u003e=0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t,b_2)[0];\n            c+=count_1(f_b,f_t,b_2)[1];\n            b_2=b_2-(1\u003c\u003cf_t);\n        }\n        while(a_2\u003e=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t,a_2)[0];\n            c-=count_1(f_a,f_t,a_2)[1];\n            a_2=a_2-(1\u003c\u003cf_t);\n        }\n    }\n    cout \u003c\u003c r/count \u003c\u003c \" \" \u003c\u003c c/count \u003c\u003c endl;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        long a,b; cin \u003e\u003e a  \u003e\u003e b;\n        solve(a,b);\n    }\n    return 0;\n}\n","score":0.217391304348,"language":"cpp"},{"contest":"Master","challenge":"Random Integers Random Bits","code":"#include \u003ccmath\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ciomanip\u003e\n#include \u003cmap\u003e\nusing namespace std;//another work in progress\nint T[34];\nint rev(long n) \n{ \n    int p = (int)log2(n); \n    return p;  \n} \nvector\u003cdouble\u003e count_1(int n)\n{\n    double r=0;float c=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        long b_1=1L\u003c\u003ci;long c_1=(1L\u003c\u003c(i-1))*i;int l_n=i+1; \n        r+=(double)(b_1+c_1)/l_n;\n        c+=(b_1+c_1);\n    }\n    T[n]=c;\n    return {r,c};\n}\nvector\u003cdouble\u003e count_1(int m,long n,long k)\n{\n    double r=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        long b_1=1L\u003c\u003ci;long c_1=(1L\u003c\u003c(i-1))*i;\n        r+=(b_1+c_1);\n    }\n    r+=(k+1);\n    return {(double)r/(m+1),r};\n}\nvoid solve(long a,long b)\n{\n    int f_b = rev(b);int f_a=rev(a);long  count=b-a+1;\n    long b_2=b-(1L\u003c\u003cf_b);long a_2=a-1-(1L\u003c\u003cf_a);double r=0;double c=0;\n    //cout \u003c\u003c b \u003c\u003c \" - 2^\"\u003c\u003c f_b \u003c\u003c \" = \" \u003c\u003c b_2 \u003c\u003c endl;\n    {\n        r+=count_1(f_b)[0];r-=count_1(f_a)[0];\n        c+=count_1(f_b)[1];c-=count_1(f_a)[1];\n        while(b_2\u003e=0)\n        {\n            int f_t=rev(b_2);\n            r+=count_1(f_b,f_t,b_2)[0];\n            c+=count_1(f_b,f_t,b_2)[1];\n            b_2=b_2-(1L\u003c\u003cf_t);\n        }\n        while(a_2\u003e=0)\n        {\n            int f_t=rev(a_2);\n            r-=count_1(f_a,f_t,a_2)[0];\n            c-=count_1(f_a,f_t,a_2)[1];\n            a_2=a_2-(1L\u003c\u003cf_t);\n        }\n    }\n    cout \u003c\u003c r/count \u003c\u003c \" \" \u003c\u003c c/count \u003c\u003c endl;\n}\nint main() {\n    int t;cin \u003e\u003e t;\n    cout.setf(ios::fixed, ios::floatfield); cout.precision(5);\n    while(t--)\n    {\n        long a,b; cin \u003e\u003e a  \u003e\u003e b;\n        solve(a,b);\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 7: Arrays","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n    while(n--){int a;cin \u003e\u003e a;v.push_back(a);}\n    reverse(v.begin(),v.end());\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Determining DNA Health","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,i;cin \u003e\u003e n;i=0;\n    vector\u003cstring\u003e v;vector\u003cint\u003e v_s;\n    while(i\u003cn)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);i++;\n    }\n    i=0;\n    while(i\u003cn)\n    {\n        int a;cin \u003e\u003e a;\n        v_s.push_back(a);i++;\n    }\n    cin \u003e\u003e n;vector\u003cint\u003e r;\n    while(n--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;int t=0;\n        string s;cin \u003e\u003e s;\n        for(int j=a;j\u003c=b;j++)\n        {\n            size_t f=s.find(v[j]);\n            while(f!=string::npos)\n            {\n                t+=v_s[j];\n                f=s.find(v[j],f+1);\n                if(f==string::npos)\n                    break;\n            }\n        }\n        r.push_back(t);\n    }\n    i=r[0];n=r[0];\n    for(int j=0;j\u003cr.size();j++)\n    {\n        i=max(i,r[j]);n=min(n,r[j]);\n    }  \n    cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c i;\n\n}\n","score":0.084905660377,"language":"cpp"},{"contest":"Master","challenge":"Determining DNA Health","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,i,m;cin \u003e\u003e n;i=0;\n    vector\u003cstring\u003e v;vector\u003cint\u003e v_s;\n    while(i\u003cn)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);i++;\n    }\n    i=0;\n    while(i\u003cn)\n    {\n        int a;cin \u003e\u003e a;\n        v_s.push_back(a);i++;\n    }\n    cin \u003e\u003e n;vector\u003cint\u003e r;\n    i=-1;m=INT_MAX;\n    while(n--)\n    {\n        int a,b;cin \u003e\u003e a \u003e\u003e b;int t=0;\n        string s;cin \u003e\u003e s;\n        for(int j=a;j\u003c=b;j++)\n        {\n            size_t f=s.find(v[j]);\n            while(f!=string::npos)\n            {\n                t+=v_s[j];\n                f=s.find(v[j],f+1);\n                if(f==string::npos)\n                    break;\n            }\n        }\n        m=min(m,t);i=max(i,t);\n    } \n    cout \u003c\u003c m \u003c\u003c \" \" \u003c\u003c i;\n\n}\n","score":0.084905660377,"language":"cpp"},{"contest":"Master","challenge":"Printing Tokens","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    char *s;\n    s = malloc(1024 * sizeof(char));\n    scanf(\"%[^\\n]\", s);\n    s = realloc(s, strlen(s) + 1);\n    for(int i=0;i\u003cstrlen(s);i++)\n    {\n        if(s[i]==' ')\n            printf(\"\\n\");\n        else\n            printf(\"%c\",s[i]);\n    }  \n\n    //Write your logic to print the tokens of the sentence here.\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Digit Frequency","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    char* s;\n    int t[10]={0,0,0,0,0,0,0,0,0,0};\n    s=malloc(1024*sizeof(char));\n    scanf(\"%s\",s);\n    s=realloc(s,strlen(s)+1);\n    for(int i=0;i\u003cstrlen(s);i++)\n    {\n        \n        if(s[i]-'0'\u003c10)\n        {\n            t[s[i]-'0']++;\n        } \n    }\n    for(int i=0;i\u003c10;i++)\n    {\n        printf(\"%d \",t[i]);\n    }\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Sum of Digits of a Five Digit Number","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\t\n    char *s=malloc(6*sizeof(char));int t=0;\n    scanf(\"%s\", s);\n    for(int i=0;i\u003cstrlen(s);i++)\n        t+=(s[i]-'0');\n    printf(\"%d\",t);\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 8: Dictionaries and Maps","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cmap\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003e n;\n    map\u003cstring,int\u003e m;\n    while(n--)  \n    {\n        string s;int a;\n        cin \u003e\u003e s;cin \u003e\u003e a;\n        m[s]=a; \n    }\n    string s;\n    getline(cin,s);\n    while (getline(cin, s))\n    {\n        if(m[s])    cout \u003c\u003c s \u003c\u003c\"=\"\u003c\u003cm[s]\u003c\u003cendl;\n        else cout \u003c\u003c \"Not found\"\u003c\u003cendl;\n    }\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Common Child","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    string s,c;cin \u003e\u003e s \u003e\u003e c;\n    map\u003cchar,int\u003e m;char l_c=s[0];\n    for(auto i:s) \n    {\n        if(i!=l_c) {m[i]++;l_c=i;}\n    }\n    for(auto i:c) \n    {\n        if(i!=l_c) {m[i]++;l_c=i;}\n    }\n    int M=0;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n    {\n        if(i-\u003esecond\u003e1) M=max(M,i-\u003esecond);\n    }\n    cout \u003c\u003c M;\n}\n","score":0.083333333333,"language":"cpp"},{"contest":"Master","challenge":"Common Child","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    string s,c;cin \u003e\u003e s \u003e\u003e c;vector\u003cint\u003e t;\n    for(int i=0;i\u003cs.size();i++)\n    {\n        size_t f=c.find(s[i]);\n        if(f!=string::npos)\n        {\n            t.push_back(f);\n        }\n    }\n    int m=1;int M=0;\n    if(!t.empty())\n        for(int i=0;i\u003ct.size()-1;i++)\n        {\n            if(t[i]\u003ct[i+1]) m++;\n            else m=1;\n            M=max(M,m);\n        }\n    cout \u003c\u003c M;\n}\n","score":0.166666666667,"language":"cpp"},{"contest":"Master","challenge":"Common Child","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    string s,c;cin \u003e\u003e s \u003e\u003e c;string t=\"\";\n    for(int i=0;i\u003cs.size();i++)\n    {\n        size_t f=c.find(s[i]);\n        if(f!=string::npos)\n        {\n            t+=s[i];\n        }\n    }\n    int m=0;\n    if(t!=\"\")\n    {\n        for(int i=0;i\u003ct.size();i++)\n        {\n            size_t f=c.find(t[i]);\n            if(f!=string::npos)\n            {\n                int j=i+1;\n                while(f!=string::npos)\n                {\n                    f=c.find(t[j],f+1);j++;\n                }\n                m=max(m,j-i-1);\n            }\n        }\n    }\n    cout \u003c\u003c m;\n}\n","score":0.166666666667,"language":"cpp"},{"contest":"Master","challenge":"Common Child","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    string s,c;cin \u003e\u003e s \u003e\u003e c;string t=\"\";\n    for(int i=0;i\u003cs.size();i++)\n    {\n        size_t f=c.find(s[i]);\n        if(f!=string::npos)\n        {\n            t+=s[i];\n        }\n    }\n    int m=0;\n    cout \u003c\u003c t \u003c\u003c endl;\n    if(t!=\"\")\n    {\n        for(int i=0;i\u003ct.size();i++)\n        {\n            int count=0;\n            //cout \u003c\u003c t[i];\n            size_t f=c.find(t[i]);\n            if(f!=string::npos)\n            {\n                count+=1;\n                for(int j=i+1;j\u003ct.size();j++)\n                {\n                    size_t ftemp=c.find(t[j],f+1);\n                    if(ftemp!=string::npos)\n                    {\n                        /*cout \u003c\u003c t[j];*/f=ftemp;count++;\n                    }\n                }\n                m=max(m,count);\n            }\n            //cout \u003c\u003c endl;\n        }\n    }\n    cout \u003c\u003c m;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Common Child","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    string s,c;cin \u003e\u003e s \u003e\u003e c;string t=\"\";\n    for(int i=0;i\u003cs.size();i++)\n    {\n        size_t f=c.find(s[i]);\n        if(f!=string::npos)\n        {\n            t+=s[i];\n        }\n    }\n    int m=0;\n    //cout \u003c\u003c t \u003c\u003c endl;\n    if(t!=\"\")\n    {\n        for(int i=0;i\u003ct.size();i++)\n        {\n            int count=0;\n            //cout \u003c\u003c t[i];\n            size_t f=c.find(t[i]);\n            if(f!=string::npos)\n            {\n                count+=1;\n                for(int j=i+1;j\u003ct.size();j++)\n                {\n                    size_t ftemp=c.find(t[j],f+1);\n                    if(ftemp!=string::npos)\n                    {\n                        /*cout \u003c\u003c t[j];*/f=ftemp;count++;\n                    }\n                }\n                m=max(m,count);\n            }\n            //cout \u003c\u003c endl;\n        }\n    }\n    cout \u003c\u003c m;\n}\n","score":0.166666666667,"language":"cpp"},{"contest":"Master","challenge":"Day 9: Recursion 3  ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the factorial function below.\nint T[13];\nint factorial(int n) {\n    if(n\u003c=1) return 1;\n    else\n    {\n        return factorial(n-1)*n;\n    }\n\n}\n\nint main()\n{\n    int n;cin\u003e\u003en;\n    cout\u003c\u003cfactorial(n);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"1D Arrays in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int n;int m=0;scanf(\"%d\",\u0026n);\n    while(n--) \n    {\n        int a; scanf(\"%d\",\u0026a);\n        m+=a;\n    }\n    printf(\"%d\",m);\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Array Reversal","code":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int num, *arr, i;\n    scanf(\"%d\", \u0026num);\n    arr = (int*) malloc(num * sizeof(int));\n    for(i = 0; i \u003c num; i++) {\n        scanf(\"%d\", arr + i);\n    }\n\n\n    /* Write the logic to reverse the array. */\n\n    for(i = num-1; i \u003e=0; i--)\n        printf(\"%d \", *(arr + i));\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Variadic functions in C","code":"\nint  sum (int count,...) {\n    int m=0;int i;va_list args;\n    va_start(args,count);\n    for(i=0;i\u003ccount;i++)\n    {\n        m+=va_arg(args, int);\n    }\n    va_end(args);\n    return m;\n}\n\nint min(int count,...) {\n    int m=MAX_ELEMENT;int i;va_list args;\n    va_start(args,count);\n    for(i=0;i\u003ccount;i++)\n    {\n        int n=va_arg(args, int);\n        if(m\u003en) m=n;\n    }\n    va_end(args);\n    return m;\n}\n\nint max(int count,...) {\n    int m=MIN_ELEMENT;int i;va_list args;\n    va_start(args,count);\n    for(i=0;i\u003ccount;i++)\n    {\n        int n=va_arg(args, int);\n        if(m\u003cn) m=n;\n    }\n    va_end(args);\n    return m;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=w/2;j++)\n    {\n        vector\u003cint\u003e v;\n        /*for(int i=j;i\u003c2*(w-2*j)+2*(l-2*j);i++)\n        {\n            if(i\u003cl-j)\n                v.push_back(matrix[i][j]);\n            if(i\u003el-j \u0026\u0026 i\u003cw+l-3*j)\n                v.push_back(matrix[l-1-j][i-l+j]);\n            if(i\u003el+w-2*j \u0026\u0026 i\u003cw+2*l-3*j)\n                v.push_back(matrix[l-1-j-i+l+w-2*j][w-1-j]);\n            if(i\u003e2*l+w-3*j \u0026\u0026 i\u003c2*w+2*l-4*j-1)\n                v.push_back(matrix[j][w-1-i+2*l+w-3*j]);\n        }*/\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003c=m.size();j++)\n    {\n    /*   for(int i=j;i\u003cm[j].size();i++)\n        {\n            if(i\u003cl-j)\n                matrix[i][j]=m[j][i];\n            if(i\u003el-j \u0026\u0026 i\u003cw+l-2*j)\n                matrix[l-1-j][i-l+j]=m[j][i];\n            if(i\u003el+w-2*j \u0026\u0026 i\u003cw+2*l-3*j)\n                matrix[l-1-j-i+l+w-2*j][w-1-j]=m[j][i];\n            if(i\u003e2*l+w-3*j \u0026\u0026 i\u003c2*w+2*l-4*j-1)\n                matrix[j][w-1-i+2*l+w-3*j]=m[j][i];\n        }*/\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=w/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003c=l-2*(j-1);i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003c=w-2*(j-1);i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003c=l-2*(j-1);i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003c=w-2*(j-1);i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003c=m.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=w/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003c=m.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=w/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003c=m.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=min(w,l)/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003c=m.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003c=min(w,l)/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003cm.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"Matrix Layer Rotation ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstring ltrim(const string \u0026);\nstring rtrim(const string \u0026);\nvector\u003cstring\u003e split(const string \u0026);\n\n// Complete the matrixRotation function below.\nvoid matrixRotation(vector\u003cvector\u003cint\u003e\u003e matrix, int cercle) {\n    vector\u003cvector\u003cint\u003e\u003e m;\n    int l=matrix.size();int w=matrix[0].size();\n    for(int j=0;j\u003cmin(w,l)/2;j++)\n    {\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[j+i][j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[l-j-1][i+j]);\n        }\n        for(int i=0;i\u003cl-2*j-1;i++)\n        {\n            v.push_back(matrix[l-1-j-i][w-1-j]);\n        }\n        for(int i=0;i\u003cw-2*j-1;i++)\n        {\n            v.push_back(matrix[j][w-1-j-i]);\n        }\n        m.push_back(v);\n    }\n    for(int i=0;i\u003cm.size();i++)\n    {\n        vector\u003cint\u003e r(m[i].size());\n        for(int j=0;j\u003cm[i].size();j++)\n        {\n            r[(j+cercle)%m[i].size()]=m[i][j];\n        }\n        m[i]=r;\n    }\n    for(int j=0;j\u003cm.size();j++)\n    {\n        int k=0;\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[j+i][j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[l-j-1][i+j]=m[j][k];\n        }\n        for(int i=0;i\u003cl-2*j-1;i++,k++)\n        {\n            matrix[l-1-j-i][w-1-j]=m[j][k];\n        }\n        for(int i=0;i\u003cw-2*j-1;i++,k++)\n        {\n            matrix[j][w-1-j-i]=m[j][k];\n        }\n    }\n    for(auto i:matrix)\n    {\n        for(auto j:i)\n            cout \u003c\u003c j \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n\nint main()\n{\n    string mnr_temp;\n    getline(cin, mnr_temp);\n\n    vector\u003cstring\u003e mnr = split(rtrim(mnr_temp));\n\n    int m = stoi(mnr[0]);\n\n    int n = stoi(mnr[1]);\n\n    int r = stoi(mnr[2]);\n\n    vector\u003cvector\u003cint\u003e\u003e matrix(m);\n\n    for (int i = 0; i \u003c m; i++) {\n        matrix[i].resize(n);\n\n        string matrix_row_temp_temp;\n        getline(cin, matrix_row_temp_temp);\n\n        vector\u003cstring\u003e matrix_row_temp = split(rtrim(matrix_row_temp_temp));\n\n        for (int j = 0; j \u003c n; j++) {\n            int matrix_row_item = stoi(matrix_row_temp[j]);\n\n            matrix[i][j] = matrix_row_item;\n        }\n    }\n\n    matrixRotation(matrix, r);\n\n    return 0;\n}\n\nstring ltrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        s.begin(),\n        find_if(s.begin(), s.end(), not1(ptr_fun\u003cint, int\u003e(isspace)))\n    );\n\n    return s;\n}\n\nstring rtrim(const string \u0026str) {\n    string s(str);\n\n    s.erase(\n        find_if(s.rbegin(), s.rend(), not1(ptr_fun\u003cint, int\u003e(isspace))).base(),\n        s.end()\n    );\n\n    return s;\n}\n\nvector\u003cstring\u003e split(const string \u0026str) {\n    vector\u003cstring\u003e tokens;\n\n    string::size_type start = 0;\n    string::size_type end = 0;\n\n    while ((end = str.find(\" \", start)) != string::npos) {\n        tokens.push_back(str.substr(start, end - start));\n\n        start = end + 1;\n    }\n\n    tokens.push_back(str.substr(start));\n\n    return tokens;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 10: Binary Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint bin(unsigned n) \n{ \n    int c=0;\n    while(n\u003e0)\n    {\n        if(n\u00261)\n            c++;\n        else\n            c=0;\n        n=n\u003e\u003e1;\n    }\n    return c;\n}\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    cout \u003c\u003c bin(n);\n    return 0;\n}\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Day 10: Binary Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint bin(unsigned n) \n{ \n    int c=0;\n    while(n\u003e0)\n    {\n        if(n\u00261)\n            c++;\n        else\n            c=0;\n        n=n\u003e\u003e1;\n    }\n    return c;\n}\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    cout \u003c\u003c bin(n);\n    return 0;\n}\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Day 10: Binary Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint bin(unsigned n) \n{ \n    int c=0;int t=0;\n    while(n\u003e0)\n    {\n        if(n\u00261)\n            c++;\n        else\n        {\n            t=max(c,t);\n            c=0;\n        }\n        n=n\u003e\u003e1;\n        t=max(c,t);\n    }\n    return t;\n}\nint main()\n{\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    cout \u003c\u003c bin(n);\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"\"Hello World!\" in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() \n{\n\t\n    char s[100];\n    scanf(\"%[^\\n]%*c\", \u0026s);\n  \tprintf(\"Hello, World!\\n%s\",s);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Playing With Characters","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() \n{\n\n    char* c;c=malloc(1024*sizeof(char));\n    for(int i=0;i\u003c3;i++)\n        {scanf(\"%[^\\n]%*c\",c);\n        printf(\"%s\\n\",c);}\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Playing With Characters","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() \n{\n\n    char* c;c=malloc(1024*sizeof(char));\n    for(int i=0;i\u003c3;i++)\n        {scanf(\"%[^\\n]%*c\",c);\n        printf(\"%s\\n\",c);}\n    free(c);\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Sum and Difference of Two Numbers","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n\tint a;int b;\n    float c;float d;\n    scanf(\"%d\",\u0026a);scanf(\"%d\",\u0026b);\n    scanf(\"%f\",\u0026c);scanf(\"%f\",\u0026d);\n    printf(\"%d %d\\n\",a+b,a-b);printf(\"%.1f %.1f\",c+d,c-d);\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Functions in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstdarg.h\u003e\nint max_of_four(int a,...)\n{\n    int m=-1;int i;\n    va_list arg;\n    va_start(arg,a);\n    for(i=0;i\u003ca;i++)\n    {\n        int temp=va_arg(arg, int);\n        if(m\u003ctemp) m=temp;\n    }\n    va_end(arg);\n    return m;\n}\nint main() {\n    int a, b, c, d;\n    scanf(\"%d %d %d %d\", \u0026a, \u0026b, \u0026c, \u0026d);\n    int ans = max_of_four(a, b, c, d);\n    printf(\"%d\", ans);\n    \n    return 0;\n}\n\n","score":0.5,"language":"c"},{"contest":"Master","challenge":"Functions in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstdarg.h\u003e\nint max_of_four(int a,...)\n{\n    int m=-1;int i;\n    va_list arg;\n    va_start(arg,a);\n    for(i=0;i\u003ca;i++)\n    {\n        int temp=va_arg(arg, int);\n        if(m\u003ctemp) m=temp;\n    }\n    va_end(arg);\n    return m;\n}\nint main() {\n    int a, b, c, d;\n    scanf(\"%d %d %d %d\", \u0026a, \u0026b, \u0026c, \u0026d);\n    int ans = max_of_four(a, b, c, d);\n    printf(\"%d\", ans);\n    \n    return 0;\n}\n\n","score":0.25,"language":"c"},{"contest":"Master","challenge":"Functions in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstdarg.h\u003e\n#define max(a,b)            (((a) \u003e (b)) ? (a) : (b))\nint max_of_n(int a,...)\n{\n    int m=-1;int i;\n    va_list arg;\n    va_start(arg,a);\n    for(i=0;i\u003ca;i++)\n    {\n        int temp=va_arg(arg, int);\n        if(m\u003ctemp) m=temp;\n    }\n    va_end(arg);\n    return m;\n}\nint max_of_four(int a,int b,int c,int d)\n{\n    return max(max(a,b),max(c,d));\n}\nint main() {\n    int a, b, c, d;\n    scanf(\"%d %d %d %d\", \u0026a, \u0026b, \u0026c, \u0026d);\n    int ans = max_of_four(a, b, c, d);\n    printf(\"%d\", ans);\n    \n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Pointers in C","code":"#include \u003cstdio.h\u003e\n\nvoid update(int *a,int *b) {\n    int temp=*a;\n    *a+=*b;\n    *b=(*b-temp)\u003e0?*b-temp:temp-*b;\n}\n\nint main() {\n    int a, b;\n    int *pa = \u0026a, *pb = \u0026b;\n    \n    scanf(\"%d %d\", \u0026a, \u0026b);\n    update(pa, pb);\n    printf(\"%d\\n%d\", a, b);\n\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"2's complement","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint num1_p(long a)\n{\n    if(a==0) return 0;\n    int c=0;int p=(int) log2(a);\n    for(int i=0;i\u003cp;i++)\n        c+=(1\u003c\u003c(i))+(1\u003c\u003c(i-1))*i;\n    c+=a-(1\u003c\u003cp)+1+num1_p(a-(1\u003c\u003cp));\n    return c;\n}\nint num1_n(long a)\n{\n    int c=num1_p(-a-1);\n    c=(-32)*a-c;\n    return c;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        long a;long b;cin \u003e\u003e a \u003e\u003e b;\n        if(a\u003e=0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)-num1_p(a-1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(a)-num1_n(b+1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)+num1_n(a)\u003c\u003cendl;\n        }\n        if(a\u003e=0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(b)+num1_p(a)\u003c\u003cendl;\n        }\n    }\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"2's complement","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint num1_p(long a)\n{\n    if(a\u003c=0) return 0;\n    int c=0;int p=(int) log2(a);\n    for(int i=0;i\u003cp;i++)\n        c+=(1\u003c\u003c(i))+(1\u003c\u003c(i-1))*i;\n    c+=a-(1\u003c\u003cp)+1+num1_p(a-(1\u003c\u003cp));\n    return c;\n}\nint num1_n(long a)\n{\n    int c=num1_p(-a-1);\n    c=(-32)*a-c;\n    return c;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        long a;long b;cin \u003e\u003e a \u003e\u003e b;\n        if(a\u003e=0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)-num1_p(a-1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(a)-num1_n(b+1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)+num1_n(a)\u003c\u003cendl;\n        }\n        if(a\u003e=0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(b)+num1_p(a)\u003c\u003cendl;\n        }\n    }\n}\n","score":0.222222222222,"language":"cpp"},{"contest":"Master","challenge":"2's complement","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long num1_p(long a)\n{\n    if(a\u003c=0) return 0;\n    long long c=0;int p=(int) log2(a);\n    for(int i=0;i\u003cp;i++)\n        c+=(1ll\u003c\u003c(i))+(1ll\u003c\u003c(i-1))*i;\n    c+=a-(1\u003c\u003cp)+1+num1_p(a-(1\u003c\u003cp));\n    return c;\n}\nlong long num1_n(long a)\n{\n    long long c=num1_p(-a-1);\n    c=(-32)*a-c;\n    return c;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        long a;long b;cin \u003e\u003e a \u003e\u003e b;\n        if(a\u003e=0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)-num1_p(a-1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(a)-num1_n(b+1)\u003c\u003cendl;\n        }\n        if(a\u003c0 \u0026\u0026 b\u003e=0)\n        {\n            cout \u003c\u003c num1_p(b)+num1_n(a)\u003c\u003cendl;\n        }\n        if(a\u003e=0 \u0026\u0026 b\u003c0)\n        {\n            cout \u003c\u003c num1_n(b)+num1_p(a)\u003c\u003cendl;\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Changing Bits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,k;cin \u003e\u003e n\u003e\u003ek;\n    string a,b;cin \u003e\u003e a \u003e\u003e b;\n    bitset\u003c32\u003e b_a(a);bitset\u003c32\u003e b_b(b);\n    while(k--)\n    {\n        string q;cin \u003e\u003e q;\n        if(q.find(\"set_\")!=string::npos)\n        {\n            if(q.find(\"a\")!=string::npos)\n            {\n                int input;cin \u003e\u003e input;int value;cin \u003e\u003e value;\n                b_a[input]=value;\n            }\n            if(q.find(\"b\")!=string::npos)\n            {\n                int input;cin \u003e\u003e input;int value;cin \u003e\u003e value;\n                b_b[input]=value;\n            }\n        }\n        else\n        {\n            int ttl=(int)b_a.to_ulong()+(int)b_b.to_ulong();\n            bitset\u003c32\u003e b_c(ttl);\n            int input;cin \u003e\u003e input;\n            cout \u003c\u003c b_c[input];\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Changing Bits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,k;cin \u003e\u003e n\u003e\u003ek;\n    string a,b;cin \u003e\u003e a \u003e\u003e b;\n    bitset\u003c10000\u003e b_a(a);bitset\u003c10000\u003e b_b(b);\n    while(k--)\n    {\n        string q;cin \u003e\u003e q;\n        if(q.find(\"set_\")!=string::npos)\n        {\n            if(q.find(\"a\")!=string::npos)\n            {\n                int input;cin \u003e\u003e input;int value;cin \u003e\u003e value;\n                b_a[input]=value;\n            }\n            if(q.find(\"b\")!=string::npos)\n            {\n                int input;cin \u003e\u003e input;int value;cin \u003e\u003e value;\n                b_b[input]=value;\n            }\n        }\n        else\n        {\n            int ttl=(int)b_a.to_ulong()+(int)b_b.to_ulong();\n            bitset\u003c10000\u003e b_c(ttl);\n            int input;cin \u003e\u003e input;\n            cout \u003c\u003c b_c[input];\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day 12: Inheritance","code":"\n\nclass Student :  public Person{\n\tprivate:\n\t\tvector\u003cint\u003e testScores;  \n\tpublic:\n        Student(string fname,string lname,int id,vector\u003cint\u003e scores):Person(fname,lname,id)\n        {\n            this-\u003etestScores=scores;\n        }\n        char calculate()\n        {\n            float x=0;\n            for(auto i:this-\u003etestScores)\n                x+=i;\n            x/=this-\u003etestScores.size();\n            if(x\u003e=90) return 'O';\n            else if(x\u003c90 \u0026\u0026 x\u003e=80) return 'E';\n            else if(x\u003c80 \u0026\u0026 x\u003e=70) return 'A';\n            else if(x\u003c70 \u0026\u0026 x\u003e=55) return 'P';\n            else if(x\u003c55 \u0026\u0026 x\u003e=40) return 'D';\n            else return 'T';\n        }\n};\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 11: 2D Arrays","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint extract_hg(vector\u003cvector\u003cint\u003e\u003e v,int k,int l)\n{\n    int sum=0;\n    for(int i=0;i\u003c3;i++)\n        sum+=v[l][k+i]+v[l+2][k+i];\n    sum+=v[l+1][k+1];\n    return sum;\n}\n\n\nint main()\n{\n    vector\u003cvector\u003cint\u003e\u003e arr(6);\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n    int m=-1;\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n            m=max(m,extract_hg(arr,j,i));\n    }\n    cout \u003c\u003c m;\n    return 0;\n}\n","score":0.714285714286,"language":"cpp"},{"contest":"Master","challenge":"Day 11: 2D Arrays","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint extract_hg(vector\u003cvector\u003cint\u003e\u003e v,int k,int l)\n{\n    int sum=0;\n    for(int i=0;i\u003c3;i++)\n        sum+=v[l][k+i]+v[l+2][k+i];\n    sum+=v[l+1][k+1];\n    return sum;\n}\n\n\nint main()\n{\n    int m=-1;\n    vector\u003cvector\u003cint\u003e\u003e arr(6);\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n            m=min(m,arr[i][j]);\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n            m=max(m,extract_hg(arr,j,i));\n    }\n    cout \u003c\u003c m;\n    return 0;\n}\n","score":0.857142857143,"language":"cpp"},{"contest":"Master","challenge":"Day 11: 2D Arrays","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint extract_hg(vector\u003cvector\u003cint\u003e\u003e v,int k,int l)\n{\n    int sum=0;\n    for(int i=0;i\u003c3;i++)\n        sum+=v[l][k+i]+v[l+2][k+i];\n    sum+=v[l+1][k+1];\n    return sum;\n}\n\n\nint main()\n{\n    int m=-100;\n    vector\u003cvector\u003cint\u003e\u003e arr(6);\n    for (int i = 0; i \u003c 6; i++) {\n        arr[i].resize(6);\n\n        for (int j = 0; j \u003c 6; j++) {\n            cin \u003e\u003e arr[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n            m=max(m,extract_hg(arr,j,i));\n    }\n    cout \u003c\u003c m;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Revising the Select Query I","code":"Select * from CITY where POPULATION \u003e 100000 and COUNTRYCODE = 'USA';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Revising the Select Query II","code":"select NAME from CITY where POPULATION \u003e 120000 and COUNTRYCODE ='USA';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Select All","code":"select * from CITY","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Select By ID","code":"SELECT * FROM CITY where ID=1661;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Japanese Cities' Attributes","code":"select * from CITY where COUNTRYCODE='JPN';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Japanese Cities' Names","code":"select NAME from CITY where COUNTRYCODE='JPN';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 1","code":"/*\nEnter your query here.\nPlease append a semicolon \";\" at the end of the query and enter your query in a single line to avoid error.\n*/\nselect CITY,STATE from STATION;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 3","code":"/*\nEnter your query here.\nPlease append a semicolon \";\" at the end of the query and enter your query in a single line to avoid error.\n*/\nselect distinct(CITY) from STATION where MOD(ID,2)=0;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 4","code":"/*\nEnter your query here.\nPlease append a semicolon \";\" at the end of the query and enter your query in a single line to avoid error.\n*/\nselect count(CITY)-count(distinct(CITY)) from STATION;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 5","code":"/*\nEnter your query here.\nPlease append a semicolon \";\" at the end of the query and enter your query in a single line to avoid error.\n*/\nselect CITY,length(CITY) from STATION order by length(CITY)asc, CITY  LIMIT 1;\nselect CITY,length(CITY) from STATION order by length(CITY)desc,CITY LIMIT 1;","score":1.0,"language":"mysql"},{"contest":"Master","challenge":"Weather Observation Station 6","code":"select distinct(CITY) from STATION where CITY like 'a%' ;\nselect distinct(CITY) from STATION where CITY like 'o%' ;\nselect distinct(CITY) from STATION where CITY like 'i%' ;\nselect distinct(CITY) from STATION where CITY like 'u%' ;\nselect distinct(CITY) from STATION where CITY like 'e%' ;","score":1.0,"language":"mysql"},{"contest":"Master","challenge":"Weather Observation Station 6","code":"select CITY from STATION where REGEXP_LIKE(CITY,\"[aoiue]*\");","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 7","code":"SELECT DISTINCT CITY FROM STATION\nWHERE REGEXP_LIKE(CITY,'[aeiou]$');","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"CamelCase","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the camelcase function below.\nint camelcase(string s) {\n    int count =1;\n    for(auto i:s)\n        if(i!=tolower(i)) count++;\n    return count;\n\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    int result = camelcase(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Super Reduced String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the superReducedString function below.\nstring superReducedString(string s) {\n    int pos=0;bool b=false;\n    if(s==\"\") return \"Empty String\";\n    cout \u003c\u003c s \u003c\u003c endl;\n    for(int i=1;i\u003cs.size();i++,pos++)\n    {\n        if(s[i]==s[pos])\n        {\n            s.erase(pos,2);\n            b=!b;\n        }\n    }\n    if(!b) return s;\n    return superReducedString(s);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = superReducedString(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":0.461538461538,"language":"cpp"},{"contest":"Master","challenge":"Super Reduced String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the superReducedString function below.\nstring superReducedString(string s) {\n    int pos=0;char b=0;\n    if(s==\"\") return \"Empty String\";\n    cout \u003c\u003c s \u003c\u003c endl;\n    for(int i=1;i\u003cs.size();i++,pos++)\n    {\n        if(s[i]==s[pos])\n        {\n            s.erase(pos,2);\n            b++;\n        }\n    }\n    if(!b) return s;\n    return superReducedString(s);\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string s;\n    getline(cin, s);\n\n    string result = superReducedString(s);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Functions","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the calculate function below.\nint calculate(int x) {\n    return x%11;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int x;\n    cin \u003e\u003e x;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = calculate(x);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Functions II","code":"/*\n * Complete the function below.\n */\nint function(int x) {\n    return x*x;\n\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Bijective Functions","code":"#include \u003ccmath\u003e\n#include \u003cmap\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    map\u003cint,int\u003e m;bool b=true;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        m[a]++;\n    }\n    for(map\u003cint,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        if(i-\u003esecond\u003e1){\n            b=false;\n            break;\n        }\n    if(b)\n        cout \u003c\u003c \"YES\";\n    else \n        cout \u003c\u003c \"NO\";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Function Inverses","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;v.push_back(a);\n    }\n    for(auto i:v)\n        cout \u003c\u003c v[i-1] \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Security Function Inverses","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    for(auto i:v)\n        cout \u003c\u003c v[i-1] \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Security Function Inverses","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    for(int i=0;i\u003cv.size();i++)\n        cout \u003c\u003c v[v[i]-1] \u003c\u003c endl;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Security Function Inverses","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    vector\u003cint\u003e r(n);\n    for(int i=0;i\u003cv.size();i++)\n        r[v[i]-1]=i+1;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Security Function Inverses","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    vector\u003cint\u003e r(n);\n    for(int i=0;i\u003cv.size();i++)\n        r[v[i]-1]=i+1;\n    for(auto i:r) cout \u003c\u003c i \u003c\u003c \"\\n\" ;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Permutations","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    vector\u003cint\u003e r(n);\n    for(auto i:v)\n        cout \u003c\u003c v[v[i]-1]+1\u003c\u003c \"\\n\" ;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Security Permutations","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    vector\u003cint\u003e r(n);\n    for(auto i:v)\n        cout \u003c\u003c v[i-1]\u003c\u003c \"\\n\" ;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Security Involution","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003en;vector\u003cint\u003e v(n);int i=0;\n    while(i\u003cn)\n    {\n        cin \u003e\u003e v[i];i++;\n    }\n    i=0;\n    for(auto j=0;j\u003cv.size();j++)\n    {\n        if(j+1==v[v[j]-1]) i++;\n    }\n    if(i==n) cout \u003c\u003c \"YES\";\n    else cout \u003c\u003c \"NO\";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 13: Abstract Classes","code":"\nclass MyBook : public Book{\n    protected:\n        int price;\n    public:\n        MyBook(string t,string a,int p):Book(t,a)\n        {\n            this-\u003eprice=p;\n        }\n        void display()\n        {\n            cout \u003c\u003c \"Title: \" \u003c\u003c this-\u003etitle \u003c\u003c endl;\n            cout \u003c\u003c \"Author: \" \u003c\u003c this-\u003eauthor \u003c\u003c endl;\n            cout \u003c\u003c \"Price: \" \u003c\u003c this-\u003eprice;\n        }\n\n};\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and the Valid String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the isValid function below.\nstring isValid(string s) {\n    map\u003cchar,int\u003e m;\n    for(auto i:s) m[i]++;\n    int temp=m[s[0]];bool b=true;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        if(i-\u003esecond==temp+1 \u0026\u0026 b) b=false;\n        else if(i-\u003esecond!=temp) return \"NO\\n\";\n    return \"YES\";\n}\n\nint main()\n{\n    string s; \n    cin \u003e\u003e s;\n    cout \u003c\u003c isValid(s);\n}\n","score":0.764705882353,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and the Valid String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the isValid function below.\nstring isValid(string s) {\n    map\u003cchar,int\u003e m;\n    for(auto i:s) m[i]++;\n    int temp=m[s[0]];bool b=true;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        if((i-\u003esecond==temp+1 ||i-\u003esecond==1)  \u0026\u0026 b) b=false;\n        else if(i-\u003esecond!=temp) return \"NO\\n\";\n    return \"YES\";\n}\n\nint main()\n{\n    string s; \n    cin \u003e\u003e s;\n    cout \u003c\u003c isValid(s);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nchar* s;\nint n;\nmap\u003cpair\u003cint,int\u003e,int\u003e m;\nint big_Pal(int a,int b)\n{\n\n    pair\u003cint,int\u003e p=make_pair(a%n,b%n);\n    if(m[p]) return m[p]; \n    else\n    {\n        if(a%n==b%n)\n        {\n            m[p]=1;\n            return m[p];\n        }\n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%n]!=s[(b-i)%n])\n            {\n                m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n                return m[p];\n            }     \n        }\n        m[p]=b-a+1;\n        return m[p];\n    }\n}\nint main()\n{\n    scanf(\"%d\",\u0026n);s=(char*)malloc((n+1)*sizeof(char));\n    scanf(\"%s\",s);\n    int i=0;\n    while(i\u003cn)\n    {\n        int count=big_Pal(i,n-1+i);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n","score":0.236220472441,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Revising Aggregations - The Count Function","code":"select count(POPULATION) from CITY where POPULATION \u003e 100000;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Revising Aggregations - The Sum Function","code":"select sum(POPULATION) from CITY where DISTRICT='California';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Revising Aggregations - Averages","code":"select avg(POPULATION) from CITY where DISTRICT ='California';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Average Population","code":"select round(avg(POPULATION)) from CITY ;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Japan Population","code":"select sum(POPULATION) from CITY where COUNTRYCODE='JPN';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Population Density Difference","code":"select max(POPULATION)-min(POPULATION) from CITY;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r=((r%1000000000)*(i%1000000000))%1000000000;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r=((r%1000000000)*(i%1000000000))%1000000000;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result%1000000000 \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Revising the Select Query I","code":"select * from CITY where COUNTRYCODE='USA' and POPULATION \u003e100000;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result%1000000000 \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Weather Observation Station 8","code":"select distinct(CITY) from STATION where regexp_like(CITY,'^[AOIUE].*[aoiue]$');","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 9","code":"select distinct(CITY) from STATION where regexp_like(CITY,'^[^AOIUE]');","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 10","code":"select distinct(CITY) from STATION where regexp_like(CITY,'[^aoiue]$');","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 11","code":"select distinct(CITY) from STATION where regexp_like(CITY,'^[^AOIUE]|[^aoiue]$') ;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 12","code":"select distinct(CITY) from STATION where regexp_like(CITY,'^[^AOIUE].*[^aoiue]$') ;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Employee Names","code":"select name from Employee order by name asc;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Employee Salaries","code":"select name from employee where salary \u003e 2000 and months \u003c10 order by employee_id;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;map\u003cchar,int\u003e m;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        int result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(int i=n;i\u003e0;i--)\n        r*=i;\n    return r%1000000007;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        long result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(long i=n;i\u003e0;i--)\n        r*=i;\n    return r%1000000007;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        long result = count(count_p)*delta(count_imp);\n        cout \u003c\u003c result \u003c\u003c endl;\n    }\n}\n","score":0.06,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(long i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;long div=1;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            div*=count((int)i-\u003esecond/2);\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        long result = count(count_p)*delta(count_imp)/div;\n        cout \u003c\u003c result%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.39,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(long i=n;i\u003e0;i--)\n        r*=i;\n    return r;\n}\nlong delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;long count_p=0;long count_imp=0;long div=0;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            div*=count((int)i-\u003esecond/2);\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        long result = count(count_p)*delta(count_imp)/div;\n        cout \u003c\u003c result%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Palindromes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong count(int n)\n{\n    if(n==0) return 1;\n    long r=1;\n    for(long i=n;i\u003e0;i--)\n        r=(r*i%1000000007)%1000000007;\n    return r;\n}\nint delta(int n)\n{\n    if(n==0)\n        return 1;\n    else \n        return n;\n}\nint main()\n{\n    string s;cin \u003e\u003e s;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        map\u003cchar,int\u003e m;int count_p=0;int count_imp=0;long div=1;\n        int a,b;cin \u003e\u003e a \u003e\u003e b;\n        for(int i=a-1;i\u003cb;i++)\n            m[s[i]]++;\n        for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        {\n            count_p+=(int)i-\u003esecond/2;\n            div*=count((int)i-\u003esecond/2);\n            if(i-\u003esecond%2!=0)count_imp++;\n        }    \n        long result = count(count_p)*delta(count_imp)/div;\n        cout \u003c\u003c result%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.36,"language":"cpp"},{"contest":"Master","challenge":"Super Reduced String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the superReducedString function below.\nstring SRS(string s) {\n    int pos=0;char b=0;\n    if(s==\"\") return \"Empty String\";\n    for(int i=1;i\u003cs.size();i++,pos++)\n    {\n        if(s[i]==s[pos])\n        {\n            s.erase(pos,2);\n            b++;\n        }\n    }\n    if(!b) return s;\n    return SRS(s);\n}\n\nint main()\n{\n    string s;\n    getline(cin, s);\n    cout \u003c\u003c SRS(s) \u003c\u003c \"\\n\";\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Super Reduced String","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the superReducedString function below.\nstring SRS(string s) {\n    int pos=0;char b=0;\n    if(s==\"\") return \"Empty String\";\n    for(int i=1;i\u003cs.size();i++,pos++)\n    {\n        if(s[i]==s[pos])\n        {\n            s.erase(pos,2);\n            b++;\n        }\n    }\n    if(!b) return s;\n    return SRS(s);\n}\n\nint main()\n{\n    string s;\n    getline(cin, s);\n    cout \u003c\u003c SRS(s) \u003c\u003c \"\\n\";\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Boxes through a Tunnel","code":"\n\nstruct box\n{\n\tint height;\n    int width;\n    int length;\n};\n\ntypedef struct box box;\n\nint get_volume(box b) {\n\treturn b.length*b.height*b.width;\n}\n\nint is_lower_than_max_height(box b) {\n\treturn (b.height\u003c41);\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Conditional Statements in C","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstddef.h\u003e\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n\nchar* readline();\n\n\n\nint main()\n{\n    int n;scanf(\"%d\",\u0026n);\n    char *strings[] = {\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\n                                \"six\",\"seven\",\"eight\",\"nine\"};\n    if(n\u003c=9)\n        printf(\"%s\",strings[n]);\n    else\n        printf(\"Greater than 9\");\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"For Loop in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\n\n\nint main() \n{\n    int a, b;\n    scanf(\"%d\\n%d\", \u0026a, \u0026b);\n  \tchar *strings[] = {\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    for(;a\u003c=b;a++)\n        if(a\u003c=9) printf(\"%s\",strings[a]);\n        else\n            if(a%2) printf(\"odd\\n\");\n            else printf(\"even\\n\");\n    return 0;\n}\n\n","score":0.0,"language":"c"},{"contest":"Master","challenge":"For Loop in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\n\n\nint main() \n{\n    int a, b;\n    scanf(\"%d\\n%d\", \u0026a, \u0026b);\n  \tchar *strings[] = {\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    for(;a\u003c=b;a++)\n        if(a\u003c=9) printf(\"%s\\n\",strings[a]);\n        else\n            if(a%2) printf(\"odd\\n\");\n            else printf(\"even\\n\");\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Bitwise Operators","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n#define max(a,b) ((a)\u003e(b))?(a):(b)\n#define min(a,b) ((a)\u003c(b))?(a):(b)\n//Complete the following function.\nint main() {\n    int n, k;int m_a=0;int m_o=0;int m_x=0;\n    scanf(\"%d %d\", \u0026n, \u0026k);\n    for(int i=0;i\u003c=n;i++)\n        for(int j=i+1;j\u003c=n;j++)\n        {\n            int a=i\u0026j;int o=i|j;int x=i^j;\n            if(a\u003c4) m_a=max(m_a,a);\n            if(o\u003c4) m_o=max(m_o,o);\n            if(x\u003c4) m_x=max(m_x,x);\n        }\n    printf(\"%d\\n%d\\n%d\\n\",m_a,m_o,m_x);\n    return 0;\n}\n","score":0.153846153846,"language":"c"},{"contest":"Master","challenge":"Bitwise Operators","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n#define max(a,b) ((a)\u003e(b))?(a):(b)\n#define min(a,b) ((a)\u003c(b))?(a):(b)\n//Complete the following function.\nint main() {\n    int n, k;int m_a=0;int m_o=0;int m_x=0;\n    scanf(\"%d %d\", \u0026n, \u0026k);\n    for(int i=0;i\u003c=n;i++)\n        for(int j=i+1;j\u003c=n;j++)\n        {\n            int a=i\u0026j;int o=i|j;int x=i^j;\n            if(a\u003ck) m_a=max(m_a,a);\n            if(o\u003ck) m_o=max(m_o,o);\n            if(x\u003ck) m_x=max(m_x,x);\n        }\n    printf(\"%d\\n%d\\n%d\\n\",m_a,m_o,m_x);\n    return 0;\n}\n","score":0.692307692308,"language":"c"},{"contest":"Master","challenge":"Bitwise Operators","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n#define max(a,b) ((a)\u003e(b))?(a):(b)\n#define min(a,b) ((a)\u003c(b))?(a):(b)\n//Complete the following function.\nint main() {\n    int n, k;int m_a=0;int m_o=0;int m_x=0;\n    scanf(\"%d %d\", \u0026n, \u0026k);\n    for(int i=1;i\u003cn;i++)\n        for(int j=i+1;j\u003c=n;j++)\n        {\n            int a=i\u0026j;int o=i|j;int x=i^j;\n            if(a\u003ck) m_a=max(m_a,a);\n            if(o\u003ck) m_o=max(m_o,o);\n            if(x\u003ck) m_x=max(m_x,x);\n        }\n    printf(\"%d\\n%d\\n%d\\n\",m_a,m_o,m_x);\n    return 0;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Calculate the Nth term","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n//Complete the following function.\n\nint f(int n, int a, int b, int c) {\n  if(n==1) return a;\n  if(n==2) return b;\n  if(n==3) return c;\n  return f(n-1,a,b,c)+f(n-2,a,b,c)+f(n-3,a,b,c);\n}\n\nint main() {\n    int n, a, b, c;\n  \n    scanf(\"%d %d %d %d\", \u0026n, \u0026a, \u0026b, \u0026c);\n    int ans = f(n, a, b, c);\n \n    printf(\"%d\", ans); \n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Higher Than 75 Marks","code":"select Name from STUDENTS where Marks \u003e75 order by substr(Name,length(name)-2,3),Id asc;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Top Earners","code":"select max(salary*months), count(*) from employee where salary*months=(select max(salary*months) from employee);","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 2","code":"select round(sum(LAT_N),2),round(sum(LONG_W),2) from STATION;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 13","code":"select round(sum(LAT_N),4) from STATION where LAT_N between 38.7880 and 137.2345;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 14","code":"select round(max(LAT_N),4) from STATION where LAT_N\u003c137.2345;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 15","code":"select round(max(LONG_W),4) from STATION where LAT_N=(select max(LAT_N)from STATION where LAT_N \u003c137.2345);","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 16","code":"select round(min(LAT_N),4) from STATION where LAT_N\u003e38.7880;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Lonely Integer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the lonelyinteger function below.\nint lonelyinteger(vector\u003cint\u003e a) {\n    map\u003cint,int\u003e m;\n    for(auto i:a) m[i]++;\n    for(map\u003cint,int\u003e::iterator i=m.begin();i!=m.end();i++)\n        if(i-\u003esecond==1) return i-\u003efirst;\n    return 0;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string a_temp_temp;\n    getline(cin, a_temp_temp);\n\n    vector\u003cstring\u003e a_temp = split_string(a_temp_temp);\n\n    vector\u003cint\u003e a(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int a_item = stoi(a_temp[i]);\n\n        a[i] = a_item;\n    }\n\n    int result = lonelyinteger(a);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maximizing XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the maximizingXor function below.\nint maximizingXor(int l, int r) {\n    int m=0;\n    for(int i=l;i\u003cr;i++)\n        for(int j=i+1;j\u003c=r;j++)\n            m=max(m,i^j);\n    return m;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int l;\n    cin \u003e\u003e l;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int r;\n    cin \u003e\u003e r;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    int result = maximizingXor(l, r);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Counter game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the counterGame function below.\nint pow_2(long n)\n{\n    int p=log2(n);\n    return (int)p;\n}\nvoid counterGame(long n) {\n    bool p=0;\n    while(n!=1)\n    {\n        if(n==(1l\u003c\u003cpow_2(n))) {n/=2;p=!p;}\n        else\n        {\n            n-=(1l\u003c\u003cpow_2(n)); p=!p;\n        }\n    }\n    if(!p) cout \u003c\u003c \"Richard\\n\";\n    else cout \u003c\u003c \"Louise\\n\";\n}\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        counterGame(n);\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Counter game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the counterGame function below.\nint pow_2(long n)\n{\n    int p=log2(n);\n    return (int)p;\n}\nvoid counterGame(long n) {\n    bool p=0;\n    while(1)\n    {\n        if(n==(1l\u003c\u003cpow_2(n))) {n/=2;p=!p;}\n        else\n        {\n            n-=(1l\u003c\u003cpow_2(n)); p=!p;\n        }\n        if(n==1)\n        {\n            if(!p) cout \u003c\u003c \"Richard\\n\";\n            else cout \u003c\u003c \"Louise\\n\";\n            break;\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        counterGame(n);\n    }\n    return 0;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Counter game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint pow_2(long n)\n{\n    int p=log2(n);\n    return (int)p;\n}\nvoid counterGame(long n) {\n    bool p=0;\n    while(1)\n    {\n        if(n==(1l\u003c\u003cpow_2(n))) {n/=2;p=!p;}\n        else\n        {\n            n-=(1l\u003c\u003cpow_2(n)); p=!p;\n        }\n        if(n==1)\n        {\n            if(!p) cout \u003c\u003c \"Richard\\n\";\n            else cout \u003c\u003c \"Louise\\n\";\n            break;\n        }\n    }\n}\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        long n;cin \u003e\u003e n;\n        counterGame(n);\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Introduction to Nim Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003et;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n        while(n--){int a;cin \u003e\u003e a;v.push_back(a);}\n        int r=v[0];\n        for(int i=1;i\u003cv.size();i++) r^=v[i];\n        if(r!=0) cout \u003c\u003c \"First\\n\";\n        else cout \u003c\u003c \"Second\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Fibonacci Finding (easy)","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong f(int a,int b,int n)\n{\n    if(n==0) return a;\n    else if(n==1) return b;\n    else return f(a,b,n-1)+f(a,b,n-2);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int a,b,n;cin \u003e\u003e a \u003e\u003e b \u003e\u003e n;\n        cout \u003c\u003c f(a,b,n) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Fibonacci Finding (easy)","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong f(int a,int b,int n)\n{\n    if(n==0) return a;\n    else if(n==1) return b;\n    else return f(a,b,n-1)+f(a,b,n-2);\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int a,b,n;cin \u003e\u003e a \u003e\u003e b \u003e\u003e n;\n        cout \u003c\u003c f(a,b,n)%1000000007 \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"XOR Strings","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nstring strings_xor(string s, string t) {\n\n    string res = \"\";\n    for(int i = 0; i \u003c s.size(); i++) {\n        if(s[i] == t[i])\n            res += '0';\n        else\n            res += '1';\n    }\n\n    return res;\n}\n\nint main() {\n    string s, t;\n    cin \u003e\u003e s \u003e\u003e t;\n    cout \u003c\u003c strings_xor(s, t) \u003c\u003c endl;\n    return 0;\n}\n\n\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Constructing a Number","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;int j=0;\n        while(n--)\n        {\n            string s;\n            cin \u003e\u003e s;\n            for(auto i:s)\n                if(i!=' ')\n                {\n                    j+=i-'0';\n                } \n        }\n        if((j%3)==0) cout \u003c\u003c \"Yes\\n\";\n        else cout \u003c\u003c \"No\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Closest Number","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        long a,b,c;cin \u003e\u003e a \u003e\u003e b\u003e\u003e c;\n        long temp=round(pow(a,b)/c)*c;\n        cout \u003c\u003c temp \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s,n;cin \u003e\u003e s \u003e\u003e n;vector\u003cint\u003e v;\n    while(s--){int i;cin\u003e\u003ei;v.push_back(i);}\n    int g=v[0];\n    for(auto i:v) g=__gcd(g,i);\n    for(int i=n;i\u003e=0;i--)\n        if(i%g==0) {cout \u003c\u003c i;break;}\n}\n","score":0.473684210526,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long s,n;cin \u003e\u003e s \u003e\u003e n;vector\u003clong\u003e v;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    for(long i=n;i\u003e=0;i--)\n        if(i%g==0) {cout \u003c\u003c i;break;}\n}\n","score":0.421052631579,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long s,n;cin \u003e\u003e s \u003e\u003e n;vector\u003clong\u003e v;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    cout \u003c\u003c (int)(n/g)*g;\n}\n","score":0.526315789474,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long s,n;cin \u003e\u003e s \u003e\u003e n;vector\u003clong\u003e v;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.631578947368,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long s,n;cin \u003e\u003e s \u003e\u003e n;vector\u003clong\u003e v;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.842105263158,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool is_p(long n)\n{\n    if(n%2==0) return 0;\n    for(int i=3;i\u003csqrt(n);i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        cout \u003c\u003c n \u003c\u003c endl;\n        if(is_p(g) \u0026\u0026 n\u003cg)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool is_p(long n)\n{\n    if(n%2==0) return 0;\n    for(int i=3;i\u003csqrt(n);i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        if(is_p(g) \u0026\u0026 n\u003cg)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.789473684211,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        cout \u003c\u003c n \u003c\u003c endl;\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.842105263158,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i++)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.578947368421,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i++)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1 || g\u003cn)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n    //cout \u003c\u003c (long)(n/g)*g;\n}\n","score":0.578947368421,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    /*while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }*/\n    for(int i=1;;i++)\n    {\n        if(g*i\u003en) \n        {\n            cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.526315789474,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    /*while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }*/\n    if(g\u003cn)\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en) \n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    else\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    /*while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }*/\n    if(g\u003c=n)\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en) \n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    else\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n}\n","score":0.789473684211,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    /*while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }*/\n    if(g\u003c=n)\n    {\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n    {\n        if(__gcd(g,n)==1)\n            cout \u003c\u003c 0 \u003c\u003c endl;\n        else\n        {\n            cout \u003c\u003c __gcd(g,n) \u003c\u003c endl;\n        }\n    }\n}\n","score":0.526315789474,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;//n++;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    /*bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(!p \u0026\u0026 n\u003cg) \n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }*/\n    if(g\u003c=n)\n    {\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n    {\n        if(__gcd(g,n)==1)\n            cout \u003c\u003c 0 \u003c\u003c endl;\n        else\n        {\n            long r = __gcd(g,n);\n            cout \u003c\u003c (long)(n/r)*r;\n        }\n    }\n}\n","score":0.684210526316,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003e=n)\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003cn)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003e=n+1)\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003cn)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.894736842105,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003e=n)\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003cn)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003c=n)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    n++;\n    if(g\u003en)\n    {\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003c=n)\n        {\n            n--;\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.842105263158,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        \n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003c=n)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.789473684211,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        n+=2;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003c=n)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        for(long i=n;i\u003e=0;i--)\n        {\n            if(__gcd(g,i)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 i\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }   \n        }\n    }\n    else if(g\u003c=n)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.684210526316,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        for(long i=n+1;i\u003e=0;i--)\n        {\n            if(__gcd(g,i)!=1)\n            {\n                cout \u003c\u003c i \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 i\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }   \n        }\n    }\n    else if(g\u003c=n)\n        {\n            for(int i=1;;i++)\n            {\n                if(g*i\u003en)\n                {\n                    cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                    break;\n                }\n\n            }\n        }\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n            if(!p \u0026\u0026 n\u003cg) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else if(g\u003cn)\n    {\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        n++;long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c j \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j++;\n        }\n    }\n    else if(g\u003cn)\n    {\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.473684210526,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        n++;long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c j \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n        if(g==1) break;\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c j \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c j \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c j \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        /*for(int i=1;;i++)\n        {\n            if(g*i\u003en)\n            {\n                cout \u003c\u003c g*(i-1) \u003c\u003c endl;\n                break;\n            }\n        }*/\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            if(__gcd(g,j)!=1)\n            {\n                cout \u003c\u003c __gcd(g,j) \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.526315789474,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    cout \u003c\u003c g \u003c\u003c endl;\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        \n        long r=__gcd(g,n);\n        if(r!=1) \n            cout \u003c\u003c (long)(n/r)*r;\n        else\n            cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long j=n;\n        while(j\u003e=0)\n        {\n            long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        \n        long r=__gcd(g,n);\n        if(r!=1) \n            cout \u003c\u003c (long)(n/r)*r;\n        else\n            cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long long n;cin \u003e\u003e s \u003e\u003e n;\n    long long i;cin \u003e\u003ei;long long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long long j=n;\n        while(j\u003e=0)\n        {\n            long long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;cin \u003e\u003e s;long long n;cin \u003e\u003e n;\n    long long i;cin \u003e\u003ei;long long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long long j=n;\n        while(j\u003e=0)\n        {\n            long long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            if(!p) \n            {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;cin \u003e\u003e s;long long n;cin \u003e\u003e n;\n    long long i;cin \u003e\u003ei;long long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        long long j=n;\n        while(j\u003e=0)\n        {\n            long long r=__gcd(g,j);\n            if(r!=1)\n            {\n                cout \u003c\u003c (long long)(n/r)*r \u003c\u003c endl;\n                break;\n            }\n            j--;\n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.842105263158,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;cin \u003e\u003e s;long long n;cin \u003e\u003e n;\n    long long i;cin \u003e\u003ei;long long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003e=n)\n    {\n        long long j=n;\n        if(!p) \n        {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n        }\n        else \n            while(j\u003e=0)\n            {\n                long long r=__gcd(g,j);\n                if(r!=1)\n                {\n                    cout \u003c\u003c (long long)(n/r)*r \u003c\u003c endl;\n                    break;\n                }\n                j--;\n            }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;cin \u003e\u003e s;long long n;cin \u003e\u003e n;\n    long long i;cin \u003e\u003ei;long long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003e=n)\n    {\n        long long j=n+1;\n        if(!p) \n        {\n                cout \u003c\u003c 0 \u003c\u003c endl;\n        }\n        else \n            while(j\u003e=0)\n            {\n                long long r=__gcd(g,j);\n                if(r!=1)\n                {\n                    cout \u003c\u003c (long long)(n/r)*r \u003c\u003c endl;\n                    break;\n                }\n                j--;\n            }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.842105263158,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003en)\n    {\n        if(!p) cout \u003c\u003c 0  \u003c\u003c endl;\n        else\n        {\n            for(long i=1;i\u003csqrt(g);i++)\n                if(g%i==0 \u0026\u0026 g/i\u003c=n) cout \u003c\u003c g/i \u003c\u003c endl; \n        }\n    }\n    else if(g\u003cn)\n    {\n        cout \u003c\u003c (long)(n/g)*g;\n    }\n    else\n        cout \u003c\u003c g \u003c\u003c endl;\n}\n","score":0.526315789474,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(g\u003en \u0026\u0026 !p)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.736842105263,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    n++;\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(g\u003en \u0026\u0026 !p)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003cn)\n    {\n        cout \u003c\u003c (long)(n/g)*n\u003c\u003c endl;\n    }\n    else\n    {n++;\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(g\u003en \u0026\u0026 !p)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }}\n}\n","score":0.578947368421,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(g\u003cn)\n    {\n        cout \u003c\u003c (long)(n/g)*g\u003c\u003c endl;\n    }\n    else\n    {n++;\n    while(n--)\n    {\n        if(__gcd(g,n)!=1)\n        {\n            cout \u003c\u003c n \u003c\u003c endl;\n            break;\n        }\n        if(g\u003en \u0026\u0026 !p)\n        {\n            cout \u003c\u003c 0 \u003c\u003c endl;\n            break;\n        }\n    }}\n}\n","score":0.947368421053,"language":"cpp"},{"contest":"Master","challenge":"Easy GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int s;long n;cin \u003e\u003e s \u003e\u003e n;\n    long i;cin \u003e\u003ei;long g=i;s--;\n    while(s--){\n        cin\u003e\u003ei;\n        g=__gcd(g,i);\n    }\n    bool p=false;\n    {\n        if(g%2==0) \n            p=true;\n        else\n        {\n            for(int i=3;i\u003c=sqrt(g);i+=2)\n                if(g%i==0) {p=true;break;}\n        }\n    }\n    if(!p)\n    {\n        if(n\u003cg) cout \u003c\u003c 0 \u003c\u003c endl;\n        else\n            cout \u003c\u003c (long)(n/g)*g \u003c\u003c endl;\n    }\n    else\n    {\n        n++;\n        while(n--)\n        {\n            if(__gcd(g,n)!=1)\n            {\n                cout \u003c\u003c n \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Special Multiple","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        int p;p=(int)log10(n);\n        for(int i=1\u003c\u003cp;;i++)\n        {\n            bitset\u003c32\u003e b(i);\n            long temp=0;\n            for(int j=0,k=0;k\u003cb.count();j++)\n            {\n                if(b[j])\n                {\n                    temp+=9*pow(10,j);k++;\n                }\n            }\n            if(temp%n==0) \n            {\n                cout \u003c\u003c temp \u003c\u003c endl;\n                break;\n            }\n        }\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Connecting Towns","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a) int a;cin \u003e\u003ea\nusing namespace std;\n\nint main()\n{\n    read(t);\n    while(t--)\n    {\n        read(n);int r=1;n--;\n        while(n--)\n        {\n            int i;cin \u003e\u003e i;\n            r*=i;\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Connecting Towns","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a) int a;cin \u003e\u003ea\nusing namespace std;\n\nint main()\n{\n    read(t);\n    while(t--)\n    {\n        read(n);long r=1;n--;\n        while(n--)\n        {\n            long i;cin \u003e\u003e i;\n            r=((r%1234567)*(i%1234567))%1234567;\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a,b) int a,b;cin \u003e\u003e a \u003e\u003e b\nusing namespace std;\n\nint main()\n{\n    read(n,m);\n    if(m==1) m++;\n    if(n==1) n++;\n    cout \u003c\u003c (n-1)*(m-1);\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a,b) int a,b;cin \u003e\u003e a \u003e\u003e b\nusing namespace std;\n\nint main()\n{\n    read(n,m);\n    if(m==1 \u0026\u0026 n!=1) m++;\n    if(n==1 \u0026\u0026 m!=1) n++;\n    cout \u003c\u003c (n-1)*(m-1);\n}\n","score":0.166666666667,"language":"cpp"},{"contest":"Master","challenge":"Average Population of Each Continent","code":"select country.continent,floor(avg(city.population)) from country,city where country.code=city.countrycode group by country.continent;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a,b) int a,b;cin \u003e\u003e a \u003e\u003e b\nusing namespace std;\n\nint main()\n{\n    read(n,m);\n    cout \u003c\u003c n*m-1;\n}\n","score":0.333333333333,"language":"cpp"},{"contest":"Master","challenge":"Cutting Paper Squares","code":"#include \u003cbits/stdc++.h\u003e\n#define read(a,b) int a,b;cin \u003e\u003e a \u003e\u003e b\nusing namespace std;\n\nint main()\n{\n    read(n,m);\n    cout \u003c\u003c (long) n*m-1;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\n\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;std::cout \u003c\u003c (long)(1ll\u003c\u003cn)-1 \u003c\u003c \"\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\n\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;std::cout \u003c\u003c (long)((1ll\u003c\u003cn)-1)%100000 \u003c\u003c \"\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\nconst long l=10000;\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;long long r=1;\n        while(n\u003e1)\n        {\n            if(n%2==0)\n            {   \n                r=(r*((long)pow(2,n/2)%l)*((long)pow(2,n/2)%l))%l;\n                n/=2;\n            }\n            else\n            {\n                r=(r*((long)pow(2,n-1)%l)*2)%l;\n                n--;\n            }\n        }\n        std::cout \u003c\u003c r-1 \u003c\u003c std::endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"t=int(input())\nfor _ in range(t):\n    n=int(input())\n    print((2**n)%(10**5))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Diwali Lights","code":"t=int(input())\nfor _ in range(t):\n    n=int(input())\n    print((2**n)%(10**5)-1)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\nconst long l=10000;\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;long long m=2;long long r=1;\n        while(n){\n            if(n%2)\n            {\n                r=(r*m)%l;\n                n--;\n            }\n            m=(m*m)%l;\n            n\u003e\u003e=1;\n        }\n        std::cout \u003c\u003c r-1 \u003c\u003c std::endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\nconst long l=10000;\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;long long m=2;long long r=1;\n        while(n){\n            if(n%2)\n            {\n                r=(r*m)%l;\n            }\n            m=(m*m)%l;\n            n/=2;\n        }\n        std::cout \u003c\u003c r-1 \u003c\u003c std::endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Diwali Lights","code":"#include \u003cbits/stdc++.h\u003e\nconst long l=100000;\nint main()\n{\n    int t;std::cin \u003e\u003et;\n    while(t--)\n    {\n        int n;std::cin \u003e\u003e n;long long m=2;long long r=1;\n        while(n){\n            if(n%2)\n            {\n                r=(r*m)%l;\n            }\n            m=(m*m)%l;\n            n/=2;\n        }\n        std::cout \u003c\u003c r-1 \u003c\u003c std::endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_p(long n)\n{\n    if((n%2==0 \u0026\u0026 n!=2) || n==1 || n==0) return 0;\n    for(long i=3;i\u003c=sqrt(n);i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nbool is_p_2(long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(int i=0;i\u003cc;i++)\n    {\n        if(!is_p(s[i]-'0'))\n            return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003em;int count=0;\n    for(;n\u003c=m;n++)\n    {\n        if(is_p(n) \u0026\u0026 is_p_2(n))\n        {\n            count++;\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_p(long n)\n{\n    if((n%2==0 \u0026\u0026 n!=2) || n==1 || n==0) return 0;\n    for(long i=3;i\u003c=sqrt(n);i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nbool is_p_2(long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(int i=0;i\u003cc;i++)\n    {\n        if(!is_p(s[i]-'0'))\n            return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003em;int count=0;\n    for(;n\u003c=m;n++)\n    {\n        if(is_p(n))\n        {\n            if(is_p_2(n))\n                count++;\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003clong long\u003e v = {2};\nbool is_p(long long n)\n{\n    for(auto i:v)\n        if(n==i) return 1;\n    return 0;\n}\nbool is_p_2(long long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(int i=0;i\u003cc;i++)\n    {\n        if(!is_p(s[i]-'0'))\n            return 0;\n    }\n    return 1;\n}\nvoid gener(long long n) {\n    for(long long i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(long long)l==0) continue;\n        for(long long j=0;b \u0026\u0026 v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n        }\n    }\n}\n\nint main()\n{\n    long long n,m;cin \u003e\u003e n \u003e\u003em;int count=0;gener(m);\n    for(;n\u003c=m;n++)\n    {\n        if(is_p(n))\n        {\n            if(is_p_2(n))\n            {\n                count++;\n            }\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.02,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n    bool b=true;int t=arr[0];int M=0;int m=0;\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i]\u003e=arr[M]) M=i;\n        if(arr[i]\u003carr[m]) m=i;\n        if(arr[i]!=t) b=false;\n    }\n    if(b) return 0; \n    else\n    {\n        if(arr[M]-arr[m]\u003e=5) arr[M]-=5;\n        else if(arr[M]-arr[m]\u003c5 \u0026\u0026 arr[M]-arr[m]\u003e=2) arr[M]-=2;\n        else if(arr[M]-arr[m]\u003c2) arr[M]-=1;\n        return 1+equal(arr);\n    }\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n        while(n--)\n        {\n            int m;cin \u003e\u003e m;v.push_back(m);\n        }\n        cout \u003c\u003c equal(v) \u003c\u003cendl;\n    }\n}\n","score":0.15,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;int c=0;\n    for(int i=0;i\u003c=n;i++)\n        if((n+i)==(n^i)) c++;\n    cout \u003c\u003c c;\n}\n","score":0.636363636364,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;int c=0;\n    while(n\u003e0){\n        if(!(n\u00261)){\n            c++;\n        }\n        n\u003e\u003e=1;\n    }\n    cout \u003c\u003c (1\u003c\u003cc);\n}\n","score":0.636363636364,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;int c=0;\n    while(n){\n        if(!(n\u00261)){\n            c++;\n        }\n        n\u003e\u003e=1;\n    }\n    cout \u003c\u003c (1\u003c\u003cc);\n}\n","score":0.636363636364,"language":"cpp"},{"contest":"Master","challenge":"Sum vs XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long n;cin \u003e\u003e n;int c=0;\n    while(n){\n        if(!(n\u00261)){\n            c++;\n        }\n        n\u003e\u003e=1;\n    }\n    cout \u003c\u003c (1l\u003c\u003cc);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n    bool b=true;int t=arr[0];int M=0;int m=0;\n    for(int i=0;i\u003carr.size();i++) {\n        if(arr[i]\u003e=arr[M]) M=i;\n        if(arr[i]\u003carr[m]) m=i;\n        if(arr[i]!=t) b=false;\n    }\n    if(b) return 0; \n    else\n    {\n        /*for(auto i:arr) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;*/\n        if(arr[M]-arr[m]\u003e=4) arr[M]-=5;\n        else if(arr[M]-arr[m]\u003c4 \u0026\u0026 arr[M]-arr[m]\u003e=2) arr[M]-=2;\n        else if(arr[M]-arr[m]\u003c2) arr[M]-=1;\n        return 1+equal(arr);\n    }\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n        while(n--)\n        {\n            int m;cin \u003e\u003e m;v.push_back(m);\n        }\n        cout \u003c\u003c equal(v) \u003c\u003cendl;\n    }\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n    sort(arr.begin(),arr.end());\n    bool b=true;int t=arr[0];int c=0;//int M=0;int m=0;int c=0;\n    for(int i=0;i\u003carr.size();i++) {\n        /*if(arr[i]\u003e=arr[M]) {M=i;b=false;}\n        if(arr[i]\u003carr[m]) {m=i;b=false;}*/\n        if(arr[i]==t)c++;\n    }\n    if(c==arr.size()) return 0; \n    else\n    {\n        int M=arr.size()-1;\n        for(auto i:arr) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n        if(c!=arr.size()-1)\n        {    \n            if(arr[M]\u003e=5) \n                arr[M]-=5;\n            else if(arr[M]\u003c5 \u0026\u0026 arr[M]\u003e=2) \n                arr[M]-=2;\n            else if(arr[M]\u003c2) \n                arr[M]-=1;\n            return 1+equal(arr);\n        }\n        else\n        {\n            if(arr[M]-arr[0]\u003e=5) \n                arr[M]-=5;\n            else if(arr[M]-arr[0]\u003c5 \u0026\u0026 arr[M]-arr[0]\u003e=2) \n                arr[M]-=2;\n            else if(arr[M]-arr[0]\u003c2) \n                arr[M]-=1;\n            return 1+equal(arr);\n        }\n    }\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n        while(n--)\n        {\n            int m;cin \u003e\u003e m;v.push_back(m);\n        }\n        cout \u003c\u003c equal(v) \u003c\u003cendl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the equal function below.\nint equal(vector\u003cint\u003e arr) {\n    sort(arr.begin(),arr.end());\n    bool b=true;int t=arr[0];int c=0;//int M=0;int m=0;int c=0;\n    for(int i=0;i\u003carr.size();i++) {\n        /*if(arr[i]\u003e=arr[M]) {M=i;b=false;}\n        if(arr[i]\u003carr[m]) {m=i;b=false;}*/\n        if(arr[i]==t)c++;\n    }\n    if(c==arr.size()) return 0; \n    else\n    {\n        int M=arr.size()-1;\n        /*for(auto i:arr) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;*/\n        if(c!=arr.size()-1)\n        {    \n            if(arr[M]\u003e=5) \n                arr[M]-=5;\n            else if(arr[M]\u003c5 \u0026\u0026 arr[M]\u003e=2) \n                arr[M]-=2;\n            else if(arr[M]\u003c2) \n                arr[M]-=1;\n            return 1+equal(arr);\n        }\n        else\n        {\n            if(arr[M]-arr[0]\u003e=5) \n                arr[M]-=5;\n            else if(arr[M]-arr[0]\u003c5 \u0026\u0026 arr[M]-arr[0]\u003e=2) \n                arr[M]-=2;\n            else if(arr[M]-arr[0]\u003c2) \n                arr[M]-=1;\n            return 1+equal(arr);\n        }\n    }\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n        while(n--)\n        {\n            int m;cin \u003e\u003e m;v.push_back(m);\n        }\n        cout \u003c\u003c equal(v) \u003c\u003cendl;\n    }\n}\n","score":0.15,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;int m=INT_MAX;int r[3];int t=0;\n        while(n--)\n        {\n            int k;cin \u003e\u003e k;v.push_back(k);m=min(m,k);\n        }\n        for(int i=0;i\u003cv.size();i++)\n        {\n            v[i]-=m;\n            r[0]=v[i]/5;r[1]=(v[i]%5)/2;r[2]=(v[i]%5)%2;\n            for(auto i:r) t+=i;\n        }\n        cout \u003c\u003c t \u003c\u003c endl;\n    }\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool check(vector\u003cint\u003e v)\n{\n    int j=v[0];\n    for(auto i:v)if(j!=i) return 0;\n    return 1;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;int m=INT_MAX;int t=0;\n        while(n--)\n        {\n            int k;cin \u003e\u003e k;v.push_back(k);m=min(m,k);\n        }\n        for(int i=m-4;i\u003c=m;i++)\n        {\n            t=0;\n            for(auto j:v)\n            {\n                t+=(j-i)/5+((j-i)%5)/2+((j-i)%5)%2;\n            }\n        }\n        cout \u003c\u003c t \u003c\u003c endl;\n    }\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Equal","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nbool check(vector\u003cint\u003e v)\n{\n    int j=v[0];\n    for(auto i:v)if(j!=i) return 0;\n    return 1;\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;int m=INT_MAX;int t=0;int r=INT_MAX;\n        while(n--)\n        {\n            int k;cin \u003e\u003e k;v.push_back(k);m=min(m,k);\n        }\n        for(int i=m-4;i\u003c=m;i++)\n        {\n            t=0;\n            for(auto j:v)\n            {\n                t+=(int)(j-i)/5+(int)((j-i)%5)/2+(int)((j-i)%5)%2;\n            }\n            r=min(r,t);\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Cost","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the cost function below.\nint cost(vector\u003cint\u003e B) {\n    vector\u003cint\u003e A,A2;int t,T;t=T=0;\n    for(int i=0;i\u003cB.size();i++){\n        if(i%2){ A.push_back(B[i]);A2.push_back(1);}\n        else {A.push_back(1);A2.push_back(B[i]);}\n    }\n    for(int i=1;i\u003cA.size();i++)\n    {\n        t+=abs(A[i]-A[i-1]);T+=abs(A2[i]-A2[i-1]);\n    }\n    return max(T,t);\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        vector\u003cint\u003e v;\n        while(n--)\n        {\n            int a;cin \u003e\u003e a;v.push_back(a);\n        }\n        cout \u003c\u003c cost(v) \u003c\u003c endl;\n    }\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":"Recursive Digit Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the superDigit function below.\nint superDigit(string n) {\n    if(n.size()==1)\n        return n[0]-'0';\n    else\n    {\n        int t=0;\n        for(auto i:n)\n        {\n            t+=i-'0';\n        }\n        return superDigit(to_string(t));\n    }\n}\n\nint main()\n{\n    string n;int k; cin \u003e\u003e n \u003e\u003e k;string s;\n    while(k--) s+=n;\n    cout \u003c\u003c superDigit(s) ;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Recursive Digit Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the superDigit function below.\nint superDigit(string n,int k) {\n    if(n.size()==1)\n        return n[0]-'0';\n    else\n    {\n        int t=0;\n        for(auto i:n)\n        {\n            t+=i-'0';\n        }\n        return superDigit(to_string(t*k),1);\n    }\n}\n\nint main()\n{\n    string n;int k; cin \u003e\u003e n \u003e\u003e k;\n    cout \u003c\u003c superDigit(n,k) ;\n}\n","score":0.777777777778,"language":"cpp"},{"contest":"Master","challenge":"Recursive Digit Sum","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the superDigit function below.\nint superDigit(string n,int k) {\n    if(n.size()==1)\n        return n[0]-'0';\n    else\n    {\n        long long t=0;\n        for(auto i:n)\n        {\n            t+=i-'0';\n        }\n        return superDigit(to_string(t*k),1);\n    }\n}\n\nint main()\n{\n    string n;int k; cin \u003e\u003e n \u003e\u003e k;\n    cout \u003c\u003c superDigit(n,k) ;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Cost","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the cost function below.\nint cost(vector\u003cint\u003e B) {\n    vector\u003cint\u003e A,A2;int t,T;t=T=0;A={1};A2={B[0]};\n    for(int i=1;i\u003cB.size();i++){\n        if(abs(A[i-1]-B[i])\u003eabs(A[i-1]-1)) A.push_back(B[i]);\n        else A.push_back(1);\n        if(abs(A2[i-1]-B[i])\u003eabs(A2[i-1]-1)) A2.push_back(B[i]);\n        else A2.push_back(1);\n    }\n    for(int i=1;i\u003cA.size();i++)\n    {\n        t+=abs(A[i]-A[i-1]);T+=abs(A2[i]-A2[i-1]);\n    }\n    return max(T,t);\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        vector\u003cint\u003e v;\n        while(n--)\n        {\n            int a;cin \u003e\u003e a;v.push_back(a);\n        }\n        cout \u003c\u003c cost(v) \u003c\u003c endl;\n    }\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":"Big Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_big(string \u0026s1,string \u0026s2) \n{ \n    return s1.size() \u003c s2.size(); \n} \nvoid bigSort(vector\u003cstring\u003e v) {\n    sort(v.begin(),v.end(),is_big);int c=v[0].size();int t=0;\n    for(int i=1;i\u003cv.size();i++)\n    {\n        if(v[i].size()==c)\n        {\n            t++;\n        }\n        if(v[i].size()!=c)\n        {\n            sort(v.begin()+i-1-t,v.begin()+i-1);\n            t=0;c=v[i].size();\n        }\n    }\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n\nint main()\n{\n    int n;vector\u003cstring\u003e v;\n    cin \u003e\u003e n;while(n--)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    bigSort(v);\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Big Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_big(string \u0026s1,string \u0026s2) \n{ \n    return s1.size() \u003c s2.size(); \n} \nvoid bigSort(vector\u003cstring\u003e v) {\n    sort(v.begin(),v.end(),is_big);int c=v[0].size();int t=0;\n    for(int i=1;i\u003cv.size();i++)\n    {\n        if(v[i].size()==c)\n        {\n            t++;\n        }\n        if(v[i].size()!=c)\n        {\n            sort(v.begin()+i-t-1,v.begin()+i);\n            t=0;c=v[i].size();\n        }\n    }\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n\nint main()\n{\n    int n;vector\u003cstring\u003e v;\n    cin \u003e\u003e n;while(n--)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    bigSort(v);\n}\n","score":0.84,"language":"cpp"},{"contest":"Master","challenge":"Big Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_big(string \u0026s1,string \u0026s2) \n{ \n    return s1.size() \u003c s2.size(); \n} \nvoid bigSort(vector\u003cstring\u003e v) {\n    sort(v.begin(),v.end(),is_big);int c=v[0].size();int t=1;\n    for(int i=1;i\u003cv.size();i++)\n    {\n        if(v[i].size()==c)\n        {\n            t++;\n        }\n        if(v[i].size()!=c)\n        {\n            sort(v.begin()+i-t-1,v.begin()+i);\n            t=0;c=v[i].size();\n        }\n    }\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n\nint main()\n{\n    int n;vector\u003cstring\u003e v;\n    cin \u003e\u003e n;while(n--)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    bigSort(v);\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Big Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nbool is_big(string \u0026s1,string \u0026s2) \n{ \n    return s1.size() \u003c s2.size(); \n} \nvoid bigSort(vector\u003cstring\u003e v) {\n    sort(v.begin(),v.end(),is_big);v.push_back(v[v.size()-1]+\"9\");\n    int c=v[0].size();int t=0;\n    for(int i=1;i\u003cv.size();i++)\n    {\n        if(v[i].size()==c)\n        {\n            t++;\n        }\n        if(v[i].size()!=c)\n        {\n            sort(v.begin()+i-t-1,v.begin()+i);\n            t=0;c=v[i].size();\n        }\n    }\n    v.pop_back();\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n\nint main()\n{\n    int n;vector\u003cstring\u003e v;\n    cin \u003e\u003e n;while(n--)\n    {\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    bigSort(v);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,bool\u003e primus;\nvector\u003clong long\u003e v = {2};\nbool is_p(long long n)\n{\n    return primus[n];\n}\nbool is_p_2(long long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(int i=0;i\u003cc;i++)\n    {\n        if(!is_p(s[i]-'0'))\n            return 0;\n    }\n    return 1;\n}\nvoid gener(long long n) {\n    for(long long i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(long long)l==0) continue;\n        for(long long j=0;b \u0026\u0026 v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            primus[i]=true;\n        }\n    }\n}\n\nint main()\n{\n    long long n,m;cin \u003e\u003e n \u003e\u003em;int count=0;gener(m);primus[2]=true;\n    for(;n\u003c=m;n++)\n    {\n        if(is_p(n))\n        {\n            if(is_p_2(n))\n            {\n                count++;\n            }\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,bool\u003e primus;\nvector\u003clong long\u003e v = {2};\nbool is_p(long long n)\n{\n    return primus[n];\n}\nbool is_p_2(long long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(int i=0;i\u003cc;i++)\n    {\n        if(!is_p(s[i]-'0'))\n            return 0;\n    }\n    return 1;\n}\nvoid gener(long long n) {\n    for(long long i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(long long)l==0) continue;\n        for(long long j=0;b \u0026\u0026 v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            primus[i]=true;\n        }\n    }\n}\n\nint main()\n{\n    long long n,m;cin \u003e\u003e n \u003e\u003em;int count=0;gener(m);primus[2]=true;\n    for(;n\u003c=m;n++)\n    {\n        if(n%2==0 \u0026\u0026 n!=2) continue;\n        if(is_p(n))\n        {\n            if(is_p_2(n))\n            {\n                count++;\n            }\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,bool\u003e primus;\nvector\u003clong long\u003e v = {2};\nbool is_p(long long n)\n{\n    string s = to_string(n);\n    int c=s.size() ;\n    for(auto i:s)\n    {\n        if(!primus[i-'0'])\n            return 0;\n    }\n    return 1;\n}\nvoid gener(long long n) {\n    for(long long i=3;i\u003cn;i+=2)\n    {\n        bool b=true;\n        long double l =sqrt(i);\n        if(l-(long long)l==0) continue;\n        for(long long j=0;b \u0026\u0026 v[j]\u003cl;j++)\n        {\n            if(i%v[j]==0) {\n                b=false;\n            }\n        }\n        if(b)\n        {\n            v.push_back(i);\n            primus[i]=b;\n        }\n    }\n}\n\nint main()\n{\n    long long n,m;cin \u003e\u003e n \u003e\u003em;int count=0;gener(m);primus[2]=true;\n    for(auto i:v)\n    {\n        if(i\u003cn) continue;\n        if(is_p(i))\n        {\n            count++;\n        }\n    }\n    cout \u003c\u003c count ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((int)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (int p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(int i=m;i\u003c=n;i++)\n            {\n                if((i%p==0 \u0026\u0026 i!=p) || i==1 || i==0) prime2[i-m]=false;\n            }\n        } \n    } \n    int count=0;\n    for(auto i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=m;i\u003c=n;i++)\n            {\n                if((i%p==0 \u0026\u0026 i!=p) || i==1 || i==0) prime2[i-m]=false;\n            }\n        } \n    } \n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.12,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    if(2\u003em)count++;if(m%2==0) m++;\n    for(long long i=m;i\u003c=n;i+=2)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.05,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    if(2\u003e=m)count++;if(m%2==0) m++;\n    for(long long i=m;i\u003c=n;i+=2)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.05,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    if(2\u003e=m)count++;if(m%2==0) m++;\n    for(long long i=m;i\u003c=n;i+=2)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.05,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i+=2)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.05,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=0;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (long long i=p*p; i\u003c=(int)sqrt(n); i += p) \n                prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=false;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p]) \n        { \n            for (long long i=p*p; i\u003c=(long long)sqrt(n); i += p) \n                if(prime[i]) prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                if(prime2[i*p-m])prime2[i*p-m]=false;\n            }\n            cout \u003c\u003c \"lol\\n\";\n        } \n    }\n    cout \u003c\u003c \"lol2\\n\";\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=false;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p]) \n        { \n            for (long long i=p*p; i\u003c=(long long)sqrt(n); i += p) \n                if(prime[i]) prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                if(prime2[i*p-m])prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e prime((long long)sqrt(n)+1,true); vector\u003cbool\u003e prime2(n-m+1,true); \n    prime[0]=prime[1]=false;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (prime[p]) \n        { \n            for (long long i=p*p; i\u003c=(long long)sqrt(n); i += p) \n                if(prime[i]) prime[i] = false; \n            for(long long i=(long long)(m+p)/p+1;i*p\u003c=n;i++)\n            {\n                if(prime2[i*p-m])prime2[i*p-m]=false;\n            }\n        } \n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(prime2[i-m])\n        {\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!prime[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"from math import floor,sqrt\nread=input().split()\nn = int(read[1])\nm = int(read[0])\nprimes=[]\nsieve_1=floor(sqrt(n))+1\nsieve_2=n-m+1\nprecalc=[True]*(sieve_1)\nprecalc[0]=precalc[1]=False\nactual=[True]*(sieve_2)\nfor i in range(2,sieve_1):\n    if precalc[i]:\n        primes.append(i)\n        for j in range(2*i,sieve_1,i):\n            precalc[j]=False\n\nfor p in primes:\n    l=(m//p)*p\n    if l\u003c=m:\n        l+=p\n    for i in range(l,n+1,p):\n        if(actual[i-m] and i!=p):\n            actual[i-m]=False\ncount=0\nfor i in range(m,n+1):\n    if actual[i-m]:\n        s=str(i)\n        for c in s:\n            if not precalc[int(c)]:\n                count-=1\n                break\n        count+=1\nprint(count)\n","score":0.1,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"from math import floor,sqrt\nread=input().split()\nupper = int(read[1])\nlower = int(read[0])\nprimes=[]\nsieve_1=floor(sqrt(upper))+1\nsieve_i=floor(sqrt(upper-lower+1))+1\nprecalc=[True]*(sieve_1)\nprecalc[0]=precalc[1]=False\nfor i in range(2,sieve_1):\n    if precalc[i]:\n        primes.append(i)\n        for j in range(2*i,sieve_1,i):\n            precalc[j]=False\ncount=0\nfor k  in range(0,sieve_1-1):\n    actual=[True]*(sieve_1)\n    m=lower+k*sieve_1\n    n=m+sieve_1-1\n    for p in primes:\n        l=(m//p)*p\n        if l\u003c=m:\n            l+=p\n        for i in range(l,n,p):\n            if(actual[i-m] and i!=p):\n                actual[i-m]=False\n    for i in range(m,n):\n        if actual[i-m]:\n            s=str(i)\n            for c in s:\n                if not precalc[int(c)]:\n                    count-=1\n                    break\n            count+=1\nprint(count)\n","score":0.01,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"from math import floor,sqrt\nread=input().split()\nupper = int(read[1])\nlower = int(read[0])\nprimes=[]\nsieve_1=floor(sqrt(upper))+1\nprecalc=[True]*(sieve_1)\nprecalc[0]=precalc[1]=False\nfor i in range(2,sieve_1):\n    if precalc[i]:\n        primes.append(i)\n        for j in range(2*i,sieve_1,i):\n            precalc[j]=False\ncount=0\nfor k  in range(0,sieve_1-1):\n    actual=[True]*(sieve_1)\n    m=lower+k*sieve_1\n    n=m+sieve_1-1\n    for p in primes:\n        l=(m//p)*p\n        if l\u003c=m:\n            l+=p\n        for i in range(l,n,p):\n            if(actual[i-m] and i!=p):\n                actual[i-m]=False\n    for i in range(m,n):\n        if actual[i-m]:\n            s=str(i)\n            for c in s:\n                if not precalc[int(c)]:\n                    count-=1\n                    break\n            count+=1\nprint(count)\n","score":0.01,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"from math import floor,sqrt\nread=input().split()\nupper = int(read[1])\nlower = int(read[0])\nprimes=[]\nsieve_1=floor(sqrt(upper))+1\nprecalc=[True]*(sieve_1)\nprecalc[0]=precalc[1]=False\nfor i in range(2,sieve_1):\n    if precalc[i]:\n        primes.append(i)\n        for j in range(2*i,sieve_1,i):\n            precalc[j]=False\ncount=0\nfor k  in range(0,sieve_1-1):\n    #print(str(k)+\"-----------------------------------------------------\")\n    actual=[True]*(sieve_1+1)\n    m=lower+k*sieve_1\n    if(m\u003e=upper):\n        break\n    n=m+sieve_1\n    if(n\u003e=upper):\n        n=upper+1\n    for p in primes:\n        l=(m//p)*p\n        if l\u003c=m:\n            l+=p\n        for i in range(l,n,p):\n            if(actual[i-m] and i!=p):\n                actual[i-m]=False\n    for i in range(m,n):\n        if actual[i-m]:\n            s=str(i)\n            for c in s:\n                if not precalc[int(c)]:\n                    count-=1\n                    break\n            count+=1\nprint(count)\n","score":0.02,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdint\u003e\nusing namespace std;\nvoid gen(long long n,long long m)\n{\n    vector\u003cbool\u003e temp((long)sqrt(n)+1,true); vector\u003clong long\u003e prime;\n    vector\u003cbool\u003e temp2(n-m+1,true);\n    temp[0]=temp[1]=false;\n    for (long long p=2; p*p\u003c=n; p++) \n    { \n        if (temp[p]) \n        {\n            prime.push_back(p);\n            for (long long i=p*p; i\u003c=(long)sqrt(n); i += p) \n                if(temp[i]) temp[i] = false; \n        } \n    } \n    for(auto p:prime)\n    {\n        int l=floor(m/p)*p;\n        if(l\u003cm) l+=p;\n        for (int j = l; j \u003c= n; j += p)\n            temp2[j - m] = false;\n    }\n    int count=0;\n    for(long long i=m;i\u003c=n;i++)\n    {\n        if(temp2[i-m])\n        {\n            \n            cout \u003c\u003c i \u003c\u003c endl;\n            string s=to_string(i);\n            bool b=true;\n            for(auto j:s)\n            {\n                if(!temp[j-'0']){b=false;break;}\n            }\n            if(b) {count++;}\n        }\n    }\n    cout \u003c\u003c count \u003c\u003c endl;\n}\nint main()\n{\n    long long m,n;cin \u003e\u003e m \u003e\u003en;\n    gen(n,m);\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long m,n;\nvector\u003cint\u003e p={2,3,5,7};\nbool is_p(long long n)\n{\n    long long t=(long long)sqrt(n);\n    if(n%2==0 \u0026\u0026 n!=2) return 0;\n    for(long long i=3;i\u003c=t;i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nvoid makeCombiUtil(vector\u003cvector\u003clong long\u003e \u003e\u0026 ans, \n    vector\u003clong long\u003e\u0026 tmp, long long n, long long left, long long k) \n{ \n    if (k == 0) { \n        ans.push_back(tmp); \n        return; \n    }\n    for (long long i = left; i \u003c= n; ++i) \n    { \n        tmp.push_back(p[i]); \n        makeCombiUtil(ans, tmp, n, i + 1, k - 1);\n        tmp.pop_back(); \n    } \n} \nvector\u003cvector\u003clong long\u003e \u003e makeCombi(long long n, long long k) \n{ \n    vector\u003cvector\u003clong long\u003e \u003e ans; \n    vector\u003clong long\u003e tmp; \n    makeCombiUtil(ans, tmp, n-1, 0, k); \n    return ans; \n} \nvoid permute(vector\u003clong long\u003e a, int l,int\u0026 r)  \n{  \n    if (l == a.size()-1)  \n    {\n        long long t=0;\n        for (int j = 0; j \u003c a.size(); j++) { \n            t+=a[j]*pow(10,a.size()-1-j);\n        } \n        if(t\u003e=m \u0026\u0026 t\u003c=n \u0026\u0026 is_p(t))\n        {\n            //cout \u003c\u003c t \u003c\u003c \"\\n\";\n            r++;\n        }\n    }\n    else\n    {  \n        for (int i = l; i \u003c= a.size()-1; i++)  \n        {  \n            swap(a[l], a[i]);  \n            permute(a, l+1,r);  \n            swap(a[l], a[i]);  \n        }  \n    }  \n}  \nint main()\n{\n    cin \u003e\u003e m \u003e\u003en;int count=0;\n    for(int i=1;i\u003c=3;i++)\n    {\n        vector\u003cvector\u003clong long\u003e \u003e ans = makeCombi(4,i);\n        long long t=0;\n        for (int i = 0; i \u003c ans.size(); i++) { \n            permute(ans[i], 0,count);\n            //if(t\u003e=m \u0026\u0026 t\u003c=n \u0026\u0026 is_p(t)) {count++;cout \u003c\u003c t \u003c\u003c endl;}\n        } \n    }\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool is_p(long long n)\n{\n    long long t=(long long)sqrt(n);\n    if(n%2==0 \u0026\u0026 n!=2) return 0;\n    for(long long i=3;i\u003c=t;i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nvoid printAllKLengthRec(string prefix, \n                                    int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string newPrefix; \n        newPrefix = prefix + p[i]; \n        printAllKLengthRec(newPrefix, n, k - 1,r); \n    } \n  \n} \nvoid permute(vector\u003clong long\u003e a, long long l,int\u0026 r)  \n{  \n    if (l == a.size()-1)  \n    {\n        long long t=0;\n        for (int j = 0; j \u003c a.size(); j++) { \n            t+=a[j]*pow(10,a.size()-1-j);\n        } \n        cout \u003c\u003c t \u003c\u003c endl;\n        if(t\u003e=l_l \u0026\u0026 t\u003c=r_l \u0026\u0026 is_p(t))\n        {\n            r++;\n        }\n    }\n    else\n    {  \n        for (long long i = l; i \u003c= a.size()-1; i++)  \n        {  \n            swap(a[l], a[i]);  \n            permute(a, l+1,r);  \n            swap(a[l], a[i]);  \n        }  \n    }  \n}  \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    for(int i=0;i\u003c=(int)log10(r_l)+1;i++)\n        printAllKLengthRec(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.28,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nvector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\nvector\u003cint\u003e primes;\nvoid gener()\n{\n    seg[0]=seg[1]=false;\n    for(int i=2;i\u003c=(int)sqrt(r_l);i++)\n    {\n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(int j=i*i;j\u003c=(int)sqrt(r_l);j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix, int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003e=r_l) return;\n        return;\n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string pp; \n        pp = prefix + p[i]; \n        f(pp, n, k - 1,r); \n    } \n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    string pref=\"\";\n    for(int i=0;i\u003clog10(l_l)-1;i++)\n        pref+=\"2\";\n    for(int i=0;i\u003c=(int)log10(r_l)+1;i++)\n        f(pref,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\nvector\u003clong long\u003e primes;\n/*void gener()\n{\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003c=(int)sqrt(r_l);i++)\n    {\n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003c=(int)sqrt(r_l);j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}*/\nbool is_p(long long n)\n{\n    long long t=(long long)sqrt(n);\n    if(n%2==0 \u0026\u0026 n!=2) return 0;\n    for(long long i=3;i\u003c=t;i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nvoid f(string prefix, int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return;\n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string pp; \n        pp = prefix + p[i]; \n        if(!exit_rec)\n            f(pp, n, k - 1,r); \n    } \n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;//gener();\n    string pref=\"\";\n    for(int i=0;i\u003clog10(l_l)-1;i++)\n        pref+=\"2\";\n    for(int i=0;i\u003c=(int)log10(r_l)+1;i++)\n        f(pref,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nbool exit_rec=0;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool is_p(long long n)\n{\n    long long t=(long long)sqrt(n);\n    if(n%2==0 \u0026\u0026 n!=2) return 0;\n    for(long long i=3;i\u003c=t;i+=2)\n        if(n%i==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.28,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003cbool\u003e seg((long long)sqrt(r_l)+1,true);\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    {\n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n            //t+=(prefix[i]-'0')*pow(10,prefix.size()-1-i);\n            if(i==0 \u0026\u0026 prefix[prefix.size()-1-i]-'0'==2 \u0026\u0026 prefix.size()\u003e1)\n                break;\n            t+=(prefix[prefix.size()-1-i]-'0')*pow(10,i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        if(n%primes[i]==0) return 0;\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(prefix[prefix.size()-1]-'0'==2 \u0026\u0026 prefix.size()\u003e1)\n            return;\n        long long t=0;\n        for(int i=0;i\u003cprefix.size();i++)\n        {\n\n            t+=(prefix[prefix.size()-1-i]-'0')*pow(10,i);\n        }\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) r++;\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"\",4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(n%primes[i]==0) return 0;\n        }\n    return 1;\n}\nvoid f(string prefix,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(prefix[prefix.size()-1]-'0'==2 \u0026\u0026 prefix.size()\u003e2)\n            return;\n        long long t=stoll(prefix);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) \n        {\n            r++;\n            //cout \u003c\u003c t \u003c\u003c endl;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        string nP; \n        nP = prefix + p[i]; \n        if(!exit_rec)\n            f(nP, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(n%primes[i]==0) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        /*if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;*/\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) \n        {\n            r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = (( (k==1) \u0026\u0026 (l_l\u003e2) )?1:0); i \u003c n; i++) \n    { \n        string ns; \n        ns = s + p[i]; \n        if(!exit_rec)\n            f(ns, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(n%primes[i]==0) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        cout \u003c\u003c s \u003c\u003c endl;\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) \n        {\n            r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(n%primes[i]==0) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l \u0026\u0026 is_p(t)) \n        {\n            r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(n%primes[i]==0) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    vector\u003clong long\u003e SDP((int)sqrt(r_l)+1,true);;\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            SDP[i]=i;\n            for(long long j=0;j\u003cprimes.size() \u0026\u0026 primes[j]\u003c=SDP[i] \u0026\u0026 primes[j]*i\u003cseg.size();j++)\n            {\n                if(seg[j]) seg[j]=false;\n                SDP[i*primes[j]] = primes[j] ; \n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.22,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    vector\u003clong long\u003e SDP((int)sqrt(r_l)+1,true);;\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            SDP[i]=i;\n            for(long long j=0;j\u003cprimes.size() \u0026\u0026 primes[j]*i\u003cseg.size() \u0026\u0026 primes[j]\u003c=SDP[i];j++)\n            {\n                if(seg[j]) seg[j]=false;\n                SDP[i*primes[j]] = primes[j] ; \n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.2,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cchar\u003e p={'2','3','5','7'};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nvoid gen2() \n{ \n    int limit=(int)sqrt(r_l)+1;\n    if (limit \u003e 2) \n        primes.push_back(2); \n    if (limit \u003e 3) \n        primes.push_back(3); \n    bool sieve[limit]; \n    for (int i = 0; i \u003c limit; i++) \n        sieve[i] = false; \n    for (int x = 1; x * x \u003c limit; x++) { \n        for (int y = 1; y * y \u003c limit; y++) { \n            int n = (4 * x * x) + (y * y); \n            if (n \u003c= limit \u0026\u0026 (n % 12 == 1 || n % 12 == 5)) \n                sieve[n] ^= true; \n  \n            n = (3 * x * x) + (y * y); \n            if (n \u003c= limit \u0026\u0026 n % 12 == 7) \n                sieve[n] ^= true; \n  \n            n = (3 * x * x) - (y * y); \n            if (x \u003e y \u0026\u0026 n \u003c= limit \u0026\u0026 n % 12 == 11) \n                sieve[n] ^= true; \n        } \n    } \n    for (int r = 5; r * r \u003c limit; r++) { \n        if (sieve[r]) { \n            for (int i = r * r; i \u003c limit; i += r * r) \n                sieve[i] = false; \n        } \n    } \n    for (int a = 5; a \u003c limit; a++) \n        if (sieve[a]) \n            primes.push_back(a); \n} \nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(string s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s[s.size()-1]-'0'==2 \u0026\u0026 s.size()\u003e2)\n            return;\n        long long t=stoll(s);\n        if(t\u003c=r_l \u0026\u0026 t\u003e=l_l) \n        {\n            if(is_p(t)) r++;\n        }\n        if(t\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gen2();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(\"0\",4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s%2==0 \u0026\u0026 s!=2)\n            return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        if(s\u003er_l) exit_rec=true;\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s*10 + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    { \n        if(s%2==0 \u0026\u0026 s!=2)\n            return;  \n        if(s\u003cl_l) return;\n        if(s\u003er_l) exit_rec=true;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        if(!exit_rec)\n            f(s*10 + p[i], n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n/*12419*/\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp"},{"contest":"Master","challenge":"The Great XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        int l=(int)log2(n);\n        int res=(1\u003c\u003cl)-(n-(1\u003c\u003cl))-1;\n        cout \u003c\u003c res \u003c\u003c endl;\n    }\n}\n","score":0.625,"language":"cpp"},{"contest":"Master","challenge":"The Great XOR","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long t;cin \u003e\u003e t;\n    while(t--)\n    {\n        long n;cin \u003e\u003e n;\n        long l=(long)log2(n);\n        long res=(1l\u003c\u003cl)-(n-(1l\u003c\u003cl))-1;\n        cout \u003c\u003c res \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Flipping bits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;\n        bitset\u003c32\u003e b(n);\n        b.flip();\n        cout \u003c\u003c b.to_ullong() \u003c\u003c endl;\n    }\n}\n","score":0.111111111111,"language":"cpp"},{"contest":"Master","challenge":"Flipping bits","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        unsigned int n;cin \u003e\u003e n;\n        bitset\u003c32\u003e b(n);\n        b.flip();\n        cout \u003c\u003c b.to_ullong() \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Missing Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;map\u003cint,int\u003e l1;\n    cin \u003e\u003e n;\n    while(n--){\n        int a;cin \u003e\u003e a;l1[a]++;\n    }\n    cin \u003e\u003e n;\n    while(n--){\n        int b;cin \u003e\u003e b;l1[b]--;\n    }\n    for(map\u003cint,int\u003e::iterator i=l1.begin();i!=l1.end();i++)\n    {\n        if(i-\u003esecond) cout \u003c\u003c i-\u003efirst \u003c\u003c \" \";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Pairs","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003e m;int result=0;\n    map\u003cint,int\u003e l; vector\u003cint\u003e v;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;l[a]++;\n        v.push_back(a);\n    }\n    sort(v.begin(),v.end());\n    for(int i=0;i\u003cv.size();i++)\n    {\n        if(l[v[i]+m]) {\n            result+=l[v[i]+m];\n        }\n    }\n    cout \u003c\u003c result \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Array","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;bool b=false;\n        while(n--)\n        {\n            int a;cin \u003e\u003e a;v.push_back(a);\n        }\n        for(int i=0;i\u003cv.size();i++)\n        {\n            int l,r;l=r=0;\n            for(int j=i+1;j\u003cv.size();j++)\n            {\n                r+=v[j];\n            }\n            for(int j=i-1;j\u003e=0;j--)\n            {\n                l+=v[j];\n            }\n            if(l==r){\n                b=true;break;\n            }\n        }\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else\n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Array","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;bool b=false;\n        while(n--)\n        {\n            int a;cin \u003e\u003e a;v.push_back(a);\n        }\n        for(int i=0;i\u003cv.size();i++)\n        {\n            int l,r;l=r=0;\n            for(int j=i-1;j\u003e=0;j--)\n            {\n                l+=v[j];\n            }\n            for(int j=i+1;j\u003cv.size();j++)\n            {\n                r+=v[j];\n                if(l\u003cr) break;\n            }\n            \n            if(l==r){\n                b=true;break;\n            }\n        }\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else\n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.555555555556,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Array","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003cint\u003e v;bool b=false;\n        int total=0;int count=0;\n        while(n--)\n        {\n            int a;cin \u003e\u003e a;v.push_back(a);total+=a;\n        }\n        total-=v[0];\n        for(int i=1;i\u003cv.size();i++)\n        {\n            if(total==count){\n                b=true;break;\n            }\n            total-=v[i];count+=v[i-1];\n\n        }\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else\n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.777777777778,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Array","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;vector\u003clong\u003e v;bool b=false;\n        long total=0;long count=0;\n        while(n--)\n        {\n            long a;cin \u003e\u003e a;v.push_back(a);total+=a;\n        }\n        if(v.size()==1){\n            cout \u003c\u003c \"YES\\n\";continue;\n        }\n        total-=v[0];\n        for(int i=1;i\u003cv.size();i++)\n        {\n            if(total==count){\n                b=true;break;\n            }\n            total-=v[i];count+=v[i-1];\n\n        }\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else\n            cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Mark and Toys","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,p;cin \u003e\u003e n \u003e\u003e p;int r=0;int count=0;\n    vector\u003cint\u003e c;\n    while(n--)\n    {\n        int p_c;cin \u003e\u003e p_c;\n        c.push_back(p_c);\n    }\n    sort(c.begin(),c.end());\n    for(int i=0;i\u003cc.size();i++)\n    {\n        count+=c[i];\n        if(count\u003c=p) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":0.133333333333,"language":"cpp"},{"contest":"Master","challenge":"Mark and Toys","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long long n,p;cin \u003e\u003e n \u003e\u003e p;long long r=0;long long count=0;\n    vector\u003cint\u003e c;\n    while(n--)\n    {\n        long long p_c;cin \u003e\u003e p_c;\n        c.push_back(p_c);\n    }\n    sort(c.begin(),c.end());\n    for(long long i=0;i\u003cc.size();i++)\n    {\n        count+=c[i];\n        if(count\u003c=p) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Intro to Tutorial Challenges","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int v;cin \u003e\u003e v;\n    int n;cin \u003e\u003e n;\n    for(int i=0;i\u003cn;i++)\n    {\n        int a;cin \u003e\u003e a;\n        if(a==v){\n            cout \u003c\u003c i;break;\n        }\n    }\n\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Element","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main() {\n    int n;cin \u003e\u003e n;\n    stack\u003cint\u003e s;\n    while(n--)\n    {\n        int read;cin \u003e\u003e read;\n        switch(read){\n            case 1: \n                    long long inpt;\n                    cin \u003e\u003e inpt;\n                    s.push(inpt);\n                    break;\n            case 2:\n                    s.pop();\n                    break;\n            case 3:\n                    long long m=0;\n                    stack\u003cint\u003e t;\n                    long long temp;\n                    while(!s.empty())\n                    {\n                        temp=s.top();\n                        m=max(m,temp);\n                        s.pop();\n                        t.push(temp);\n                    }\n                    while(!t.empty())\n                    {\n                        temp=t.top();\n                        t.pop();\n                        s.push(temp);\n                    }\n                    cout \u003c\u003c m \u003c\u003c endl;\n                    break;\n        }\n    } \n    return 0;\n}\n","score":0.352941176471,"language":"cpp"},{"contest":"Master","challenge":"Maximum Element","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main() {\n    int n;cin \u003e\u003e n;\n    vector\u003clong long\u003e v;\n    while(n--)\n    {\n        int read;cin \u003e\u003e read;\n        switch(read){\n            case 1: \n                    long long inpt;\n                    cin \u003e\u003e inpt;\n                    v.push_back(inpt);\n                    break;\n            case 2:\n                    v.pop_back();\n                    break;\n            case 3:\n                    long long m=0;\n                    for(auto i:v)\n                        m=max(m,i);\n                    cout \u003c\u003c m \u003c\u003c endl;\n                    break;\n        }\n    } \n    return 0;\n}\n","score":0.352941176471,"language":"cpp"},{"contest":"Master","challenge":"Maximum Element","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main() {\n    int n;cin \u003e\u003e n;\n    vector\u003clong long\u003e v;\n    int last_req;int last_max;\n    while(n--)\n    {\n        int read;cin \u003e\u003e read;\n        switch(read){\n            case 1: \n                    long long inpt;\n                    cin \u003e\u003e inpt;\n                    v.push_back(inpt);\n                    last_req=1;\n                    break;\n            case 2:\n                    v.pop_back();\n                    last_req=2;\n                    break;\n            case 3:\n                    if(last_req==read)\n                    {\n                        cout \u003c\u003c last_max \u003c\u003c endl;\n                        break;\n                    }\n                    long long m=0;\n                    for(auto i:v) m=max(m,i);\n                    cout \u003c\u003c m \u003c\u003c endl;\n                    last_max=m;\n                    last_req=3;\n                    break;\n        }\n    } \n    return 0;\n}\n","score":0.529411764706,"language":"cpp"},{"contest":"Master","challenge":"Maximum Element","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main() {\n    int n;cin \u003e\u003e n;\n    vector\u003clong long\u003e v;\n    int last_req;int last_max;\n    while(n--)\n    {\n        int read;cin \u003e\u003e read;\n        switch(read){\n            case 1: \n                    long long inpt;\n                    cin \u003e\u003e inpt;\n                    v.push_back(inpt);\n                    last_req=1;\n                    break;\n            case 2:\n                    v.pop_back();\n                    last_req=2;\n                    break;\n            case 3:\n                    if(last_req==read)\n                    {\n                        cout \u003c\u003c last_max \u003c\u003c endl;\n                        break;\n                    }\n                    long long m=0;\n                    for(auto i:v) m=max(m,i);\n                    cout \u003c\u003c m \u003c\u003c endl;\n                    last_max=m;\n                    last_req=3;\n                    break;\n        }\n    } \n    return 0;\n}\n","score":0.941176470588,"language":"cpp14"},{"contest":"Master","challenge":"Maximum Element","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main() {\n    std::stack\u003cint\u003e st;\n    int n;cin \u003e\u003e n;\n    for (int i = 0; i \u003c n; i++) {\n        int read;cin \u003e\u003e read;\n        switch (read)\n        {\n        case 1:\n            int m;cin\u003e\u003em;\n            if (st.empty()) {\n                st.push(m);\n            }\n            else {\n                st.push(max(m, st.top()));\n            }\n            break;\n\n        case 2:\n            if (!st.empty()) {\n                st.pop();\n            }\n            break;\n\n        case 3:\n            cout \u003c\u003c  st.top() \u003c\u003c \"\\n\";\n            break;\n\n        default:\n            break;\n        }\n    }\n\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        cout \u003c\u003c s \u003c\u003c endl;\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nbool exit_rec=0;\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp14"},{"contest":"Master","challenge":"Arrays - DS","code":"#include \u003cstdio.h\u003e\nint main()\n{\n    int n;scanf(\"%d\",\u0026n);\n    int* v=malloc(n*sizeof(int));\n    int i;\n    while(i\u003cn)\n    {\n        scanf(\"%d\",v+i);i++;\n    }\n    for(i=n-1;i\u003e=0;i--) printf(\"%d \",v[i]);\n\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Students Marks Sum","code":"\n\n//Complete the following function.\n\nint marks_summation(int* marks, int number_of_students, char gender) {\n    int total=0;\n    int c=(gender=='b'?0:1);\n    for(int i=c;i\u003cnumber_of_students;i+=2)\n        total+=marks[i];\n    return total;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Array Manipulation","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        string[] line=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(line[0]);\n        int q=Convert.ToInt32(line[1]);\n        int[] arr=new int[n+2];\n        while(q\u003e0){\n            line=Console.ReadLine().Split(' ');\n            int a=Convert.ToInt32(line[0]);\n            int b=Convert.ToInt32(line[1]);\n            int v=Convert.ToInt32(line[2]);\n            arr[a]+=v;arr[b+1]-=v;\n            q--;\n        }\n        int m=0;\n        for(int i=0;i\u003c=n+1;i++)\n        {\n            m=Math.Max(m,m+arr[i]);\n        }\n        Console.WriteLine(m);\n    }\n}\n","score":0.066666666667,"language":"csharp"},{"contest":"Master","challenge":"Array Manipulation","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        string[] line=Console.ReadLine().Split(' ');\n        int n=Convert.ToInt32(line[0]);\n        int q=Convert.ToInt32(line[1]);\n        int[] arr=new int[n+2];\n        while(q\u003e0){\n            line=Console.ReadLine().Split(' ');\n            int a=Convert.ToInt32(line[0]);\n            int b=Convert.ToInt32(line[1]);\n            int v=Convert.ToInt32(line[2]);\n            arr[a]+=v;arr[b+1]-=v;\n            q--;\n        }\n        int m=0;int calc=0;\n        for(int i=0;i\u003c=n+1;i++)\n        {\n            calc+=arr[i];\n            m=Math.Max(m,calc);\n        }\n        Console.WriteLine(m);\n    }\n}\n","score":0.2,"language":"csharp"},{"contest":"Master","challenge":"Array Manipulation","code":"using System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Globalization;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Text;\nusing System;\n\nclass Solution {\n\n    static void Main(string[] args) {\n        string[] line=Console.ReadLine().Split(' ');\n        long n=Convert.ToInt64(line[0]);\n        long q=Convert.ToInt64(line[1]);\n        long[] arr=new long[n+2];\n        while(q\u003e0){\n            line=Console.ReadLine().Split(' ');\n            long a=Convert.ToInt64(line[0]);\n            long b=Convert.ToInt64(line[1]);\n            long v=Convert.ToInt64(line[2]);\n            arr[a]+=v;arr[b+1]-=v;\n            q--;\n        }\n        long m=0;long calc=0;\n        for(long i=0;i\u003c=n+1;i++)\n        {\n            calc+=arr[i];\n            m=Math.Max(m,calc);\n        }\n        Console.WriteLine(m);\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Compare two linked lists","code":"\n\n// Complete the compare_lists function below.\n\n/*\n * For your reference:\n *\n * SinglyLinkedListNode {\n *     int data;\n *     SinglyLinkedListNode* next;\n * };\n *\n */\nbool compare_lists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2) {\n    if(head1==NULL \u0026\u0026 head2==NULL) return 1;\n    else if(head1==NULL || head2==NULL) return 0;\n    else if(head1-\u003edata==head2-\u003edata) return compare_lists(head1-\u003enext,head2-\u003enext);\n    else return 0;\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nmap\u003clong long,bool\u003e num_set;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l)+1,true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n            for(map\u003clong long,bool\u003e::iterator pp=num_set.begin();pp!=num_set.end();pp++)\n            {\n                if(pp-\u003esecond \u0026\u0026pp-\u003efirst!=i\u0026\u0026 (pp-\u003efirst)%i==0) pp-\u003esecond=false;\n            }\n        }\n    }\n}\nvoid f(long long s,int n, int k) \n{ \n    if (k == 0) \n    {\n        if((s%2==0 \u0026\u0026 s!=2) || s\u003cl_l) return;\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            num_set[s]=true;\n        }\n        return; \n    } \n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i);\n    gener();\n    for(map\u003clong long,bool\u003e::iterator pp=num_set.begin();pp!=num_set.end();pp++)\n    {\n        if(pp-\u003esecond) count++;\n    }\n    cout \u003c\u003c count;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,3,5,7};\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l),true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    int l=(k==1)?1:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    if(l_l\u003c=2)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp14"},{"contest":"Master","challenge":"Asian Population","code":"select sum(city.population) from city,country where city.countrycode=country.code and country.continent='Asia';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"African Cities","code":"select city.name from city,country where city.countrycode=country.code and country.continent='Africa';","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nvector\u003clong long\u003e primes;\nvoid gener()\n{\n    vector\u003cbool\u003e seg((int)sqrt(r_l),true);\n    seg[0]=seg[1]=false;\n    for(long long i=2;i\u003cseg.size();i++)\n    { \n        if(seg[i])\n        {\n            primes.push_back(i);\n            for(long long j=i*i;j\u003cseg.size();j+=i)\n            {\n                if(seg[j]) seg[j]=false;\n            }\n        }\n    }\n}\nbool is_p(long long n)\n{\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(n);i++)\n        {\n            if(!(n%primes[i])) return 0;\n        }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) r++;\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;gener();\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.335,"language":"cpp14"},{"contest":"Master","challenge":"Running Time of Algorithms","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n// Complete the runningTime function below.\nint runningTime(vector\u003cint\u003e arr) {\n    vector\u003cint\u003e v=arr;int count=0;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i\u003carr.size();i++)\n    {\n        if(arr[i]!=v[i]) count++;\n    }\n    return count;\n}\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = runningTime(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":0.272727272727,"language":"cpp14"},{"contest":"Master","challenge":"Running Time of Algorithms","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\nint runningTime(vector\u003cint\u003e arr)  \n{  \n    int i, key, j,count;count=0;\n    for (i = 1; i \u003c arr.size(); i++) \n    {  \n        key = arr[i];  \n        j = i - 1;  \n        while (j \u003e= 0 \u0026\u0026 arr[j] \u003e key) \n        {  \n            arr[j + 1] = arr[j];  \n            j = j - 1;  \n            count++;\n        }  \n        arr[j + 1] = key;  \n    } \n    return count; \n}  \n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    int n;\n    cin \u003e\u003e n;\n    cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n\n    string arr_temp_temp;\n    getline(cin, arr_temp_temp);\n\n    vector\u003cstring\u003e arr_temp = split_string(arr_temp_temp);\n\n    vector\u003cint\u003e arr(n);\n\n    for (int i = 0; i \u003c n; i++) {\n        int arr_item = stoi(arr_temp[i]);\n\n        arr[i] = arr_item;\n    }\n\n    int result = runningTime(arr);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Insertion Sort - Part 1","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid sort(vector\u003cint\u003e arr)  \n{  \n    int i, key, j;\n    for (i = 1; i \u003c arr.size(); i++) \n    {  \n        key = arr[i];  \n        j = i - 1;  \n        while (j \u003e= 0 \u0026\u0026 arr[j] \u003e key) \n        {  \n            arr[j + 1] = arr[j];  \n            for(auto i:arr) cout \u003c\u003c i \u003c\u003c \" \";\n            cout \u003c\u003c endl;\n            j = j - 1; \n        }  \n        arr[j + 1] = key;  \n    } \n    for(auto i:arr) cout \u003c\u003c i \u003c\u003c \" \";\n    cout \u003c\u003c endl;\n}  \n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n    }\n    sort(v);\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Sherlock and GCD","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;int g;\n        int a;cin \u003e\u003e a;g=a;n--;\n        while(n--)\n        {\n            cin \u003e\u003e a;\n            g=__gcd(g,a);\n        }\n        if(g==1) cout \u003c\u003c \"YES\" \u003c\u003c endl;\n        else cout \u003c\u003c \"NO\" \u003c\u003c endl;\n        \n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Primitive Problem","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\n\nint main()\n{\n    int p;\n    cin \u003e\u003e p;int count=0;bool f=true;\n    for(int i=1;i\u003c=p-1;i++)\n    {\n        map\u003cint,bool\u003e m;bool b=false;\n        for(int j=0;j\u003c=p-2;j++)\n        {\n            m[(int)pow(i,j)%p]=true;\n        }\n        for(int j=1;j\u003cp;j++)\n        {\n            if(!m[j]) b=true;\n        }\n        if(!b){\n            if(f){\n                cout \u003c\u003c i \u003c\u003c \" \";\n                count++;\n                f=false;\n            }\n            else\n                count++;\n        }\n    }\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Reverse Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\n\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        int n,k;cin\u003e\u003en\u003e\u003ek;\n        vector\u003cint\u003e v;\n        for(int i=0;i\u003cn;i++)\n        {\n            v.push_back(i);\n        }\n        for(int i=0;i\u003cn;i++)\n        {\n            reverse(v.begin()+i,v.end());\n        }\n        for(int i=0;i\u003cv.size();i++)\n            if(v[i]==k) cout \u003c\u003c i \u003c\u003cendl;\n    }\n}\n","score":0.272727272727,"language":"cpp14"},{"contest":"Master","challenge":"Reverse Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        int n,k;cin\u003e\u003en\u003e\u003ek;int r;\n        r=(k\u003cn-k)?2*k:2*(n-k);\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Reverse Game","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;\n    cin \u003e\u003e t;\n    while(t--)\n    {\n        int n,k;cin\u003e\u003en\u003e\u003ek;int r;\n        r=(k\u003cn-1-k)?2*k+1:2*(n-k-1);\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Strange Grid Again","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int c,r;cin \u003e\u003e r \u003e\u003e c;\n    if(r%2)\n    {\n        cout \u003c\u003c ((r-1)/2)*10+2*(c-1);\n    }\n    else\n    {\n        cout \u003c\u003c ((r-2)/2)*10+2*(c-1)+1;\n    }\n}\n","score":0.64,"language":"cpp14"},{"contest":"Master","challenge":"Strange Grid Again","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long c,r;cin \u003e\u003e r \u003e\u003e c;\n    if(r%2)\n    {\n        cout \u003c\u003c ((r-1)/2)*10+2*(c-1);\n    }\n    else\n    {\n        cout \u003c\u003c ((r-2)/2)*10+2*(c-1)+1;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Primitive Problem","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong mo_p(long p,long i,long j)\n{\n    long r=i;\n    while(j!=0)\n    {\n        if(j%2){\n            r=(r*i%p)%p;\n            j--;\n        }\n        i=(i*i)%p;\n        j\u003e\u003e=1;\n    }\n    return r%p;\n}\nint main()\n{\n    long p;\n    cin \u003e\u003e p;int count=0;bool f=true;\n    for(long i=1;i\u003c=p-1;i++)\n    {\n        map\u003clong long,bool\u003e m;bool b=false;\n        for(long j=0;j\u003c=p-2;j++)\n        {\n            m[mo_p(p,i,j)]=true;\n        }\n        for(long long j=1;j\u003c=p-1;j++)\n        {\n            if(!m[j]) {\n                b=true;\n                break;\n            }\n        }\n        if(!b){\n            if(f){\n                cout \u003c\u003c i \u003c\u003c \" \";\n                count++;\n                f=false;\n            }\n            else\n                count++;\n        }\n    }\n    cout \u003c\u003c count;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Primitive Problem","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong mo_p(long p,long i,long j)\n{\n    long r=i;\n    while(j!=0)\n    {\n        if(j%2){\n            r=(r*i%p)%p;\n            j--;\n        }\n        i=(i*i)%p;\n        j\u003e\u003e=1;\n    }\n    return r%p;\n}\nint main()\n{\n    long p;\n    cin \u003e\u003e p;int count=0;bool f=true;\n    for(long i=1;i\u003c=p-1;i++)\n    {\n        map\u003clong long,bool\u003e m;bool b=false;\n        for(long j=0;j\u003c=p-2;j++)\n        {\n            long k=mo_p(p,i,j);\n            if(m[k]){\n                b=true;\n                break;\n            }\n            else m[k]=true;\n        }\n        if(!b){\n            if(f){\n                cout \u003c\u003c i \u003c\u003c \" \";\n                count++;\n                f=false;\n            }\n            else\n                count++;\n        }\n    }\n    cout \u003c\u003c  count;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n    }\n    int swaps=0;\n    int pointer_m=-1;\n    for(int j=0;j\u003cv.size();j++)\n    {   \n        int m=INT_MAX;\n        for(int i=j;i\u003cv.size();i++)\n        {\n            if(v[i]\u003c=m){\n                m=v[i];\n                pointer_m=i;\n            }\n        }\n        if(pointer_m!=j)\n        {\n            swap(v[pointer_m],v[j]);\n            for(auto i:v)cout \u003c\u003c i \u003c\u003c \" \";\n            cout \u003c\u003c endl;\n            swaps++;\n        }\n    }\n    cout \u003c\u003c swaps ;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;vector\u003cint\u003e r;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n        r.push_back(-a);\n    }\n    int swaps_p=0;int swaps_n=0;\n    int pointer_m=-1;\n    for(int j=0;j\u003cv.size();j++)\n    {   \n        int m=INT_MAX;\n        for(int i=j;i\u003cv.size();i++)\n        {\n            if(v[i]\u003c=m){\n                m=v[i];\n                pointer_m=i;\n            }\n        }\n        if(pointer_m!=j)\n        {\n            swap(v[pointer_m],v[j]);\n            swaps_p++;\n        }\n    } \n    pointer_m=-1;\n    for(int j=0;j\u003cv.size();j++)\n    {   \n        int m=INT_MAX;\n        for(int i=j;i\u003cv.size();i++)\n        {\n            if(r[i]\u003c=m){\n                m=r[i];\n                pointer_m=i;\n            }\n        }\n        if(pointer_m!=j)\n        {\n            swap(r[pointer_m],r[j]);\n            swaps_n++;\n        }\n    }\n    cout \u003c\u003c min(swaps_n,swaps_p) ;\n}\n","score":0.4,"language":"cpp"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;vector\u003cint\u003e r;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n        r.push_back(-a);\n    }\n    int swaps_p=0;int swaps_n=0;\n    int pointer_m_p=-1;int pointer_m_n=-1;\n    for(int j=0;j\u003cv.size();j++)\n    {   \n        int m=INT_MAX;\n        for(int i=j;i\u003cv.size();i++)\n        {\n            if(v[i]\u003c=m){\n                m=v[i];\n                pointer_m_p=i;\n            }\n            if(r[i]\u003c=m){\n                m=r[i];\n                pointer_m_n=i;\n            }\n        }\n        if(pointer_m_p!=j)\n        {\n            swap(v[pointer_m_p],v[j]);\n            swaps_p++;\n        }\n        if(pointer_m_n!=j)\n        {\n            swap(r[pointer_m_n],r[j]);\n            swaps_n++;\n        }\n    } \n    cout \u003c\u003c min(swaps_n,swaps_p) ;\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;vector\u003cint\u003e r;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n        r.push_back(-a);\n    }\n    int swaps_p=0;int swaps_n=0;\n    int pointer_m_p=-1;int pointer_m_n=-1;\n    for(int j=0;j\u003cv.size();j++)\n    {   \n        int m_n=INT_MAX;int m_p=INT_MAX;\n        for(int i=j;i\u003cv.size();i++)\n        {\n            if(v[i]\u003c=m_p){\n                m_p=v[i];\n                pointer_m_p=i;\n            }\n            if(r[i]\u003c=m_n){\n                m_n=r[i];\n                pointer_m_n=i;\n            }\n        }\n        if(pointer_m_p!=j)\n        {\n            swap(v[pointer_m_p],v[j]);\n            swaps_p++;\n        }\n        if(pointer_m_n!=j)\n        {\n            swap(r[pointer_m_n],r[j]);\n            swaps_n++;\n        }\n    } \n    cout \u003c\u003c min(swaps_n,swaps_p) ;\n}\n","score":0.4,"language":"cpp"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;vector\u003cint\u003e r;vector\u003cint\u003e r_r;\n    while(n--)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n        r.push_back(a);\n    }\n    sort(r.begin(),r.end());\n    r_r=r;reverse(r.begin(),r.end());\n    int swaps_p=-1;int swaps_n=-1;\n    for(int i=0;i\u003cv.size();i++)\n    {\n        if(r_r[i]!=v[i]) swaps_n++;\n        if(r[i]!=v[i]) swaps_p++;\n    }\n    cout \u003c\u003c min(swaps_n,swaps_p);\n}\n","score":0.1,"language":"cpp"},{"contest":"Master","challenge":"Lily's Homework","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int k;cin \u003e\u003e k;\n    map\u003cint,int\u003e m,n;\n    vector\u003cint\u003e v,r,t;\n    int i=0;\n    for(int i=0;i\u003ck;i++)\n    {\n        int a;cin \u003e\u003e a;\n        v.push_back(a);r.push_back(a);t.push_back(a);\n        m[a]=i;\n    }\n    n=m;\n    sort(r.begin(),r.end());\n    int s=0;int ss=0;\n    for(int i=0;i\u003cv.size();i++)\n    {\n        if(v[i]!=r[i]){\n            s++;\n            swap(v[i],v[m[r[i]]]);\n            m[v[m[r[i]]]]=m[r[i]];\n        }\n    }\n    reverse(r.begin(),r.end());\n    m=n;\n    v=t;\n    for(int i=0;i\u003cv.size();i++)\n    {\n        if(v[i]!=r[i]){\n            ss++;\n            swap(v[i],v[m[r[i]]]);\n            m[v[m[r[i]]]]=m[r[i]];\n        }\n    }\n    cout \u003c\u003c min(s,ss);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Top Competitors","code":"select hackers.hacker_id,hackers.name from submissions as s,hackers as h,challenges as c,difficulty as d where h.hacker_id=s.hacker_id and s.challenge_id=c.challenge_id and c.difficulty_level=d.difficulty_level and s.score = d.score;\n    ","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Top Competitors","code":"select h.hacker_id,h.name\n    from Hackers as h\n    INNER JOIN Submissions as s\n        on s.hacker_id=h.hacker_id\n    INNER JOIN Challenges as c\n        on s.challenge_id=c.challenge_id\n    INNER JOIN difficulty as d\n        on c.difficulty_level=d.difficulty_level\nwhere s.score=d.score and c.difficulty_level=d.difficulty_level\ngroup by h.hacker_id having count(s.hacker_id)\u003e1 order by h.hacker_id asc, count(s.hacker_id) desc\n    \n    ","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Top Competitors","code":"select h.hacker_id,h.name\n    from Hackers h\n    JOIN Submissions s\n        on h.hacker_id=s.hacker_id\n    JOIN Challenges c\n        on s.challenge_id=c.challenge_id\n    JOIN difficulty d\n        on c.difficulty_level=d.difficulty_level\nwhere s.score=d.score \ngroup by h.hacker_id having count(s.hacker_id)\u003e 1 order by h.hacker_id asc, count(s.hacker_id) desc;\n    \n    ","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Top Competitors","code":"select h.hacker_id,h.name \n    from submissions s,hackers h,challenges c,difficulty d \n    where h.hacker_id=s.hacker_id \n        and c.challenge_id=s.challenge_id \n        and c.difficulty_level=d.difficulty_level \n        and s.score = d.score\nGroup by h.hacker_id,h.name having count(s.hacker_id)\u003e1\norder by h.hacker_id asc,count(c.challenge_id) desc;\n    ","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Top Competitors","code":"select h.hacker_id,h.name \n    from submissions s,hackers h,challenges c,difficulty d \n    where h.hacker_id=s.hacker_id \n        and c.challenge_id=s.challenge_id \n        and c.difficulty_level=d.difficulty_level \n        and s.score = d.score\nGroup by h.hacker_id,h.name having count(h.hacker_id)\u003e1\norder by count(c.challenge_id) desc,h.hacker_id asc;\n    ","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Ollivander's Inventory","code":"select w.id,wp.age,w.coins_needed,w.power from Wands W,Wands_Property WP    where W.code=WP.code and coins_needed in (select coins_needed from wands ww where ww.code=wp.code and wp.is_evil=0 group by ww.power)order by w.power desc,wp.age desc;","score":0.0,"language":"oracle"},{"contest":"Master","challenge":"Ollivander's Inventory","code":"select w.id,wp.age,w.coins_needed,w.power from Wands W,Wands_Property WP    where W.code=WP.code and coins_needed in (select min(coins_needed) from wands ww where ww.code=wp.code and wp.is_evil=0 group by ww.power)order by w.power desc,wp.age desc;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"List Comprehensions","code":"x,y,z,n=(int(input()) for i in range(4))\nl=[]\nfor i in range(x+1):\n    for j in range(y+1):\n        for k in range(z+1):\n            if(i+j+k!=n):\n                l.append([i,j,k])\nprint(l)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find the Runner-Up Score!  ","code":"n = int(input())\narr = input().split()\narr.sort()\nm=arr[len(arr)-1]\nfor i in range(len(arr)):\n    if arr[i+1]==m:\n        print(arr[i])\n        break\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Find the Runner-Up Score!  ","code":"n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nm=max(arr)\nfor i in range(len(arr)):\n    if arr[i+1]==m:\n        print(arr[i])\n        break\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Lists","code":"L=[]\nfor _ in range(int(input())):\n    l=input().split()\n    if l[0]=='insert':\n        L.insert(int(l[1]),int(l[2]))\n    elif l[0]=='append':\n        L.append(int(l[1]))\n    elif l[0]=='remove':\n        L.remove(int(l[1]))\n    elif l[0]=='sort':\n        L.sort()\n    elif l[0]=='pop':\n        L.pop()\n    elif l[0]=='reverse':\n        L.reverse()\n    elif l[0]=='print':\n        print(L)\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Tuples ","code":"n = int(input())\ni_l = input().split()\nfor _ in range(len(i_l)):\n    i_l[_]=int(i_l[_])\ni_l=tuple(i_l)\nprint(hash(i_l))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Nested Lists","code":"L=[]\nfor _ in range(int(input())):\n    L.append([input(),float(input())])\nL.sort()\nL.sort(key = lambda x: x[1])\ntemp=0\nfor i in range(len(L)):\n    if(L[i][1]==L[0][1]):\n        continue\n    else :\n        print(L[i][0])\n        temp=L[i][1]\n        if(L[i+1][1]\u003etemp):\n            break;\n\n","score":0.777777777778,"language":"python3"},{"contest":"Master","challenge":"Nested Lists","code":"L=[]\nfor _ in range(int(input())):\n    L.append([input(),float(input())])\nL.sort()\nL.sort(key = lambda x: x[1])\ntemp=0\nb=False\nfor i in range(len(L)):\n    if(L[i][1]==L[0][1]):\n        continue\n    else :\n        if(b and L[i][1]!=temp):\n            break;\n        print(L[i][0])\n        temp=L[i][1]\n        b=True\n        \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"/* Hidden stub code will pass a root argument to the function below. Complete the function to solve the challenge. Hint: you may want to write one or more helper functions.  \n\nThe Node struct is defined as follows:\n\tstruct Node {\n\t\tint data;\n\t\tNode* left;\n\t\tNode* right;\n\t}\n*/\n\tbool checkBST(Node* root) {\n        bool b=true;\n\t\tif(root-\u003eleft==NULL \u0026\u0026 root-\u003eright==NULL)\n        {\n            return true;\n        }\n        else \n        {\n            if(root-\u003eleft)\n            {\n                if(root-\u003edata\u003croot-\u003eleft-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    b\u0026=checkBST(root-\u003eleft);\n            }\n            if(root-\u003eright)\n            {\n                if(root-\u003edata\u003eroot-\u003eright-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    b\u0026=checkBST(root-\u003eright);\n            }     \n        }\n        return b;\n\t}","score":0.384615384615,"language":"cpp"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"/* Hidden stub code will pass a root argument to the function below. Complete the function to solve the challenge. Hint: you may want to write one or more helper functions.  \n\nThe Node struct is defined as follows:\n\tstruct Node {\n\t\tint data;\n\t\tNode* left;\n\t\tNode* right;\n\t}\n*/\n\tbool checkBST(Node* root) {\n\t\tif(root-\u003eleft==NULL \u0026\u0026 root-\u003eright==NULL)\n        {\n            return true;\n        }\n        else \n        {\n            if(root-\u003eleft \u0026\u0026 root-\u003eright==NULL)\n            {\n                if(root-\u003edata\u003croot-\u003eleft-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eleft);\n            }\n            else if(root-\u003eright \u0026\u0026 root-\u003eleft==NULL)\n            {\n                if(root-\u003edata\u003eroot-\u003eright-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eright);\n            } \n            else\n            {\n                if(root-\u003edata\u003eroot-\u003eright-\u003edata || root-\u003edata\u003croot-\u003eleft-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eright)\u0026checkBST(root-\u003eright);\n            } \n            \n        }\n\t}","score":0.307692307692,"language":"cpp"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"/* Hidden stub code will pass a root argument to the function below. Complete the function to solve the challenge. Hint: you may want to write one or more helper functions.  \n\nThe Node struct is defined as follows:\n\tstruct Node {\n\t\tint data;\n\t\tNode* left;\n\t\tNode* right;\n\t}\n*/\n\tbool checkBST(Node* root) {\n\t\tif(!root-\u003eleft \u0026\u0026 !root-\u003eright)\n        {\n            return true;\n        }\n        else \n        {\n            if(root-\u003eleft \u0026\u0026 root-\u003eright==NULL)\n            {\n                if(root-\u003edata\u003croot-\u003eleft-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eleft);\n            }\n            else if(root-\u003eright \u0026\u0026 root-\u003eleft==NULL)\n            {\n                if(root-\u003edata\u003eroot-\u003eright-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eright);\n            } \n            else\n            {\n                if(root-\u003edata\u003eroot-\u003eright-\u003edata || root-\u003edata\u003croot-\u003eleft-\u003edata)\n                {\n                    return 0;\n                }\n                else \n                    return checkBST(root-\u003eright)\u0026checkBST(root-\u003eright);\n            } \n            \n        }\n\t}","score":0.307692307692,"language":"cpp"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"bool checkBST(Node* root) {\n    if(root == NULL || (root-\u003eright==NULL \u0026\u0026 root-\u003eleft==NULL)) return 1;       \n    else\n    {\n        if(root-\u003eleft!=NULL \u0026\u0026 root-\u003eright==NULL)\n        {\n            if(root-\u003eleft-\u003edata\u003eroot-\u003edata) return 0;\n            else return checkBST(root-\u003eleft);\n        }\n        else if(root-\u003eright!=NULL \u0026\u0026 root-\u003eleft==NULL)\n        {\n            if(root-\u003eright-\u003edata\u003croot-\u003edata) return 0;\n            else return checkBST(root-\u003eright);\n        }\n        else//(root-\u003eleft!=NULL \u0026\u0026 root-\u003eright!=NULL)\n        {\n            if(root-\u003eright-\u003edata\u003croot-\u003edata || root-\u003eleft-\u003edata\u003eroot-\u003edata) return 0;\n            else return checkBST(root-\u003eleft)\u0026\u0026checkBST(root-\u003eright);\n        }\n        \n    }\n}","score":0.384615384615,"language":"cpp"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"void io(Node* root,vector\u003cint\u003e\u0026 v)\n{\n    if(root!=NULL)\n        {io(root-\u003eleft,v);\n        v.push_back(root-\u003edata);\n        io(root-\u003eright,v);}\n}\nbool checkBST(Node* root) {\n    vector\u003cint\u003e v;\n    io(root,v);\n    for(int i=0;i\u003cv.size()-1;i++)\n    {\n        if(v[i]\u003ev[i+1]) return 0;\n    }\n    return 1;\n}","score":0.769230769231,"language":"cpp"},{"contest":"Master","challenge":"Is This a Binary Search Tree?","code":"void io(Node* root,vector\u003cint\u003e\u0026 v)\n{\n    if(root!=NULL)\n        {io(root-\u003eleft,v);\n        v.push_back(root-\u003edata);\n        io(root-\u003eright,v);}\n}\nbool checkBST(Node* root) {\n    vector\u003cint\u003e v;\n    io(root,v);\n    for(int i=0;i\u003cv.size()-1;i++)\n    {\n        if(v[i]\u003ev[i+1] || v[i]==v[i+1]) return 0;\n    }\n    return 1;\n}","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Say \"Hello, World!\" With C++","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    printf(\"Hello, World!\");\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Input and Output","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int a;int t=0;\n    while(scanf(\"%d\",\u0026a)!=EOF)\n    {\n        t+=a;\n    }\n    cout \u003c\u003c t \u003c\u003c endl;\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Basic Data Types","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    int a;long l;char c;float f;double d;\n    cin \u003e\u003e a \u003e\u003e l \u003e\u003e c \u003e\u003e f \u003e\u003e d;\n    printf(\"%d\\n%ld\\n%c\\n%.3f\\n%lf\",a,l,c,f,d);\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Conditional Statements","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    string num[] = {\"zero\",\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"};\n    if(n\u003c=9) cout \u003c\u003c num[n];\n    else cout \u003c\u003c \"Greater than 9\";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"For Loop","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    string num[]= {\"zero\",\"one\", \"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    int a,b;cin \u003e\u003e a \u003e\u003e b;\n    for(;a\u003c=b;a++)\n    {\n        if(a\u003c=9) cout \u003c\u003c num[a]\u003c\u003c endl;\n        else \n        {\n            if(a%2) cout \u003c\u003c \"odd\\n\";\n            else cout \u003c\u003c \"even\\n\";\n        }\n    }\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"For Loop","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\n\nint main() {\n    string num[]= {\"zero\",\"one\", \"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\"};\n    int a,b;cin \u003e\u003e a \u003e\u003e b;\n    for(;a\u003c=b;a++)\n    {\n        if(a\u003c=9) cout \u003c\u003c num[a]\u003c\u003c endl;\n        else \n        {\n            if(a%2) cout \u003c\u003c \"odd\\n\";\n            else cout \u003c\u003c \"even\\n\";\n        }\n    }\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Functions","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\n#include\u003cstdarg.h\u003e\nusing namespace std;\n\nint max_of_n(int n...)\n{\n    int M=0;\n    va_list l;\n    va_start(l,n);\n    for(int i=0;i\u003cn;i++)\n    {\n        int a =va_arg(l,int);\n        cout \u003c\u003c a \u003c\u003c endl;\n        if(a\u003e=M) M=a;\n    }\n    return M;\n}\nint main() {\n    int a, b, c, d;\n    scanf(\"%d %d %d %d\", \u0026a, \u0026b, \u0026c, \u0026d);\n    int ans = max_of_n(4,a, b, c, d);\n    printf(\"%d\", ans);\n    \n    return 0;\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Functions","code":"#include \u003ciostream\u003e\n#include \u003ccstdio\u003e\n#include\u003cstdarg.h\u003e\nusing namespace std;\n\nint max_of_n(int n...)\n{\n    int M=0;\n    va_list l;\n    va_start(l,n);\n    for(int i=0;i\u003cn;i++)\n    {\n        int a =va_arg(l,int);\n        if(a\u003e=M) M=a;\n    }\n    return M;\n}\nint main() {\n    int a, b, c, d;\n    scanf(\"%d %d %d %d\", \u0026a, \u0026b, \u0026c, \u0026d);\n    int ans = max_of_n(4,a, b, c, d);\n    printf(\"%d\", ans);\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Pointer","code":"#include \u003cstdio.h\u003e\nusing namespace std;\nvoid update(int *a,int *b) {\n    int a_,b_;\n    a_=*a+*b; \n    b_=(*a-*b\u003e0)?(*a-*b):(*b-*a);\n    *a=a_;*b=b_;\n}\n\nint main() {\n    int a, b;\n    int *pa = \u0026a, *pb = \u0026b;\n    scanf(\"%d %d\", \u0026a, \u0026b);\n    update(pa, pb);\n    printf(\"%d\\n%d\", a, b);\n\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Arrays Introduction","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003e n;\n    int* a=new int[n];\n    for(int i=0;i\u003cn;i++)\n        cin \u003e\u003e a[n-1-i];\n    for(int i=0;i\u003cn;i++)\n        cout \u003c\u003c a[i] \u003c\u003c \" \";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Variable Sized Arrays","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n,q;cin \u003e\u003e n \u003e\u003e q;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    while(n--)\n    {\n        int l;cin \u003e\u003e l;\n        vector\u003cint\u003e w;\n        while(l--)\n        {\n            int t;cin \u003e\u003e t;\n            w.push_back(t);\n        }\n        v.push_back(w);\n    }  \n    while(q--)\n    {\n        int i,m;cin \u003e\u003e i \u003e\u003em;\n        cout \u003c\u003c v[i][m]\u003c\u003c endl;\n    }\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"StringStream","code":"#include \u003csstream\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\n\nvector\u003cint\u003e parseInts(string str) {\n\tint temp=-1;vector\u003cint\u003e v;\n    for(int i=0;i\u003cstr.size();i++)\n    {\n        if(str[i]==',' || i==str.size()-1)\n        {\n            v.push_back(stoi(str.substr(temp+1,i-temp+1)));\n            temp=i;\n        }\n    }\n    return v;\n}\n\nint main() {\n    string str;\n    cin \u003e\u003e str;\n    vector\u003cint\u003e integers = parseInts(str);\n    for(int i = 0; i \u003c integers.size(); i++) {\n        cout \u003c\u003c integers[i] \u003c\u003c \"\\n\";\n    }\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"StringStream","code":"#include \u003csstream\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\n\nvector\u003cint\u003e parseInts(string str) {\n\tstringstream s(str);\n    int t;\n    vector\u003cint\u003e v;\n    char c;\n    while(s \u003e\u003e t){\n        v.push_back(t);\n        s \u003e\u003e c;\n    }\n    return v;\n}\n\nint main() {\n    string str;\n    cin \u003e\u003e str;\n    vector\u003cint\u003e integers = parseInts(str);\n    for(int i = 0; i \u003c integers.size(); i++) {\n        cout \u003c\u003c integers[i] \u003c\u003c \"\\n\";\n    }\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"StringStream","code":"#include \u003csstream\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\n\nvoid parseInts(string str,vector\u003cint\u003e\u0026 v) {\n\tstringstream s(str);\n    int t;\n    char c;\n    while(s \u003e\u003e t){\n        v.push_back(t);\n        s \u003e\u003e c;\n    }\n}\n\nint main() {\n    string str;\n    cin \u003e\u003e str;\n    vector\u003cint\u003e integers;\n    parseInts(str,integers);\n    for(int i = 0; i \u003c integers.size(); i++) {\n        cout \u003c\u003c integers[i] \u003c\u003c \"\\n\";\n    }\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Strings","code":"#include \u003ciostream\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main() {\n\tstring a,b;cin \u003e\u003e a \u003e\u003e b;\n    cout \u003c\u003c a.size() \u003c\u003c \" \" \u003c\u003c b.size() \u003c\u003cendl;\n    cout \u003c\u003c a+b\u003c\u003cendl;\n    swap(a[0],b[0]);\n    cout \u003c\u003c a \u003c\u003c \" \" \u003c\u003c b \u003c\u003cendl;\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Structs","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nstruct Student{\n    int age;\n    string first_name;\n    string last_name;\n    int standard;\n};\nvoid print(Student s)\n{\n    cout \u003c\u003c s.age \u003c\u003c \" \" \u003c\u003c s.first_name \u003c\u003c \" \" \u003c\u003c s.last_name \u003c\u003c \" \" \u003c\u003c s.standard;\n}\nint main() {\n    Student st;\n    cin \u003e\u003e st.age \u003e\u003e st.first_name \u003e\u003e st.last_name \u003e\u003e st.standard;\n    print(st);\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Class","code":"#include \u003ciostream\u003e\n#include \u003csstream\u003e\nusing namespace std;\n\nclass Student{\n    private:\n        int age;\n        int standard;\n        string fname;\n        string lname;\n    public:\n        void set_age(int a){\n            age=a;\n        }\n        void set_standard(int s){\n            standard=s;\n        } \n        void set_first_name(string fn){\n            fname=fn;\n        }\n        void set_last_name(string ln){\n            lname=ln;\n        }\n        int get_age(){\n            return age;\n        }\n        int get_standard(){\n            return standard;\n        } \n        string get_first_name(){\n            return fname;\n        }\n        string get_last_name(){\n            return lname;\n        }\n        string to_string(){\n            return std::to_string(age) + \",\" + fname + \",\" + lname + \",\" + std::to_string(standard);\n        }\n\n};\nint main() {\n    int age, standard;\n    string first_name, last_name;\n    \n    cin \u003e\u003e age \u003e\u003e first_name \u003e\u003e last_name \u003e\u003e standard;\n    \n    Student st;\n    st.set_age(age);\n    st.set_standard(standard);\n    st.set_first_name(first_name);\n    st.set_last_name(last_name);\n    \n    cout \u003c\u003c st.get_age() \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.get_last_name() \u003c\u003c \", \" \u003c\u003c st.get_first_name() \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.get_standard() \u003c\u003c \"\\n\";\n    cout \u003c\u003c \"\\n\";\n    cout \u003c\u003c st.to_string();\n    \n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maps-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cset\u003e\n#include \u003cmap\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    map\u003cstring,int\u003e stu2poo;\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        int i;cin \u003e\u003e i;\n        if(i==1){\n            string s;cin \u003e\u003e s;\n            int g;cin \u003e\u003e g;\n            if(stu2poo[s]){\n                stu2poo[s]+=g;\n            }\n            else\n                stu2poo[s]=g;\n        }\n        else if(i==2){\n            string s;cin \u003e\u003e s;\n            stu2poo[s]=0;\n        }\n        else{\n            string s;cin \u003e\u003e s;\n            if(stu2poo[s]){\n                cout \u003c\u003c stu2poo[s] \u003c\u003c endl;\n            }\n            else\n            {\n                cout \u003c\u003c 0 \u003c\u003cendl;\n            }\n        }\n    }\n    return 0;\n}\n\n\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"sWAP cASE","code":"def swap_case(s):\n    return s.swapcase()\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"String Split and Join","code":"def split_and_join(line):\n    s = line.split()\n    return \"-\".join(s)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"What's Your Name?","code":"def print_full_name(a, b):\n    print(\"Hello \" + a + \" \" + b + \"! You just delved into python.\")\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Mutations","code":"def mutate_string(string, position, character):\n    return string[:position]+character+string[position+1:]\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find a string","code":"def count_substring(s, ss):\n    total=0\n    for i in range(len(s)-len(ss)+1):\n        for j in range(len(ss)):\n            if(s[i+j]!=ss[j]):\n                break\n            if j== len(ss)-1:\n                total+=1\n    return total\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong power(long long a,long long b,long m)\n{\n    long long t=1;\n    while(b){\n        if(b%2){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n)\n{\n    if(n%2==0) return n==2;\n    vector\u003cint\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003cint\u003e base32={2, 7, 61};\n    vector\u003cint\u003e base=n\u003c=INT_MAX?base32:base64;\n    int d=n-1;int r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    for(auto a:base){\n        if(a%n==0)return 1;\n        int x=power(a,d,n);bool c=true;\n        if(x==1 || x==n-1) continue;\n        for(;r--;){\n            x=power(x,2,n);\n            if(x==n-1){\n               c=false;\n               break;\n            }\n        }\n        if(c) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong power(long long a,long long b,long m)\n{\n    long long t=1;\n    while(b){\n        if(b%2){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long a)\n{\n    if(n%2==0) return n==2;\n    int d=n-1;int r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    if((a%=n)==0)return 1;\n    int u=power(a,d,n);\n    if(u==1) return 1;\n    for(int i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    vector\u003cint\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003cint\u003e base32={2, 7, 61};\n    vector\u003cint\u003e base=n\u003c=INT_MAX?base32:base64;\n    if(n%2==0) return n==2;\n    for(auto a:base){\n        if(!m_r(n,a)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong power(long long a,long long b,long m)\n{\n    long long t=1;\n    while(b){\n        if(b%2){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long a)\n{\n    if(n%2==0) return n==2;\n    int d=n-1;int r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    if(a%n==0)return 1;\n    int u=power(a,d,n);\n    if(u==1) return 1;\n    for(int i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    vector\u003clong\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    if(n%2==0) return n==2;\n    for(auto a:base){\n        if(!m_r(n,a)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    if(n%2==0) return n==2;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    if(n%2==0) return n==2;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 2570940, 880937, 610386380, 4130785767};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    if(n%2==0) return n==2;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    if(n%2==0) return n==2;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 325, 9375, 28178, 450775, 9780504, 1795265022};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int n, int k,int \u0026r) \n{\n    for (int i = 0; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(!m[inpt] \u0026\u0026 is_p(inpt)) {\n            m[inpt]=true;\n                r++;\n        }\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    if(n%2==0) return n==2;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(n%2==0) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(n%2==0) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 n\u003e841) return 0;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n  \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(n%2==0) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 n\u003e841) return 0;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003c=r_l \u0026\u0026 inpt\u003e=l_l) \n        {\n            if(!m[inpt] \u0026\u0026 is_p(inpt)) {\n                m[inpt]=true;\n                r++;\n            }\n        }\n        if(inpt\u003er_l) break;\n        f(inpt, n, k - 1,r); \n    } \n    \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f(0,4,(int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.72,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(n%2==0) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 n\u003e841) return 0;\n    long long d=n-1;long long r=0;\n    while(d%2==0){\n        d/=2;r++;\n    }\n    //cout \u003c\u003c n \u003c\u003c \" \" \u003c\u003c d \u003c\u003c \" \" \u003c\u003c r \u003c\u003c endl;\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003c=r_l \u0026\u0026 inpt\u003e=l_l) \n        {\n            if(!m[inpt] \u0026\u0026 is_p(inpt)) {\n                m[inpt]=true;\n                r++;\n            }\n        }\n        if(inpt\u003er_l) return;\n        f(inpt, n, k - 1,r); \n    } \n    \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;long long l=0;\n    f(0,4,(int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.72,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cstring\u003e split_string(string);\nbool is_closer(vector\u003cint\u003e obstakl_1,vector\u003cint\u003e obstakl_2,int y,int x)\n{\n    if(obstakl_1.empty()) return true;\n    if(max(abs(obstakl_1[0]-y),abs(obstakl_1[1]-x))\u003emax(abs(obstakl_2[0]-y),abs(obstakl_2[1]-x))) return true;\n    return false;\n}\nint queensAttack(int n, int k, int r_q, int c_q, vector\u003cvector\u003cint\u003e\u003e obstacles) \n{\n    int count_neg=0;\n    vector\u003cvector\u003cint\u003e\u003e realms={{},{},{},{},{},{},{},{}};\n    if(k!=0)\n    {\n    for(auto v:obstacles)\n    {\n        if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n        {\n            if(is_closer(realms[0],v,r_q,c_q)) realms[0]=v;continue;\n        }\n        if(c_q-v[1] \u003c0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n        {\n            if(is_closer(realms[1],v,r_q,c_q)) realms[1]=v;continue;\n        }\n        if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n        {\n            if(is_closer(realms[2],v,r_q,c_q)) realms[2]=v;continue;\n        }\n        if(c_q-v[1] \u003e0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n        {\n            if(is_closer(realms[3],v,r_q,c_q)) realms[3]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n        {\n            if(realms[4].empty()) {realms[4]=v;continue;}\n            if(v[1]\u003erealms[4][1]) realms[4]=v;continue;\n        }\n        if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n        {\n            if(realms[5].empty()) {realms[5]=v;continue;}\n            if(v[1]\u003crealms[5][1]) realms[5]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n        {\n            if(realms[6].empty()) {realms[6]=v;continue;}\n            if(v[0]\u003erealms[6][0]) realms[6]=v;continue;\n        }\n        if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n        {\n            if(realms[7].empty()) {realms[7]=v;continue;}\n            if(v[0]\u003crealms[7][0]) realms[7]=v;continue;\n        }\n    }\n    for(auto v:realms)\n        {\n            if(v.empty()) continue;\n            if(r_q-v[0]\u003e0 \u0026\u0026 r_q-v[0]==c_q-v[1]) //0\n            {\n                count_neg+=min(v[0],v[1]);continue;\n            }\n            if(c_q-v[1] \u003e0 \u0026\u0026 r_q-v[0]==v[1]-c_q) \n            {\n                count_neg+=min(v[1],n-v[0]+1);continue;\n            }\n            if(r_q-v[0]\u003c0 \u0026\u0026 v[0]-r_q==v[1]-c_q) \n            {\n                count_neg+=min(n-v[1],n-v[0])+1;continue;\n            }\n            if(c_q-v[1] \u003c0 \u0026\u0026 v[0]-r_q==c_q-v[1]) \n            {\n                count_neg+=min(n-v[1]+1,v[0]);continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003cc_q) \n            {\n                count_neg+=v[1];continue;\n            }\n            if(r_q==v[0] \u0026\u0026 v[1]\u003ec_q) \n            {\n                count_neg+=n-v[1]+1;continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003cr_q) \n            {\n                count_neg+=v[0];continue;\n            }\n            if(c_q==v[1] \u0026\u0026 v[0]\u003er_q) \n            {\n                count_neg+=n-v[0]+1;continue;\n            }\n        }\n    }\n    cout \u003c\u003c count_neg \u003c\u003c endl;\n    int basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\n    int total=(basic-1)*4+(n-basic)*3;\n    cout \u003c\u003c total \u003c\u003c \" \" \u003c\u003c count_neg \u003c\u003c endl;\n    return total-count_neg;\n}\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string nk_temp;\n    getline(cin, nk_temp);\n\n    vector\u003cstring\u003e nk = split_string(nk_temp);\n\n    int n = stoi(nk[0]);\n\n    int k = stoi(nk[1]);\n\n    string r_qC_q_temp;\n    getline(cin, r_qC_q_temp);\n\n    vector\u003cstring\u003e r_qC_q = split_string(r_qC_q_temp);\n\n    int r_q = stoi(r_qC_q[0]);\n\n    int c_q = stoi(r_qC_q[1]);\n\n    vector\u003cvector\u003cint\u003e\u003e obstacles(k);\n    for (int i = 0; i \u003c k; i++) {\n        obstacles[i].resize(2);\n\n        for (int j = 0; j \u003c 2; j++) {\n            cin \u003e\u003e obstacles[i][j];\n        }\n\n        cin.ignore(numeric_limits\u003cstreamsize\u003e::max(), '\\n');\n    }\n\n    int result = queensAttack(n, k, r_q, c_q, obstacles);\n\n    fout \u003c\u003c result \u003c\u003c \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector\u003cstring\u003e split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char \u0026x, const char \u0026y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector\u003cstring\u003e splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cpair\u003cint,int\u003e,bool\u003e m;int count=0;int c=0;\n    int n,k;cin \u003e\u003e n \u003e\u003e k ;\n    int r,q;cin \u003e\u003e r \u003e\u003e q ;\n    while(k--)\n    {\n        int ri,ci;cin \u003e\u003e ri \u003e\u003e ci ;\n        pair\u003cint,int\u003e p=make_pair(ri,ci);\n        m[p]=1;\n    }\n    vector\u003cbool\u003e b(8,1);\n    for(int i=1;c\u003c8;i++)\n    {\n        vector\u003cpair\u003cint,int\u003e\u003e v(8);\n        v[0]=make_pair(r+i,q); v[1]=make_pair(r-i,q);\n        v[2]=make_pair(r,q+i);v[3]=make_pair(r,q-i);\n        v[4]=make_pair(r+i,q+i);v[5]=make_pair(r-i,q-i);\n        v[6]=make_pair(r-i,q+i);v[7]=make_pair(r+i,q-i);\n        for(int j=0;j\u003c8;j++)\n        {\n            if((m[v[j]] || v[j].first\u003c=0 || v[j].second\u003c=0 || v[j].first\u003en || v[j].second\u003en ) \u0026\u0026 b[j])\n            {\n                b[j]=0;c++;\n            }\n            if(!m[v[j]] \u0026\u0026 b[j])\n                count++;\n        }\n    }\n    cout \u003c\u003c count;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Queen's Attack II","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cpair\u003cint,int\u003e,bool\u003e m;int count=0;int c=0;\n    int n,k;cin \u003e\u003e n \u003e\u003e k ;\n    int r,q;cin \u003e\u003e r \u003e\u003e q ;\n    while(k--)\n    {\n        int ri,ci;cin \u003e\u003e ri \u003e\u003e ci ;\n        pair\u003cint,int\u003e p=make_pair(ri,ci);\n        m[p]=1;\n    }\n    vector\u003cbool\u003e b(8,1);\n    for(int i=1;c\u003c8;i++)\n    {\n        vector\u003cpair\u003cint,int\u003e\u003e v(8);\n        v[0]=make_pair(r+i,q); v[1]=make_pair(r-i,q);\n        v[2]=make_pair(r,q+i);v[3]=make_pair(r,q-i);\n        v[4]=make_pair(r+i,q+i);v[5]=make_pair(r-i,q-i);\n        v[6]=make_pair(r-i,q+i);v[7]=make_pair(r+i,q-i);\n        for(int j=0;j\u003c8;j++)\n        {\n            if((m[v[j]] || v[j].first\u003c=0 || v[j].second\u003c=0 || v[j].first\u003en || v[j].second\u003en ) \u0026\u0026 b[j])\n            {\n                b[j]=0;\n                c++;\n            }\n            if(!m[v[j]] \u0026\u0026 b[j]) {\n                count++;\n            }\n        }\n    }\n    cout \u003c\u003c count;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=power(u,2,n);\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(!(n\u00261)) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int n, int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (int i = l; i \u003c n; i++) \n    { \n        long long inpt=s*10 + p[i];\n        if(inpt\u003er_l) return;\n        f(inpt, n, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    if(l_l\u003c=2)count+=2;if(l_l\u003e2 \u0026\u0026 l_l\u003c=5)count++;\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,4,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long* d,long long* r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,*d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003c*r \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(!(n\u00261)) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,\u0026d,\u0026r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c p.size(); l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.72,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(!(n\u00261)) return n==2;\n    if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return 1;\n    long long u=power(a,d,n);\n    if(u==1) return 1;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return 0;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    long long test=3234846615;\n    if(!(n\u00261)) return n==2;\n    if((n%3==0 \u0026\u0026 n!=3) || (n%7==0 \u0026\u0026 n!=7)) return 0;\n    if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long l_l,r_l;\nvector\u003cint\u003e p={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    vector\u003clong\u003e base64={2, 3, 5, 7, 11, 13, 17, 19, 23};\n    vector\u003clong\u003e base32={2, 7, 61};\n    vector\u003clong\u003e base=n\u003c=2147483647?base32:base64;\n    for(auto a:base){\n        if(!m_r(n,a,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    int base64[]={2, 3, 5, 7, 11, 13, 17, 19, 23,0};\n    int base32[]={2, 7, 61,0};\n    int* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                cout \u003c\u003c s \u003c\u003c endl;\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(long i=1;i\u003cr \u0026\u0026 u!=n-1;i++)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    int base64[]={2, 3, 5, 7, 11, 13, 17, 19, 23,0};\n    int base32[]={2, 7, 61,0};\n    int* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    int base32[4]={2, 7, 61,0};\n    int* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while ((d\u0026(1ll\u003c\u003cr)) == 0) r++;d\u003e\u003e=r;\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;long long m=n-1;\n    while ((m\u0026(1ll\u003c\u003cr)) == 0) r++;d=m\u003e\u003er;\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d;long long r=1;long long m=n-1;\n    while ((m\u0026(1ll \u003c\u003c r)) == 0) r++;d=m\u003e\u003er;\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1,tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1,r=0;\n    while (!(d\u00261)) r++;d\u003e\u003e=r;\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1,tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1,r=0;\n    while (!(d\u00261)) d\u003e\u003e=1;r=log2((n-1)/d);\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1,tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1,r=0;\n    while (!(d\u00261)) {d\u003e\u003e=1;r++;}\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1,tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1,r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.77,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t%m*tt%m)%m;\n        }\n        tt=(tt%m*tt%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b%2){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u%n*u%n)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,int r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;int r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        if(__gcd(n,test)!=1 \u0026\u0026 __gcd(n,test)!=n) return 0;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        long g=__gcd(n,test);\n        if(g!=1) return g==n;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.765,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        long g=__gcd(n,test);\n        if(n\u003e840)\n            if(g!=1) return g==n;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.765,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        long g=__gcd(n,test);\n        if(n\u003e840)\n            if(g!=1) return g==n;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.765,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        int b[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n        for (int i:b)\n            if(n%i==0) return n==i;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        int b[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n        for (int i:b)\n            if(n%i==0) return n==i;\n    }\n    long long d=n-1, r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks\n        long long test=3234846615;\n        if(!(n\u00261)) return n==2;\n        int b[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n        for (int i:b)\n            if(n%i==0) return n==i;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool m_r(long long n,long long a,long long d,long long r)\n{\n    if((a%=n)==0)return true;\n    long long u=power(a,d,n);\n    if(u==1) return true;\n    for(;r-- \u0026\u0026 u!=n-1;)\n    {\n        u=(u*u)%n;\n        if(u\u003c=1) return false;\n    }\n    return u==n-1;\n}\nbool is_p(long long n){\n    {//checks=â¬\n        if(!(n\u00261)) return n==2;\n    }\n    long long d=n-1;long long r=0;\n    while(d\u00261){\n        d\u003e\u003e=1;r++;\n    }\n    long base64[8]={2, 325, 9375, 28178, 450775, 9780504, 1795265022,0};\n    long base32[4]={2, 7, 61,0};\n    long* base=n\u003c=2147483647?base32:base64;\n    for(;*base!=0;base++){\n        if(!m_r(n,*base,d,r)) return false;\n    }\n    return true;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    const int pn = 9, p[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c pn; ++i)\n        if (n % p[i] == 0) return n == p[i];\n    if (n \u003c p[pn - 1]) return 0;\n    uint64_t s = 0, t = n - 1;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c pn; ++i) {\n        uint64_t pt = power(p[i], t, n);\n        if (pt == 1) continue;\n        bool ok = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !ok; ++j) {\n            if (pt == n - 1) ok = 1;\n            pt = power(pt, 2, n);\n        }\n        if (!ok) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    const int pn = 9, p[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c pn; ++i)\n        if (n % p[i] == 0) return n == p[i];\n    if (n \u003c p[pn - 1]) return 0;\n    uint64_t s = 0, t = n - 1;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c pn; ++i) {\n        uint64_t pt = power(p[i], t, n);\n        if (pt == 1) continue;\n        bool ok = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !ok; ++j) {\n            if (pt == n - 1) ok = 1;\n            pt = power(pt, 2, n);\n        }\n        if (!ok) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    const int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t s = 0, t = n - 1;\n    while (!(t \u0026 1))\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool c = 1;\n        for (int j = 0; j \u003c s \u0026\u0026 c; ++j) {\n            if (x == n - 1) c = 0;\n            x = (x*x)%n;\n        }\n        if (c) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint p[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    const int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t s = 0, t = n - 1;\n    while (!(t \u0026 1))\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool c = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !c; ++j) {\n            if (x == n - 1) c = 1;\n            x = (x*x)%n;\n        }\n        if (!c) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + p[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint g[]={2,5,3,7};\nlong long power(uint64_t a,uint64_t b,uint64_t m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(uint64_t n){\n    const int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t d = n - 1;int r = 0;\n    while (!(d \u0026 1))\n        d \u003e\u003e= 1, ++r;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], d, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c r \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = (x*x)%n;\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + g[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint g[]={2,5,3,7};\nlong long power(uint64_t a,uint64_t b,uint64_t m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(uint64_t n){\n    const int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t d = n - 1, r = 0;\n    while (!(d \u0026 1)) d \u003e\u003e= 1, ++r;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], d, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c r \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = (x*x)%n;\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + g[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    long long a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t s = 0, t = n - 1;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint g[]={2,5,3,7};\nlong long power(uint64_t a,uint64_t b,uint64_t m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(uint64_t n){\n    long a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t d = n - 1;int r = 0;\n    while (!(d \u0026 1)) d \u003e\u003e= 1, ++r;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], d, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c r \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = (x*x)%n;\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + g[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    long long a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0,\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    long long a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = (x*x)%n;\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.86,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nlong long power(long long a,long long b,long long m)\n{\n    __int128 t=1;\n    __int128 tt=a;\n    while(b){\n        if(b\u00261){\n            t=(t*tt)%m;\n        }\n        tt=(tt*tt)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        uint64_t x = power(a[i], t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            x = power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 1) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k - 1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;//count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.02,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cmap\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int k,int \u0026r) \n{ \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003c=r_l \u0026\u0026 inpt\u003e=l_l) \n        {\n            if(!m[inpt] \u0026\u0026 is_p(inpt)) {\n                m[inpt]=1;\n                r++;\n            }\n        }\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);//12419\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cmap\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int k,int \u0026r) \n{ \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(!m[inpt] \u0026\u0026 inpt\u003c=r_l \u0026\u0026 inpt\u003e=l_l) \n        {\n            if(is_p(inpt)) {\n                m[inpt]=1;\n                r++;\n            }\n        }\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);//12419\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cmap\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23 };\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i = 0; i \u003c 9; ++i) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nmap\u003clong long,bool\u003e m;\nvoid f(long long s,int k,int \u0026r) \n{ \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003c=r_l \u0026\u0026 inpt\u003e=l_l) \n        {\n            if(!m[inpt] \u0026\u0026 is_p(inpt)) {\n                m[inpt]=1;\n                r++;\n            }\n        }\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);//12419\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int b[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (;*a!=0; a++) {\n        __int128 x=*a;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;i++)\n        f(0,i,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int b[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (;*a!=0; a++) {\n        __int128 x=*a;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l);i\u003c=(int)log10(r_l)+1;)\n        f(0,++i,count);\n    cout \u003c\u003c count;\n}\n","score":0.72,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003c=r_l \u0026\u0026 s\u003e=l_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int len,int L,int\u0026 r) \n{ \n    for(int i=0;i\u003c(int)pow(len,L);i++){\n        int n=i;\n        long long s=0;\n        for (int j = 0; j \u003c L; j++) { \n            s+=b[n % len]*pow(10,j); \n            n /= len; \n        } \n        if(s\u003er_l) return;\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n        {\n            if(is_p(s)) r++;\n        }\n    }\n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;//count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(4,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.27,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int len,int L,int\u0026 r) \n{ \n    for(int i=0;i\u003c(int)pow(len,L);i++){\n        int n=i;\n        long long s=0;\n        for (int j = 0; j \u003c L; j++) { \n            s+=(long long)b[n % len]*(long long)pow(10,j); \n            n /= len; \n        } \n        if(s\u003er_l) return;\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n        {\n            if(is_p(s)) r++;\n        }\n    }\n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;//count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(4,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.27,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int L,int\u0026 r) \n{ \n    for(int i=0;i\u003c(int)pow(4,L);i++){\n        int n=i;bool c=0;\n        long long s=0;\n        for (int j = 0; j \u003c L \u0026\u0026 !c; j++) { \n            if(j==0 \u0026\u0026 (n%4==1 || n%4==0))\n            {\n                c=1;\n            }\n            s+=(long long)b[n % 4]*(long long)pow(10,j); \n            n /= 4; \n        } \n        if(c) continue;\n        cout \u003c\u003c s \u003c\u003c endl;\n        if(s\u003er_l) return;\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n        {\n            if(is_p(s)) r++;\n        }\n    }\n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int L,int\u0026 r) \n{ \n    for(int i=0;i\u003c(int)pow(4,L);i++){\n        int n=i;bool c=0;\n        long long s=0;\n        for (int j = 0; j \u003c L \u0026\u0026 !c; j++) { \n            if(j==0 \u0026\u0026 (n%4==1 || n%4==0))\n            {\n                c=1;\n            }\n            s+=(long long)b[n % 4]*(long long)pow(10,j); \n            n /= 4; \n        } \n        if(c) continue;\n        if(s\u003er_l) return;\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n        {\n            if(is_p(s)) r++;\n        }\n    }\n} \nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.305,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.75,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    /*int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;*/\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    /*int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;*/\n    if(n%2==0) return 0;\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.82,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.82,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        srand(i);\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.75,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-5)+3;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.82,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n/2-2)+3;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.82,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    //for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) return 1;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    //}\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    __int128 x=rand()%(n-4)+2;\n    power(x, t, n);\n    if (x == 1) return 1;\n    bool p = 0;\n    for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n        if (x == n - 1) p = 1;\n        power(x, 2, n);\n    }\n    if (!p) return 0;\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.805,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    __int128 x=rand()%(n-4)+2;\n    power(x, t, n);\n    if (x == 1) return 1;\n    bool p = 0;\n    for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n        if (x == n - 1) p = 1;\n        power(x, 2, n);\n    }\n    if (!p) return 0;\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.805,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    __int128 x=rand()%(n-4)+2;\n    power(x, t, n);\n    if (x == 1) return 1;\n    bool p = 0;\n    for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n        if (x == n - 1) p = 1;\n        power(x, 2, n);\n    }\n    if (!p) return 0;\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(7);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.775,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l) \n        {\n            if(s%6==1 || s%6==5)\n                if(s\u003c=r_l)\n                    if(is_p(s)) {\n                        r++;\n                        if(r%100==0 || r\u003e500) cout \u003c\u003c r \u003c\u003c endl;\n                    }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=3)+(l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.03,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l) \n        {\n            if((s%6==1 || s%6==5 ) \u0026\u0026 s!=3)\n                if(s\u003c=r_l)\n                    if(is_p(s)) {\n                        r++;\n                        if(r%100==0 || r\u003e500) cout \u003c\u003c r \u003c\u003c endl;\n                    }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=3)+(l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.03,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003cregex\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-5)+3;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(long long i=l_l;i\u003c=r_l;i++)\n    {\n        string s=to_string(i);smatch e;regex r(\"[146890]\");\n        if(i%10==2 || i%10==5) continue;\n        if(regex_search(s,e,r)) continue;\n        if(is_p(i)) count++;\n    }\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\nn=int(input())\nfor i in range(n):\n    s=input().split()\n    a=int(s[0])\n    b=int(s[1])\n    print(power(a,b))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n):\n    r=0\n    if(len(n)\u003c100):\n        return int(n)%mod\n    r+=int(n[0:99])%mod*power(10,len(n)-100)\n    return (r%mod+num_mod(n[100:])%mod)%mod\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0])\n    print(power(a,int(s[1])))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\npas=1000\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n):\n    r=0\n    if(len(n)\u003cpas):\n        return int(n)%mod\n    r+=int(n[0:pas])%mod*power(10,len(n)-100)\n    return (r%mod+num_mod(n[pas+1:])%mod)%mod\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0])\n    print(power(a,int(s[1])))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint pas=15;\nint m=1000000007;\nlong long power_mod(long long a,long long b)\n{\n    __int128 t=1;\n    while(b)\n    {\n        if(b%2){\n            t=(t*a%m)%m;\n        }\n        a=(a%m*a%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\nlong long stolong(string n)\n{\n    long long r=0;\n    for(int i=0;i\u003cn.size();i++)\n    {\n        r*=10;r+=n[i]-'0';\n    }\n    return r;\n}\nlong long Mod(string a) {\n    long long n=stolong(a.substr(0,pas));\n    if(a.size()\u003cpas) return n%m;\n    n=n%m*power_mod(10,a.size()-pas);\n    return (n%m+Mod(a.substr(pas+1)))%m;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string a,b;\n        cin \u003e\u003e a \u003e\u003e b;\n        long long r=power_mod(Mod(a),stolong(b));;\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.357142857143,"language":"cpp14"},{"contest":"Master","challenge":"Power of large numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint pas=30;\nint m=1000000007;\n__int128 power_mod(__int128 a,__int128 b)\n{\n    __int128 t=1;\n    while(b)\n    {\n        if(b%2){\n            t=(t*a%m)%m;\n        }\n        a=(a%m*a%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\n__int128 stolong(string n)\n{\n    __int128 r=0;\n    for(int i=0;i\u003cn.size();i++)\n    {\n        r*=10;r+=n[i]-'0';\n    }\n    return r;\n}\n__int128 Mod(string a) {\n    if(a.size()\u003cpas) {\n        __int128 n=stolong(a);\n        return n%m;\n        }\n    __int128 n=stolong(a.substr(0,pas));\n    n=n%m*power_mod(10,a.size()-pas);\n    return (n%m+Mod(a.substr(pas)))%m;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string a,b;\n        cin \u003e\u003e a \u003e\u003e b;\n        long long r=power_mod(Mod(a),stolong(b));;\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.571428571429,"language":"cpp14"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\npas=1000\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n,m):\n    r=0\n    if(len(n)\u003cpas):\n        return int(n)%m\n    r+=int(n[0:pas])%m*power(10,len(n)-pas)\n    return (r%m+num_mod(n[pas+1:])%m)%m\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0],mod)\n    b=num_mod(s[1],mod-1)\n    print(power(a,b))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\npas=1000\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n,m):\n    r=0\n    if(len(n)\u003cpas):\n        return int(n)%m\n    r+=int(n[0:pas])%m*power(10,len(n)+1-pas)\n    return (r%m+num_mod(n[pas+1:])%m)%m\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0],mod)\n    b=num_mod(s[1],mod-1)\n    print(power(a,b))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\npas=37\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n,m):\n    r=0\n    if(len(n)\u003cpas):\n        return int(n)%m\n    r+=int(n[0:pas])%m*power(10,len(n)+1-pas)\n    return (r%m+num_mod(n[pas+1:])%m)%m\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0],mod)\n    b=num_mod(s[1],mod-1)\n    print(power(a,b))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint pas=23;\nlong long mod=1000000007;\n__int128 power_mod(__int128 a,__int128 b)\n{\n    __int128 t=1;\n    while(b)\n    {\n        if(b%2){\n            t=(t*a%mod)%mod;\n        }\n        a=(a%mod*a%mod)%mod;\n        b\u003e\u003e=1;\n    }\n    return t%mod;\n}\n__int128 sto_int128(string n)\n{\n    __int128 r=0;\n    for(int i=0;i\u003cn.size();i++)\n    {\n        r*=10;r+=n[i]-'0';\n    }\n    return r;\n}\n__int128 Mod(string a,__int128 m) {\n    if(a.size()\u003cpas) {\n        __int128 n=sto_int128(a);\n        return n%m;\n        }\n    __int128 n=sto_int128(a.substr(0,pas));\n    n=n%m*power_mod(10,a.size()-pas);\n    return (n%m+Mod(a.substr(pas),m))%m;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string a,b;\n        cin \u003e\u003e a \u003e\u003e b;\n        long long r=power_mod(Mod(a,mod),Mod(b,mod-1));\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.571428571429,"language":"cpp14"},{"contest":"Master","challenge":"Power of large numbers","code":"mod=10**9+7\npas=37\ndef power(a,b):\n    t=1\n    while b:\n        if(b%2==1):\n            t=(t*a%mod)%mod\n        a=(a%mod*a%mod)%mod\n        b\u003e\u003e=1\n    return t%mod\ndef num_mod(n,m):\n    r=0\n    if(len(n)\u003cpas):\n        return int(n)%m\n    r+=int(n[:pas])%m*power(10,len(n)-pas)\n    return (r%m+num_mod(n[pas:],m))%m\nt=int(input())\nfor i in range(t):\n    s=input().split()\n    a=num_mod(s[0],mod)\n    b=num_mod(s[1],mod-1)\n    print(power(a,b))\n\n\n","score":0.571428571429,"language":"python3"},{"contest":"Master","challenge":"Power of large numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint pas=10;\nlong long mod=1000000007;\n__int128 power_mod(__int128 a,__int128 b,long long m)\n{\n    __int128 t=1;\n    while(b)\n    {\n        if(b%2){\n            t=(t*a%m)%m;\n        }\n        a=(a%m*a%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\n__int128 sto_int128(string n)\n{\n    __int128 r=0;\n    for(int i=0;i\u003cn.size();i++)\n    {\n        r*=10;r+=n[i]-'0';\n    }\n    return r;\n}\n__int128 parse_Mod(string s,__int128 m) {\n    if(s.size()\u003c=pas) {\n        __int128 n=sto_int128(s);\n        return n%m;\n    }\n    __int128 n=sto_int128(s.substr(0,pas));\n    n=n%m*power_mod(10,s.size()-pas,m);\n    return (n%m+parse_Mod(s.substr(pas),m))%m;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string a,b;\n        cin \u003e\u003e a \u003e\u003e b;\n        long long r=power_mod(parse_Mod(a,mod),parse_Mod(b,mod-1),mod);\n        cout\u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.714285714286,"language":"cpp14"},{"contest":"Master","challenge":"Power of large numbers","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nint pas=37;\nlong long mod=1000000007;\n__int128 power_mod(__int128 a,__int128 b,long long m)\n{\n    __int128 t=1;\n    while(b)\n    {\n        if(b%2){\n            t=(t*a%m)%m;\n        }\n        a=(a%m*a%m)%m;\n        b\u003e\u003e=1;\n    }\n    return t%m;\n}\n__int128 sto_int128(string n)\n{\n    __int128 r=0;\n    for(int i=0;i\u003cn.size();i++)\n    {\n        r*=10;r+=n[i]-'0';\n    }\n    return r;\n}\n__int128 parse_Mod(string s,__int128 m) {\n    if(s.size()\u003c=pas) {\n        __int128 n=sto_int128(s);\n        return n%m;\n    }\n    __int128 n=sto_int128(s.substr(0,pas));\n    n=n%m*power_mod(10,s.size()-pas,m);\n    return (n%m+parse_Mod(s.substr(pas),m))%m;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    while(n--)\n    {\n        string a,b;\n        cin \u003e\u003e a \u003e\u003e b;\n        long long r=power_mod(parse_Mod(a,mod),parse_Mod(b,mod-1),mod);\n        cout\u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Salary Blues","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint abs(int x){\n    return x\u003e0?x:-x;\n}\nint main()\n{\n    int N,Q;cin \u003e\u003e N \u003e\u003e Q;\n    vector\u003cint\u003e v;\n    while(N--) {\n        int a;cin \u003e\u003ea;\n        v.push_back(a);\n    }\n    sort(v.begin(),v.end());\n    while(Q--){ \n        int k;cin \u003e\u003e k;int m=INT_MAX;\n        for(int i=0;i\u003cv.size()-1;i++){\n            m=min(m,abs(v[i+1]==v[i]?INT_MAX:v[i+1]-v[i]));\n        }\n        cout \u003c\u003c m \u003c\u003c endl;\n    }\n\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Salary Blues","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int N,Q;cin \u003e\u003e N \u003e\u003e Q;\n    vector\u003clong long\u003e v;\n    while(N--) {\n        int a;cin \u003e\u003ea;\n        v.push_back(a);\n    }\n    sort(v.begin(),v.end());\n    while(Q--){ \n        long long k;cin \u003e\u003e k;long long m=INT_MAX;\n        for(int i=0;i\u003cv.size()-1;i++){\n            if(v[i+1]==v[i]) continue;\n            m=min(m,v[i+1]-v[i]);\n        }\n        cout \u003c\u003c m \u003c\u003c endl;\n    }\n\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=[int(i) for i in input().split()]\nfor _ in range(int(s[1])):\n    k=int(input())\n    for i in range(len(e)):\n        e[i]+=k\n    print(Great_Gcd(e))\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=[int(i) for i in input().split()]\nfor _ in range(int(s[1])):\n    k=int(input())\n    print(math.gcd(Great_Gcd(e),k))\n\n    \n\n\n","score":0.125,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    print(math.gcd(e,k))\n\n    \n\n\n","score":0.875,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if(r==1):\n        print(r+k)\n    else:\n        print(math.gcd(e,k))\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    print(math.gcd(e,k))\n\n    \n\n\n","score":0.875,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if(r==1):\n        print(r+k)\n    else:\n        print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if r==1:\n        print(e+k)\n    else:\n        print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=[int(i) for i in input().split()]\nfor _ in range(int(s[1])):\n    k=int(input())\n    for i in range(len(e)):\n        e[i]+=k\n    e=Great_Gcd(e)\n    print(e)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=[int(i) for i in input().split()]\nfor _ in range(int(s[1])):\n    k=int(input())\n    for i in range(len(e)):\n        e[i]+=k\n    r=Great_Gcd(e)\n    print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if k==0:\n        print(e)\n    elif r!=1:\n        print(e*(k//2))\n    else :\n        print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if k==0:\n        print(e)\n    elif r!=1:\n        print(e*(k//e))\n    else :\n        print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e,k)\n    if k==0:\n        print(e)\n    elif r!=1:\n        print(e*(k//e))\n    else :\n        print(r)\n\n    \n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=m[0]\n    for i in m:\n        g=math.gcd(i,g)\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    r=math.gcd(e+k,e)\n    print(r)\n\n    \n\n\n","score":0.875,"language":"python3"},{"contest":"Master","challenge":"Salary Blues","code":"import math\ndef Great_Gcd(m):\n    g=[m[0],True]\n    temp=m[0]\n    for i in m:\n        if g[1] and temp!=i:\n            g[1]=False\n        g[0]=math.gcd(i,g[0])\n    return g\ns=input().split()\ne=Great_Gcd([int(i) for i in input().split()])\nfor _ in range(int(s[1])):\n    k=int(input())\n    if e[1] :\n        print(e[0]+k)\n    else:\n        print(math.gcd(e[0],k))\n\n    \n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;\n    for(int i=2;i\u003clim;i++)\n    {\n        if(p[i]){\n            primes.push_back(i);\n            for(int j=i*2;j\u003clim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(t==1) return 1;long big=1;\n    for(int i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==t) return t+1;\n    return 1+big*ls(t/big);\n}\n\nint main()\n{\n    gener();\n    int t;cin \u003e\u003e t;long m=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v){\n        m+=ls(n);\n    }\n    cout \u003c\u003c m;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;\n    for(int i=2;i\u003clim;i++)\n    {\n        if(p[i]){\n            primes.push_back(i);\n            for(int j=i*2;j\u003clim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nmap\u003clong,long\u003e m;\nlong ls(long t) {\n    if(t==1) return 1;long big=1;\n    if(m[t]) return m[t];\n    for(int i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==t) {\n        m[t]=t+1;\n        return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    gener();\n    int t;cin \u003e\u003e t;long m=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        m+=ls(n);\n    }\n    cout \u003c\u003c m;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000002)\n{\n    p[0]=p[1]=false;m[1]=1;\n    for(int i=2;i\u003clim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003clim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(m[t]) return m[t];\n    long big=1;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    gener();\n    int t;cin \u003e\u003e t;long m=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        m+=ls(n);\n    }\n    cout \u003c\u003c m;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    for(int i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(m[t]) return m[t];\n    long big=1;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long l=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    for(int i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(m[t]) return m[t];\n    long big=-11;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long l=0;vector\u003clong\u003e v;\n    while(t--)\n    {//17116054729754\n        long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long)1000000);\n    for(int i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(m[t]) return m[t];\n    long big=-11;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003c=sqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long l=0;vector\u003clong\u003e v;\n    while(t--)\n    {//17116054729754\n        long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long)1000000);\n    for(int i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(m[t]) return m[t];\n    long big=-11;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long l=0;vector\u003clong\u003e v;\n    while(t--)\n    {//17116054729754\n        long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-11;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            cout \u003c\u003c i \u003c\u003c endl;\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    long long r=0;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            big=primes[i];\n            r=max(r,primes[i]*ls(t/primes[i]));\n        }\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;\n    for(int i=2;i\u003clim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003clim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nmap\u003clong,long\u003e m;\nlong ls(long t) {\n    if(t==1) return 1;long big=1;\n    if(m[t]) return m[t];\n    for(int i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==t) {\n        m[t]=t+1;\n        return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    gener();\n    int t;cin \u003e\u003e t;long m=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        m+=ls(n);\n    }\n    cout \u003c\u003c m;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000002,true);vector\u003clong\u003e primes;\nmap\u003clong,long\u003e m;\nvoid gener(long lim=1000000)\n{\n    p[0]=p[1]=false;\n    for(int i=2;i\u003clim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(int j=i*2;j\u003clim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong ls(long t) {\n    if(t==1) return 1;long big=1;\n    if(m[t]) return m[t];\n    for(int i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) big=primes[i];\n    }\n    if(big==t) {\n        m[t]=t+1;\n        return m[t];\n    }\n    m[t]=1+big*ls(t/big);\n    return m[t];\n}\n\nint main()\n{\n    gener();\n    int t;cin \u003e\u003e t;long m=0;vector\u003clong\u003e v;\n    while(t--)\n    {\n        int n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        m+=ls(n);\n    }\n    cout \u003c\u003c m;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    long long r=0;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            big=primes[i];\n            long long temp=max(primes[i]*ls(t/primes[i]),t/primes[i]*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    if(big==-1){\n        m[t]=t+1;return m[t];\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.133333333333,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    long long r=0;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            big=primes[i];\n            long long temp=max(primes[i]*ls(t/primes[i]),t/primes[i]*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.133333333333,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long big=-1;\n    long long r=0;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            big=primes[i];\n            long long temp=max(primes[i]*ls(t/primes[i]),(t/primes[i])*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.133333333333,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=0;\n    for(int i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) {\n            long long temp=max(primes[i]*ls(t/primes[i]),(t/primes[i])*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener(l);l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=0;\n    for(int i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            long long temp=max(primes[i]*ls(t/primes[i]),(t/primes[i])*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener();l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.133333333333,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=0;\n    for(long long i=0;i\u003cprimes.size() \u0026\u0026 primes[i]\u003csqrt(t)+1;i++) \n    {\n        if(t%primes[i]==0) {\n            long long temp=max(primes[i]*ls(t/primes[i]),(t/primes[i])*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener();l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.133333333333,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvector\u003cbool\u003e p(1000001,true);vector\u003clong long\u003e primes;\nmap\u003clong long,long long\u003e m;\nvoid gener(long long lim=1000000)\n{\n    p[0]=p[1]=false;m[1]=1;\n    lim=min(lim,(long long)1000000);\n    for(long long i=2;i\u003c=lim;i++)\n    {\n        if(p[i]){\n            m[i]=i+1;\n            primes.push_back(i);\n            for(long long j=i*2;j\u003c=lim;j+=i)\n            {\n                if(p[j]) p[j]=false;\n            }\n        }\n    }\n}\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=0;\n    for(long long i=0;i\u003cprimes.size();i++) \n    {\n        if(t%primes[i]==0) {\n            long long temp=max(primes[i]*ls(t/primes[i]),(t/primes[i])*ls(primes[i]));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);l=max(l,n);\n    }\n    gener();l=0;\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nlong long ls(long long t) {\n    if(t==1) return 1;\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);i++)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    return 1+r;\n}\n\nint main()\n{\n    \n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.2,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);i++)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);int p=1;\n    for(long long i=2;i\u003c=sqrt(t);i+=p)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n        p=i\u003e=3?2:1;\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);i++)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);++i)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;vector\u003clong long\u003e v;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;v.push_back(n);\n    }\n    for(auto n:v)\n    { \n        l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);++i)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);++i)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;ls(1000000000000);\n    int t;cin \u003e\u003e t;long long l=0;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Breaking Sticks","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long long\u003e m;\nlong long ls(long long t) {\n    if(m[t]) return m[t];\n    long long r=t*ls(1);\n    for(long long i=2;i\u003c=sqrt(t);++i)\n    {\n        if(t%i==0){\n            long long temp=max((t/i)*ls(i),i*ls(t/i));\n            r=max(r,temp);\n        }\n    }\n    m[t]=1+r;\n    return m[t];\n}\n\nint main()\n{\n    m[1]=1;\n    int t;cin \u003e\u003e t;long long l=0;\n    while(t--)\n    {//17116054729754\n        long long n;cin \u003e\u003e n;l+=ls(n);\n    }\n    cout \u003c\u003c l;\n}\n","score":0.4,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint b[]={4,0};\nint count_4(int n){\n    if(n\u003c=9) return n==4;\n    return (n%10==4)+count_4((int)n/10);\n}\nvoid f(int x) {\n    for(int i=1,r=0;;i++,r=0)\n    {\n        for(int j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);int count = count_4(r);\n            if(r%x==0) {\n                cout \u003c\u003c count+i \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;\n       f(x);\n   }\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long\u003e m;\nlong count_4(long long n){\n    if(m[n]) return m[n];\n    cout \u003c\u003c n \u003c\u003c endl;\n    if(n\u003c=9) {\n        m[n]=(n==4);\n        return m[n];\n    }\n    m[n]=(n%10==4)+count_4((long long)n/10);\n    return m[n];\n}\nvoid f(int x) {\n    for(long long i=1,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);long count = count_4(r);\n            if(r%x==0) {\n                //cout \u003c\u003c count+i \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;\n       f(x);\n   }\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long\u003e m;\nlong count_4(long long n){\n    if(m[n]) return m[n];\n    if(n\u003c=9) {\n        m[n]=(n==4);\n        return m[n];\n    }\n    m[n]=(n%10==4)+count_4((long long)n/10);\n    return m[n];\n}\nvoid f(int x) {\n    for(long long i=1,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);long count = count_4(r);\n            if(r%x==0) {\n                cout \u003c\u003c count+i \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;\n       f(x);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nmap\u003clong long,long\u003e m;\nlong count_4(long long n){\n    if(m[n]) return m[n];\n    if(n\u003c=9) {\n        m[n]=(n==4);\n        return m[n];\n    }\n    m[n]=(n%10==4)+count_4((long long)n/10);\n    return m[n];\n}\nvoid f(int x) {\n    for(long long i=1,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);long count = j+1;\n            if(r%x==0) {\n                cout \u003c\u003c count+i \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;\n       f(x);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid f(int x) {\n    for(long long i=1,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);\n            if(r%x==0) {\n                cout \u003c\u003c j+i+1 \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;\n       f(x);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid f(int x,int c) {\n    for(long long i=1*c,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);\n            if(r%x==0) {\n                cout \u003c\u003c j+i+1 \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid f(int x,int c) {\n    for(long long i=c+1,r=0;;i++,r=0)\n    {\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);\n            if(r%x==0) {\n                cout \u003c\u003c j+i+1 \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid f(int x,int c) {\n    for(int i=c+1;;i++)\n    {\n        __int128 r=0;\n        for(long long j=0;j\u003ci;j++)\n        {\n            r+=4*pow(10,i-j-1);\n            if(r%x==0) {\n                cout \u003c\u003c j+i+1 \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.066666666667,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nvoid printf(__int128 i,string s=\"\\n\")\n{\n    while(i)\n    {\n        int mod=i%10;\n        cout \u003c\u003c mod;\n        i/=10;\n    }\n    cout \u003c\u003c s \u003c\u003cendl;\n}\nlong pow(int p,int m,int b=10)\n{\n    long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    for(int i=c+1;;i++)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;j++)\n        {\n            r=(r+(4%x*(long long)pow(i-j-1,x))%x)%x;\n            if(r==0) {\n                cout \u003c\u003c j+i+1 \u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    for(int i=c;;i++)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;j++)\n        {\n            r=(r%x+((4%x)*powr(i-j-2,x))%x)%x;\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    for(int i=c;;++i)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;++j)\n        {\n            r=(r%x+((4%x)*powr(i-j-2,x))%x)%x;\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    map\u003clong,long\u003e m;\n    for(int i=c;;++i)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci;++j)\n        {\n            if(m[i-j-2]) {\n                r=(r%x+m[i-j-2])%x;\n            }\n            else\n            {\n                m[i-j-2]=((4%x)*powr(i-j-2,x))%x;\n                r=(r%x+m[i-j-2])%x;\n            }\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    map\u003cint,long\u003e m_r; \n    for(int i=c;;++i)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;++j)\n        {\n            if(m_r[i-j-2])\n                r=(r%x+m_r[i-j-2])%x;\n            else{ \n                m_r[i-j-2]=((4%x)*powr(i-j-2,x))%x;\n                r=(r%x+m_r[i-j-2])%x;\n            }\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n       int x;cin \u003e\u003e x;int count=log10(x);\n       f(x,count);\n   }\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Welcome to Java!","code":"public class Solution {\n\n    public static void main(String[] args) {\n        String[] s={\"World\",\"Java\"};\n        for(int i=0;i\u003c2;i++)\n            System.out.println(\"Hello, \"+s[i]+\".\");\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Stack","code":"import java.util.*;\nclass Solution{\n\tpublic static void main(String []argh)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (sc.hasNext()) {\n\t\t\tString input=sc.next();\n            char[] c={'{','(','[','}',')',']'};\n            int[] v={0,0,0};\n            for(int i=0;i\u003cinput.length();i++)\n            {\n                for(int j=0;j\u003c3;j++)\n                    if(input.charAt(i)==c[j])\n                        v[j%3]++;\n                for(int j=3;j\u003c6;j++)\n                    if(input.charAt(i)==c[j])\n                        v[j%3]--;\n            } \n            boolean b=true;\n            for(int i=0;i\u003c3 \u0026\u0026 b;i++)\n                if(v[i]!=0)\n                {\n                    b=false;\n                }\n            if(b) System.out.println(\"true\");\n            else System.out.println(\"false\");\n\t\t}\n\t\t\n\t}\n}\n\n\n\n","score":0.5,"language":"java8"},{"contest":"Master","challenge":"Java Stack","code":"import java.util.*;\nclass Solution{\n\tpublic static void main(String []argh)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (sc.hasNext()) {\n\t\t\tString input=sc.next();\n            char[] c={'{','(','[','}',')',']'};\n            int[] v={0,0,0};boolean b=true;\n            for(int i=0;i\u003cinput.length() \u0026\u0026 b;i++)\n            {\n                for(int j=0;j\u003c3;j++)\n                    if(input.charAt(i)==c[j])\n                        v[j%3]++;\n                for(int j=3;j\u003c6;j++)\n                    if(input.charAt(i)==c[j]){\n                            if(v[j%3]==0){\n                                b=false;\n                            }\n                            v[j%3]--;\n                        }\n            } \n            for(int i=0;i\u003c3 \u0026\u0026 b;i++)\n                if(v[i]!=0)\n                {\n                    b=false;\n                }\n            if(b) System.out.println(\"true\");\n            else System.out.println(\"false\");\n\t\t}\n\t\t\n\t}\n}\n\n\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":" Java Stdin and Stdout I","code":"import java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n=3;\n        while(n\u003e0){\n            int a=scan.nextInt();\n            System.out.println(a);\n            n--;\n        }\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c,int c2) {\n    map\u003cint,long\u003e m_r; int base=(c2!=0?4/(2*c2):4);\n    for(int i=c;;++i)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;++j)\n        {\n            if(m_r[i-j-2])\n                r=(r%x+m_r[i-j-2])%x;\n            else{ \n                m_r[i-j-2]=((base%x)*powr(i-j-2,x))%x;\n                r=(r%x+m_r[i-j-2])%x;\n            }\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n        int x;cin \u003e\u003e x;int c2=0;\n        while(x%2==0 \u0026\u0026 c2\u003c2){\n            x\u003e\u003e=1;c2++;\n        }\n        int count=log10(x);\n        f(x,count,c2);\n   }\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Easy math","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong powr(int p,int m,int b=10)\n{\n    long long t=1;\n    while(p)\n    {\n        if(p\u00261){\n            t=(t%m*b%m)%m;\n        }\n        b=(b*b)%m;\n        p\u003e\u003e=1;\n    }\n    return t%m;\n}\nvoid f(int x,int c) {\n    map\u003cint,long\u003e m_r; \n    for(int i=c;;++i)\n    {\n        long long r=0;\n        for(long long j=0;j\u003ci-1;++j)\n        {\n            if(m_r[i-j-2])\n                r=(r%x+m_r[i-j-2])%x;\n            else{ \n                m_r[i-j-2]=((4%x)*powr(i-j-2,x))%x;\n                r=(r%x+m_r[i-j-2])%x;\n            }\n            if(r==0) {\n                cout \u003c\u003c j+i\u003c\u003c endl;\n                return;\n            }\n        }\n    }\n}\n\nint main()\n{\n   int t;cin \u003e\u003e t;int r=0;\n   while(t--){\n        int x;cin \u003e\u003e x;\n        int count=log10(x);\n        f(x,count);\n   }\n}\n","score":0.333333333333,"language":"cpp14"},{"contest":"Master","challenge":"Java If-Else","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int N = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        String[] s={\"Not Weird\",\"Weird\"};\n        System.out.println(s[N%2]);\n        scanner.close();\n    }\n}\n","score":0.666666666667,"language":"java"},{"contest":"Master","challenge":"Java If-Else","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        String[] s={\"Not Weird\",\"Weird\"};\n        if(n%2==1 || (!(n%2==0 \u0026\u0026 n\u003c=2 \u0026\u0026 n\u003e=5 || n\u003e20))) {\n            System.out.println(s[1]);\n        }\n        else{\n            System.out.println(s[0]);\n        }\n        scanner.close();\n    }\n}\n","score":0.833333333333,"language":"java"},{"contest":"Master","challenge":"Java If-Else","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        String[] s={\"Not Weird\",\"Weird\"};\n        if(n%2==1 || (n%2==0 \u0026\u0026 n\u003c=20 \u0026\u0026 n\u003e=6)) {\n            System.out.println(s[1]);\n        }\n        else{\n            System.out.println(s[0]);\n        }\n        scanner.close();\n    }\n}\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Stdin and Stdout II","code":"import java.util.Scanner;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int i = scan.nextInt();\n        double d=scan.nextDouble();\n        scan.nextLine();\n        String s =scan.nextLine();\n        System.out.println(\"String: \" + s);\n        System.out.println(\"Double: \" + d);\n        System.out.println(\"Int: \" + i);\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Output Formatting","code":"import java.util.Scanner;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n            Scanner sc=new Scanner(System.in);\n            System.out.println(\"================================\");\n            for(int i=0;i\u003c3;i++)\n            {\n                String s1=sc.next();\n                int x=sc.nextInt();\n                System.out.printf(\"%-15s\",s1);\n                System.out.printf(\"%03d\\n\",x);\n            }\n            System.out.println(\"================================\");\n\n    }\n}\n\n\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":" Java Stdin and Stdout I","code":"import java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner streamreader = new Scanner(System.in);int n=0;\n        while(n\u003c3){\n        int a = streamreader.nextInt();\n        System.out.println(a);\n        n++;\n        }\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":" Java Stdin and Stdout I","code":"import java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner streamreader = new Scanner(System.in);int n=0;\n        while(n\u003c3){\n        int a = streamreader.nextInt();\n        System.out.println(a);\n        n++;\n        }\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Loops I","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        scanner.skip(\"(\\r\\n|[\\n\\r\\u2028\\u2029\\u0085])?\");\n        for(int i=1;i\u003c=10;i++){\n            int r=i*n;\n            System.out.printf(\"%d x %d = %d%n\",n,i,n*i);\n        }\n        scanner.close();\n    }\n}\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Loops II","code":"import java.util.*;\nimport java.io.*;\n\nclass Solution{\n    public static void main(String []argh){\n        Scanner in = new Scanner(System.in);\n        int t=in.nextInt();\n        for(int i=0;i\u003ct;i++){\n            int a = in.nextInt();\n            int b = in.nextInt();\n            int n = in.nextInt();\n            int r = a;\n            while(n\u003e0){\n                r+=b;\n                System.out.printf(\"%d \",r);\n                b\u003c\u003c=1;n--;\n            }\n            System.out.println();\n        }\n        in.close();\n    }\n}\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Primality Test","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n    public static BigInteger power(BigInteger a,BigInteger b,BigInteger m){\n        BigInteger t=BigInteger.valueOf(1);\n        while(b\u003e0)\n        {\n            if(b%BigInteger.valueOf(2)==1){\n                t*=a%m;\n            }\n            a=((a%m)*(a%m))%m;\n            b/=BigInteger.valueOf(2);\n        }\n        return t%m;\n    }\n    public static boolean is_p(BigInteger n){\n        BigInteger d=n-BigInteger.valueOf(1);\n        Random rand=new Random();\n        int r=0;\n        while(d%BigInteger.valueOf(2)==0){\n            d/=BigInteger.valueOf(2);r++;\n        }\n        int k=3;\n        while(k\u003e=0){\n            BigInteger a=rand(n-BigInteger.valueOf(4))+BigInteger.valueOf(2);\n            long x=power(a,d,n);\n            if(x==BigInteger.valueOf(1) || x==n-BigInteger.valueOf(1)) continue;\n            boolean b=true;\n            while(r\u003e0 \u0026\u0026 b){\n                x=power(x,BigInteger.valueOf(2),n);\n                if(x==n-1) b=false;\n                r--;\n            }\n            if(b) continue;\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n        BigInteger n = scanner.nextBigInteger();\n        if(is_p(n)) System.out.println(\"prime\");\n        else\n            System.out.println(\"not prime\");\n        scanner.close();\n    }\n}\n","score":0.0,"language":"java8"},{"contest":"Master","challenge":"Java Primality Test","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n    public static void main(String[] args) {\n        string n = scanner.nextLine();\n        BigInteger biiig = new BigInteger(n);\n        if(biiig.isProbablePrime(7)) System.out.println(\"prime\");\n        else\n            System.out.println(\"not prime\");\n        scanner.close();\n    }\n}\n","score":0.0,"language":"java8"},{"contest":"Master","challenge":"Java Primality Test","code":"import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n\n    private static final Scanner scanner = new Scanner(System.in);\n    public static void main(String[] args) {\n        String n = scanner.nextLine();\n        BigInteger biiig = new BigInteger(n);\n        if(biiig.isProbablePrime(7)) System.out.println(\"prime\");\n        else\n            System.out.println(\"not prime\");\n        scanner.close();\n    }\n}\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Simple Array Sum","code":"import java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    /*\n     * Complete the simpleArraySum function below.\n     */\n    static int simpleArraySum(int[] ar) {\n        for(int i=1;i\u003car.length;i++)\n        ar[0]+=ar[i];\n        return ar[0];\n    }\n\n    private static final Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) throws IOException {\n        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv(\"OUTPUT_PATH\")));\n\n        int arCount = Integer.parseInt(scanner.nextLine().trim());\n\n        int[] ar = new int[arCount];\n\n        String[] arItems = scanner.nextLine().split(\" \");\n\n        for (int arItr = 0; arItr \u003c arCount; arItr++) {\n            int arItem = Integer.parseInt(arItems[arItr].trim());\n            ar[arItr] = arItem;\n        }\n\n        int result = simpleArraySum(ar);\n\n        bufferedWriter.write(String.valueOf(result));\n        bufferedWriter.newLine();\n\n        bufferedWriter.close();\n    }\n}\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java String Reverse","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static boolean is_p(String s,int i,int j){\n        if(i==j) return true;\n        if(s.charAt(i)==s.charAt(j)){\n            return is_p(s,i+1,j-1);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n        \n        Scanner sc=new Scanner(System.in);\n        String A=sc.next();\n        if(is_p(A,0,A.length()-1)) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n        \n    }\n}\n\n\n\n","score":0.75,"language":"java"},{"contest":"Master","challenge":"Java String Reverse","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static boolean is_p(String s,int i,int j){\n        if(s.length()%2==1 \u0026\u0026 i==j) return true;\n        if(s.length()%2==0 \u0026\u0026 i==j+1 \u0026\u0026 s.charAt(i)==s.charAt(j)) return true;\n        if(s.charAt(i)==s.charAt(j)){\n            return is_p(s,i+1,j-1);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n        \n        Scanner sc=new Scanner(System.in);\n        String A=sc.next();\n        if(is_p(A,0,A.length()-1)) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n        \n    }\n}\n\n\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java String Reverse","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static boolean is_p(String s,int i,int j){\n        if((s.length()%2==1 \u0026\u0026 i==j) || (s.length()%2==0 \u0026\u0026 i==j+1 \u0026\u0026 s.charAt(i)==s.charAt(j))) return true;\n        if(s.charAt(i)==s.charAt(j)){\n            return is_p(s,i+1,j-1);\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n        \n        Scanner sc=new Scanner(System.in);\n        String A=sc.next();\n        if(is_p(A,0,A.length()-1)) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n        \n    }\n}\n\n\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Anagrams","code":"\n\n    static boolean isAnagram(String a, String b) {\n        a=a.toLowerCase();b=b.toLowerCase();\n        int[] bool= new int[26];\n        for(int i=0;i\u003c26;i++)\n            bool[i]=0;\n        for(int i=0;i\u003ca.length();i++)\n            bool[a.charAt(i)-97]++;\n        for(int i=0;i\u003cb.length();i++)\n            if(bool[b.charAt(i)-97]==0)\n                return false;\n            else\n                bool[b.charAt(i)-97]--;\n        return true;\n    }\n\n","score":0.875,"language":"java8"},{"contest":"Master","challenge":"Java Anagrams","code":"\n\n    static boolean isAnagram(String a, String b) {\n        a=a.toLowerCase();b=b.toLowerCase();\n        int[] bool= new int[26];\n        String s1,s2;\n        s1=a.length()\u003cb.length()?b:a;s2=a.length()\u003cb.length()?a:b;\n        for(int i=0;i\u003c26;i++)\n            bool[i]=0;\n        for(int i=0;i\u003cs1.length();i++)\n            bool[a.charAt(i)-97]++;\n        for(int i=0;i\u003cs2.length();i++)\n            if(bool[b.charAt(i)-97]==0)\n                return false;\n            else\n                bool[b.charAt(i)-97]--;\n        return true;\n    }\n\n","score":0.5625,"language":"java8"},{"contest":"Master","challenge":"Java Anagrams","code":"\n\n    static boolean isAnagram(String a, String b) {\n        a=a.toLowerCase();b=b.toLowerCase();\n        int[] bool= new int[26];\n        for(int i=0;i\u003c26;i++)\n            bool[i]=0;\n        for(int i=0;i\u003ca.length();i++)\n            bool[a.charAt(i)-97]++;\n        for(int i=0;i\u003cb.length();i++)\n            if(bool[b.charAt(i)-97]==0)\n                return false;\n            else\n                bool[b.charAt(i)-97]--;\n        for(int i:bool)\n            if(i\u003e0) return false;\n        return true;\n    }\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Int to String","code":"\n   String s;int k;\n   if(n\u003c0){\n       k=(int)Math.log10(-n);s=\"-\";n*=-1;\n   }\n   else{\n       k=(int)Math.log10(n);s=\"\";\n   }\n   while(k\u003e=0)\n   {\n       int r=n/(int)Math.pow(10,k);\n       s+=(char)(r+'0');\n       n-=r*(int)Math.pow(10,k);\n       k--;\n   }\n","score":0.0,"language":"java"},{"contest":"Master","challenge":"Java Int to String","code":"\n   String s=Integer.toString(n);\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Possible Path","code":"for _ in range(int(input())):   \n    s=input().split()\n    a=int(s[0])\n    b=int(s[1])\n    i=int(s[2])\n    j=int(s[3])\n    if((i-a)%b==0 and (j-b)%a==0):\n        print(\"YES\")\n    else :\n        print(\"NO\")\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Possible Path","code":"import math\nfor _ in range(int(input())):   \n    s=input().split()\n    if(math.gcd(int(s[2]),int(s[3]))%math.gcd(int(s[1]),int(s[0]))==0):\n        print(\"YES\")\n    else :\n        print(\"NO\")\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Possible Path","code":"import math\nfor _ in range(int(input())):   \n    s=input().split()\n    if(math.gcd(int(s[2]),int(s[3]))==math.gcd(int(s[1]),int(s[0]))):\n        print(\"YES\")\n    else :\n        print(\"NO\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Java Substring","code":"import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String S = in.next();\n        int start = in.nextInt();\n        int end = in.nextInt();\n        for(int i=start;i\u003cend;i++)\n        {\n            System.out.printf(\"%c\",S.charAt(i));\n        }\n    }\n}\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Security - Message Space and Ciphertext Space","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin\u003e\u003en;\n    int r=(int)log10(n)+1;\n    while(r--){\n        int k=n/(int)pow(10,r);cout \u003c\u003c (k+1)%10;\n        n-=k*(int)pow(10,r);\n    }\n    return 0;\n}\n","score":0.666666666667,"language":"cpp14"},{"contest":"Master","challenge":"Security - Message Space and Ciphertext Space","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    string n;cin\u003e\u003en;\n    for(int i=0;i\u003cn.size();i++){\n        cout \u003c\u003c (char)((n[i]-'0'+1)%10+'0');\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Security Key Spaces","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    string n;cin\u003e\u003en;\n    int e;cin \u003e\u003e e;\n    for(int i=0;i\u003cn.size();i++){\n        cout \u003c\u003c (char)((n[i]-'0'+e)%10+'0');\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Security Encryption Scheme","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nlong fact(int n)\n{\n    if(n\u003c=0) return 1;\n    return n*fact(n-1);\n}\nint main() {\n    int n;cin \u003e\u003e n;\n    cout \u003c\u003c fact(n); \n    return 0;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Basic Cryptanalysis","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cmap\u003e\nusing namespace std;\n//j,q,x\n\nint main() {\n    map\u003cchar,char\u003e m;\n    {\n        m['l']='s';m['h']='k';m['s']='r';m['f']='a';m['y']='n';m['d']='b';\n        m['z']='m';m['j']='o';m['o']='l';m['t']='i';m['p']='u';m['g']='c';\n        m['r']='d';m['e']='e';m['v']='h';m['q']='g';m['m']='p';m['c']='t';\n        m['a']='w';m['b']='z';m['w']='f';m['n']='v';m['x']='y';\n                m['i']='j';m['k']='q';m['u']='x';m[' ']=' ';\n    }\n    char* inpt;\n    inpt=(char*)malloc(170000*sizeof(char));\n    scanf(\"%[^\\n]\",inpt);\n    for(int i=0;i\u003c170000;i++)\n    {\n        cout \u003c\u003c m[inpt[i]];\n    }\n    return 0;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Absolute Permutation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long t;cin \u003e\u003e t;\n    while(t--){\n        long n,k;cin \u003e\u003e n \u003e\u003e k;\n        for(long i=1,l=0;i\u003c=n;i++)\n        {\n            if(k!=0 \u0026\u0026 (n/k)%2){\n                cout \u003c\u003c -1 ;\n                break;\n            }\n            cout \u003c\u003c i+(long)pow(-1,l)*k \u003c\u003c \" \";\n            if(k!=0 \u0026\u0026 i%k==0) l++;\n        }\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.45,"language":"cpp14"},{"contest":"Master","challenge":"Absolute Permutation","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long t;cin \u003e\u003e t;\n    while(t--){\n        long n,k;cin \u003e\u003e n \u003e\u003e k;\n        for(long i=1,l=0;i\u003c=n;i++)\n        {\n            if(k!=0 \u0026\u0026 (n%k!=0 || (n/k)%2)){\n                cout \u003c\u003c -1 ;\n                break;\n            }\n            cout \u003c\u003c i+(long)pow(-1,l)*k \u003c\u003c \" \";\n            if(k!=0 \u0026\u0026 i%k==0) l++;\n        }\n        cout \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Absolute Permutation","code":"for _ in range(int(input())):\n    s=input().split()\n    n=int(s[0])\n    k=int(s[1])\n    l=0\n    for i in range(1,n+1):\n        if(k!=0 and (n%k!=0 or (n/k)%2!=0)):\n            print(-1,end='')\n            break\n        print(i+((-1)**l)*k,end=' ')\n        if(k!=0 and i%k==0):\n            l+=1\n    print()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Correctness and the Loop Invariant","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cassert.h\u003e\n\nvoid insertionSort(int N, int arr[]) {\n    int i,j;\n    int value;\n    for(i=1;i\u003cN;i++)\n    {\n        value=arr[i];\n        j=i-1;\n        while(j\u003e=0 \u0026\u0026 value\u003carr[j])\n        {\n            arr[j+1]=arr[j];\n            j=j-1;\n        }\n        arr[j+1]=value;\n    }\n    for(j=0;j\u003cN;j++)\n    {\n        printf(\"%d\",arr[j]);\n        printf(\" \");\n    }\n}\nint main(void) {\n\n    int N;\n    scanf(\"%d\", \u0026N);\n    int arr[N], i;\n    for(i = 0; i \u003c N; i++) {\n        scanf(\"%d\", \u0026arr[i]);\n    }\n\n    insertionSort(N, arr);\n\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Organizing Containers of Balls","code":" #include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int n;cin \u003e\u003e n;\n        vector\u003cint\u003e ver(n,0);vector\u003cint\u003e hor(n,0);\n        for(int i=0;i\u003cn;i++){\n            for(int j=0;j\u003cn;j++){\n                int a;cin \u003e\u003e a;\n                ver[i]+=a;hor[j]+=a;\n            }\n        }\n        bool valid=true;\n        for(int i=0;i\u003cn \u0026\u0026 valid;i++){\n            if(hor[i]!=ver[i]) valid=!valid;\n        }\n        if(valid) cout \u003c\u003c \"Possible\\n\";\n        else cout \u003c\u003c \"Impossible\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Organizing Containers of Balls","code":" #include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int n;cin \u003e\u003e n;\n        vector\u003cint\u003e ver(n,0);vector\u003cint\u003e hor(n,0);\n        for(int i=0;i\u003cn;i++){\n            for(int j=0;j\u003cn;j++){\n                int a;cin \u003e\u003e a;\n                ver[i]+=a;hor[j]+=a;\n            }\n        }\n        sort(hor.begin(),hor.end());sort(ver.begin(),ver.end());\n        bool valid=true;\n        for(int i=0;i\u003cn \u0026\u0026 valid;i++){\n            if(hor[i]!=ver[i]) valid=!valid;\n        }\n        if(valid) cout \u003c\u003c \"Possible\\n\";\n        else cout \u003c\u003c \"Impossible\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Bot saves princess","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nclass point{\n   public:\n    int x;\n    int y;\n};\nvoid displayPathtoPrincess(int n, vector \u003cstring\u003e grid){\n    point loc_p,loc_m;\n    for(int i=0;i\u003cn;i++)\n        for(int j=0;j\u003cn;j++){\n            if(grid[i][j]=='p'){\n                loc_p.x=j;loc_p.y=i;\n            }\n            if(grid[i][j]=='m'){\n                loc_m.x=j;loc_m.y=i;\n            }\n        }\n    int ver=loc_m.x-loc_p.x;\n    int hor=loc_m.y-loc_p.y;\n    int h_l,v_l;v_l=ver\u003e0?ver:-ver;h_l=hor\u003e0?hor:-hor;\n    for(int i=0;i\u003ch_l;i++) \n        if(hor\u003c0) cout \u003c\u003c \"DOWN\\n\";\n        else\n            cout \u003c\u003c \"UP\\n\";\n    for(int i=0;i\u003cv_l;i++) \n        if(hor\u003c0) cout \u003c\u003c \"LEFT\\n\";\n        else\n            cout \u003c\u003c \"RIGHT\\n\";\n}\n\nint main(void) {\n\n    int m;\n    vector \u003cstring\u003e grid;\n\n    cin \u003e\u003e m;\n\n    for(int i=0; i\u003cm; i++) {\n        string s; cin \u003e\u003e s;\n        grid.push_back(s);\n    }\n\n    displayPathtoPrincess(m,grid);\n\n    return 0;\n}","score":2.1,"language":"cpp"},{"contest":"Master","challenge":"Bot saves princess","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nclass point{\n   public:\n    int x;\n    int y;\n};\nvoid displayPathtoPrincess(int n, vector \u003cstring\u003e grid){\n    point loc_p,loc_m;\n    for(int i=0;i\u003cn;i++)\n        for(int j=0;j\u003cn;j++){\n            if(grid[i][j]=='p'){\n                loc_p.x=j;loc_p.y=i;\n            }\n            if(grid[i][j]=='m'){\n                loc_m.x=j;loc_m.y=i;\n            }\n        }\n    int ver=loc_m.x-loc_p.x;\n    int hor=loc_m.y-loc_p.y;\n    int h_l,v_l;v_l=ver\u003e0?ver:-ver;h_l=hor\u003e0?hor:-hor;\n    for(int i=0;i\u003ch_l+v_l;i+=2){\n        if(hor\u003c0) cout \u003c\u003c \"DOWN\\n\";\n        else if(hor\u003e0)\n            cout \u003c\u003c \"UP\\n\";\n        if(ver\u003c0) cout \u003c\u003c \"LEFT\\n\";\n        else if (ver\u003e0)\n            cout \u003c\u003c \"RIGHT\\n\";  \n    }\n}\n\nint main(void) {\n\n    int m;\n    vector \u003cstring\u003e grid;\n\n    cin \u003e\u003e m;\n\n    for(int i=0; i\u003cm; i++) {\n        string s; cin \u003e\u003e s;\n        grid.push_back(s);\n    }\n\n    displayPathtoPrincess(m,grid);\n\n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Bot saves princess","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nclass point{\n   public:\n    int x;\n    int y;\n};\nvoid displayPathtoPrincess(int n, vector \u003cstring\u003e grid){\n    point loc_p,loc_m;\n    for(int i=0;i\u003cn;i++)\n        for(int j=0;j\u003cn;j++){\n            if(grid[i][j]=='p'){\n                loc_p.x=j;loc_p.y=i;\n            }\n            if(grid[i][j]=='m'){\n                loc_m.x=j;loc_m.y=i;\n            }\n        }\n    int ver=loc_m.x-loc_p.x;\n    int hor=loc_m.y-loc_p.y;\n    int h_l,v_l;v_l=ver\u003e0?ver:-ver;h_l=hor\u003e0?hor:-hor;\n    for(;h_l\u003e=0 \u0026\u0026 v_l\u003e=0;){\n        if(hor\u003c0){\n            cout \u003c\u003c \"DOWN\\n\";\n            h_l--;\n        }\n        else if(hor\u003e0){\n            cout \u003c\u003c \"UP\\n\";\n            h_l--;\n        }\n        if(ver\u003c0){\n            cout \u003c\u003c \"LEFT\\n\";\n            h_l--;\n        }\n        else if(ver){\n            cout \u003c\u003c \"RIGHT\\n\";\n            h_l--;\n        }\n    }\n}\n\nint main(void) {\n\n    int m;\n    vector \u003cstring\u003e grid;\n\n    cin \u003e\u003e m;\n\n    for(int i=0; i\u003cm; i++) {\n        string s; cin \u003e\u003e s;\n        grid.push_back(s);\n    }\n\n    displayPathtoPrincess(m,grid);\n\n    return 0;\n}","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Bot saves princess","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nclass point{\n   public:\n    int x;\n    int y;\n};\nvoid displayPathtoPrincess(int n, vector \u003cstring\u003e grid){\n    point loc_p,loc_m;\n    for(int i=0;i\u003cn;i++)\n        for(int j=0;j\u003cn;j++){\n            if(grid[i][j]=='p'){\n                loc_p.x=j;loc_p.y=i;\n            }\n            if(grid[i][j]=='m'){\n                loc_m.x=j;loc_m.y=i;\n            }\n        }\n    int ver=loc_m.x-loc_p.x;\n    int hor=loc_m.y-loc_p.y;\n    int h_l,v_l;v_l=ver\u003e0?ver:-ver;h_l=hor\u003e0?hor:-hor;\n    for(;v_l\u003e0 || h_l\u003e0;){\n        if(v_l--){\n            if(ver\u003e0) cout \u003c\u003c \"LEFT\\n\";\n            else if(ver\u003c0) cout \u003c\u003c \"RIGHT\\n\";\n        }\n        if(h_l--){\n            if(hor\u003c0) cout \u003c\u003c \"DOWN\\n\";\n            else if(hor\u003e0) cout \u003c\u003c \"UP\\n\";\n        }\n    }\n}\n\nint main(void) {\n\n    int m;\n    vector \u003cstring\u003e grid;\n\n    cin \u003e\u003e m;\n\n    for(int i=0; i\u003cm; i++) {\n        string s; cin \u003e\u003e s;\n        grid.push_back(s);\n    }\n\n    displayPathtoPrincess(m,grid);\n\n    return 0;\n}","score":13.9,"language":"cpp"},{"contest":"Master","challenge":"Bot saves princess - 2","code":"#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nclass point{\n   public:\n    int x;\n    int y;\n};\nvoid nextMove(int n, int r, int c, vector \u003cstring\u003e grid){\n    point loc_p,loc_m;\n    for(int i=0;i\u003cn;i++)\n        for(int j=0;j\u003cn;j++){\n            if(grid[i][j]=='p'){\n                loc_p.x=j;loc_p.y=i;\n                break;\n            }\n        }\n    loc_m.x=c;loc_m.y=r;\n    int ver=loc_m.x-loc_p.x;\n    int hor=loc_m.y-loc_p.y;\n    int h_l,v_l;v_l=ver\u003e0?ver:-ver;h_l=hor\u003e0?hor:-hor;\n    for(;v_l\u003e0 || h_l\u003e0;){\n        if(v_l--){\n            if(ver\u003e0) cout \u003c\u003c \"LEFT\\n\";\n            else if(ver\u003c0) cout \u003c\u003c \"RIGHT\\n\";\n            return;\n        }\n        if(h_l--){\n            if(hor\u003c0) cout \u003c\u003c \"DOWN\\n\";\n            else if(hor\u003e0) cout \u003c\u003c \"UP\\n\";\n            return;\n        }\n    }\n}\n\nint main(void) {\n\n    int n, r, c;\n    vector \u003cstring\u003e grid;\n\n    cin \u003e\u003e n;\n    cin \u003e\u003e r;\n    cin \u003e\u003e c;\n\n    for(int i=0; i\u003cn; i++) {\n        string s; cin \u003e\u003e s;\n        grid.push_back(s);\n    }\n\n    nextMove(n, r, c, grid);\n    return 0;\n}","score":17.5,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    int required=0;\n    map\u003cint,int\u003e m;\n    for(int i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    int l=k-required;\n    for(int i=0;i\u003cl;i++){\n        if(true){//!m[i]){\n            if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n                s[i]=s[n-1-i]='9';k-=2;\n                if(m[i]) m[i]=-1;\n            }\n            else if(s[i]=='9'){\n                s[n-1-i]='9';k--;\n                if(m[i]) m[i]=-1;\n            }\n            else if(s[n-1-i]=='9'){\n                s[i]='9';k--;\n                if(m[i]) m[i]=-1;\n            }\n        }\n    }\n    for(map\u003cint,int\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1){\n        for(;n--;)\n            cout \u003c\u003c '9';\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.766666666667,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    if(k\u003e=n || n==1 || (n%2 \u0026\u0026 k==n-1)){\n        for(long i=0;i\u003cn;i++){\n            if(n%2 \u0026\u0026 i==n/2)\n                cout \u003c\u003c s[i];\n            else cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    long required=0;\n    map\u003clong,long\u003e m;\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;i+=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;i++;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;i++;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end() \u0026\u0026 k\u003e=0;j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.5,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1 || (n%2 \u0026\u0026 k==n-1)){\n        for(long i=0;i\u003cn;i++){\n            if(n%2 \u0026\u0026 i==n/2)\n                cout \u003c\u003c s[i];\n            else cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.533333333333,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1 || (n%2 \u0026\u0026 k==n-1)){\n        for(long i=0;i\u003cn;i++){\n            if(n%2 \u0026\u0026 i==(n+1)/2 -1 )\n                cout \u003c\u003c s[i];\n            else cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.533333333333,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1 || (n%2 \u0026\u0026 k==n-1)){\n        for(long i=0;i\u003cn;i++){\n            if(n%2 \u0026\u0026 i==(n+1)/2 -1 \u0026\u0026 n!=1)\n                cout \u003c\u003c s[i];\n            else cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.566666666667,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1 || (n\u00261 \u0026\u0026 k==n-1)){\n        for(;n-- \u0026\u0026 (n%2==0 || n==1);)\n            cout \u003c\u003c '9';\n        for(long i=0;i\u003cn \u0026\u0026 n%2==0;i++)\n            if(i==n/2) cout \u003c\u003c s[i];\n            else cout \u003c\u003c '9';\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.366666666667,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1){\n        for(;n--;)\n            cout \u003c\u003c '9';\n        return 0;\n    }\n    if(n%2==1 \u0026\u0026 k==n-1){\n        for(int i=0;i\u003cn;i++){\n            if(i==n/2) \n                cout \u003c\u003c s[i];\n            else \n                cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1){\n        for(;n--;)\n            cout \u003c\u003c '9';\n        return 0;\n    }\n    if(n%2==1 \u0026\u0026 k==n-1){\n        for(int i=0;i\u003cn;i++){\n            if(i==n/2) \n                cout \u003c\u003c s[i];\n            else \n                cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;cout \u003c\u003c l \u003c\u003c endl;\n    for(long i=0;i\u003c=n/2 \u0026\u0026 l\u003e0;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9' \u0026\u0026 l\u003e=2){\n            s[i]=s[n-1-i]='9';l-=2;k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';l--;k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';l--;k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(n%2==1 \u0026\u0026 i==n/2 \u0026\u0026 s[i]!='9'){\n            s[i]='9';l--;k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end() \u0026\u0026 k\u003e0;j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.666666666667,"language":"cpp"},{"contest":"Master","challenge":"Highest Value Palindrome","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    long n,k;cin \u003e\u003e n \u003e\u003e k;\n    string s; cin \u003e\u003e s;\n    long required=0;\n    map\u003clong,long\u003e m;\n    if(k\u003e=n || n==1){\n        for(;n--;)\n            cout \u003c\u003c '9';\n        return 0;\n    }\n    if(n%2==1 \u0026\u0026 k==n-1){\n        for(int i=0;i\u003cn;i++){\n            if(i==n/2) \n                cout \u003c\u003c s[i];\n            else \n                cout \u003c\u003c '9';\n        }\n        return 0;\n    }\n    for(long i=0;i\u003c(n+1)/2;i++){\n        if(s[i]!=s[n-1-i]) {\n            required++;\n            m[i]=n-1-i;\n        }\n    }\n    if(k\u003crequired) {\n        cout \u003c\u003c \"-1\";\n        return 0;\n    }\n    long l=k-required;\n    for(long i=0;i\u003cl;i++){\n        if(s[i]!='9' \u0026\u0026 s[n-1-i]!='9'){\n            s[i]=s[n-1-i]='9';k-=2;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[i]=='9'){\n            s[n-1-i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n        else if(s[n-1-i]=='9'){\n            s[i]='9';k--;\n            if(m[i]) m[i]=-1;\n        }\n    }\n    for(map\u003clong,long\u003e::iterator j=m.begin();j!=m.end();j++,k--){\n        if(j-\u003esecond==-1) continue;\n        if(s[j-\u003efirst]\u003es[j-\u003esecond]) s[j-\u003esecond]=s[j-\u003efirst];\n        else s[j-\u003efirst]=s[j-\u003esecond];\n    }\n    cout \u003c\u003c s \u003c\u003c endl;\n}\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Anagram","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the anagram function below.\nint anagram(string s) {\n    if(s.size()\u00261) return -1;\n    int c=0;map\u003cchar,int\u003e m;\n    for(int i=0;i\u003cs.size()/2;i++){\n        m[s[i]]++;m[s[s.size()/2 + i]]--;\n    }\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(i-\u003esecond!=0) c+=i-\u003esecond\u003e0?i-\u003esecond:-i-\u003esecond;\n    }\n    return c/2;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        string s;cin \u003e\u003e s;\n        cout \u003c\u003c anagram(s) \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Making Anagrams","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint makingAnagrams(string s1, string s2) {\n    map\u003cchar,int\u003e m;int c=0;\n    for(auto i:s1) m[i]++;\n    for(auto i:s2) m[i]--;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(i-\u003esecond!=0) c+=i-\u003esecond\u003e0?i-\u003esecond:-i-\u003esecond;\n    }\n    return c;\n}\n\nint main()\n{\n    string a,b;cin \u003e\u003e a \u003e\u003e b;\n    cout \u003c\u003c makingAnagrams(a,b);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Game of Thrones - I","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the gameOfThrones function below.\nstring got(string s) {\n    map\u003cchar,int\u003e m;\n    for(auto i:s) m[i]++;\n    bool odd=0,l_odd=0;\n    l_odd=s.size()%2==0?0:1;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(i-\u003esecond%2==1 \u0026\u0026 l_odd) {\n            if(odd) return \"NO\";\n            if(!odd) odd=true;\n        }\n    }\n    return \"YES\";\n}\n\nint main()\n{\n    string s;cin \u003e\u003e s;\n    cout \u003c\u003c got(s);\n}\n","score":0.444444444444,"language":"cpp"},{"contest":"Master","challenge":"Game of Thrones - I","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the gameOfThrones function below.\nstring got(string s) {\n    map\u003cchar,int\u003e m;\n    for(auto i:s) m[i]++;\n    bool valid=1,odd=0,l_odd=0;\n    l_odd=s.size()%2==0?0:1;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(l_odd) {\n            if(i-\u003esecond%2){\n                if(odd){\n                    valid=0;\n                    break;\n                }\n                if(!odd) odd=true;\n            }\n        }\n        if(!l_odd) {\n            if(i-\u003esecond%2)\n            {\n                valid=0;\n                break;\n            }\n        }\n    }\n    return valid?\"YES\":\"NO\";\n}\n\nint main()\n{\n    string s;cin \u003e\u003e s;\n    cout \u003c\u003c got(s);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    s=[i.capitalize() for i in s.split()]\n    return ' '.join(s)\n\n","score":0.2,"language":"pypy"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    s=[i.capitalize() for i in s.split()]\n    return ' '.join(s)\n\n","score":0.2,"language":"pypy"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    result=\"\"\n    for i in range(0,len(s)):\n        if(i==0):\n            result+=s[i].capitalize()\n            continue\n        if(s[i-1]==' '):\n            result+=s[i].capitalize()\n            continue;\n        result+=s[i]\n    return result\n\n","score":1.0,"language":"pypy"},{"contest":"Master","challenge":"Printing Pattern using Loops","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() \n{\n\n    int n;\n    scanf(\"%d\", \u0026n);\n    int iter=1;\n  \tfor(int i=0;;){\n        int layer=0;\n        for(int j=0;j\u003cn*2-1;j++){\n            printf(\"%d \",n-layer); \n            if(j\u003ci) layer++;\n            if(2*n-3-layer\u003cj) layer--;\n        }\n        printf(\"\\n\");\n        if(iter) i++;\n        else i--;\n        if(i==n-1 \u0026\u0026 iter)iter--;\n        if(i==-1 \u0026\u0026 !iter) break;\n    }\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Small Triangles, Large Triangles","code":"\ndouble getvol(triangle tr){\n    double p=tr.a + tr.b + tr.c;p=sqrt(p*(p-tr.a)*(p-tr.b)*(p-tr.a));\n    return p;\n}\nvoid swap(triangle* t1,triangle* t2){\n    triangle temp= *t1;*t1=*t2;*t2=temp;\n}\nvoid sort_by_area(triangle* tr, int n) {\n\tfor(int i=0;i\u003cn-1;i++){\n       int min_loc=i; \n       int j;\n       for(j=i+1;j\u003cn;j++){\n           if(getvol(tr[i])\u003egetvol(tr[j])) {\n               min_loc=j;\n           }\n       }\n       if(i!=min_loc) swap(tr+i,tr+min_loc);\n    }\n}\n\n","score":0.0,"language":"c"},{"contest":"Master","challenge":"Small Triangles, Large Triangles","code":"\ndouble getvol(triangle tr){\n    double p=(tr.a + tr.b + tr.c)/2;p=p*(p-tr.a)*(p-tr.b)*(p-tr.c);\n    return p;\n}\nvoid swap(triangle* t1,triangle* t2){\n    triangle temp= *t1;*t1=*t2;*t2=temp;\n}\nvoid sort_by_area(triangle* tr, int n) {\n\tfor(int i=0;i\u003cn-1;i++){\n       int min_loc=i; \n       int j;\n       for(j=i;j\u003cn;j++){\n           if(getvol(tr[min_loc])\u003e=getvol(tr[j])) {\n               min_loc=j;\n           }\n       }\n       swap(tr+i,tr+min_loc);\n    }\n}\n\n","score":0.1,"language":"c"},{"contest":"Master","challenge":"Small Triangles, Large Triangles","code":"\ndouble getvol(triangle tr){\n    double p=(tr.a + tr.b + tr.c)/2;p=p*(p-tr.a)*(p-tr.b)*(p-tr.c);\n    return p;\n}\nvoid swap(triangle* t1,triangle* t2){\n    triangle temp= *t1;*t1=*t2;*t2=temp;\n}\nvoid sort_by_area(triangle* tr, int n) {\n\tfor(int i=0;i\u003cn-1;i++){\n       int min_loc=i; \n       int j;\n       for(j=i+1;j\u003cn;j++){\n           if(getvol(tr[min_loc])\u003e=getvol(tr[j])) {\n               min_loc=j;\n           }\n       }\n       swap(tr+i,tr+min_loc);\n    }\n}\n\n","score":0.1,"language":"c"},{"contest":"Master","challenge":"Small Triangles, Large Triangles","code":"\ndouble getvol(triangle t) {\n  double p = (t.a + t.b + t.c) / 2.0;\n  return sqrt(p * (p - t.a) * (p - t.b) * (p - t.c));\n}\nvoid swap(triangle* t1,triangle* t2){\n    triangle temp= *t1;*t1=*t2;*t2=temp;\n}\nvoid sort_by_area(triangle* tr, int n) {\n\tfor(int i=0;i\u003cn-1;i++){\n       int min_loc=i; \n       int j;\n       for(j=i+1;j\u003cn;j++){\n           if(getvol(tr[min_loc])\u003e=getvol(tr[j])) {\n               min_loc=j;\n           }\n       }\n       swap(tr+i,tr+min_loc);\n    }\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 0: Hello, World!","code":"\n\n/**\n*   A line of code that prints \"Hello, World!\" on a new line is provided in the editor. \n*   Write a second line of code that prints the contents of 'parameterVariable' on a new line.\n*\n*\tParameter:\n*   parameterVariable - A string of text.\n**/\nfunction greeting(parameterVariable) {\n    // This line prints 'Hello, World!' to the console:\n    console.log('Hello, World!');console.log(parameterVariable);\n\n    // Write a line of code that prints parameterVariable to stdout using console.log:\n    \n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Cloudy Day ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e pop;map\u003cint,int\u003e city;\n    for(int i=0;i\u003cn;i++){\n        int p;cin \u003e\u003e p;\n        pop.push_back(p);\n    }\n    for(int i=0;i\u003cn;i++){\n        int c;cin \u003e\u003e c;\n        city[c]=pop[i];\n    }\n    int m;cin \u003e\u003e m;\n    map\u003cint,int\u003e cover;vector\u003cint\u003e cloud;\n    for(int i=0;i\u003cm;i++){\n        int c;cin \u003e\u003e c;\n        cloud.push_back(c);\n    }\n    int mx=0;\n    for(int i=0;i\u003cm;i++){\n        int r;cin \u003e\u003e r;int cov=0;\n        for(map\u003cint,int\u003e::iterator j=city.begin();j!=city.end();j++){\n            if(j-\u003efirst\u003c=cloud[i]+r || j-\u003efirst\u003e=cloud[i]-r){\n                cover[cloud[i]]+=j-\u003esecond;mx=max(mx,cover[cloud[i]]);\n            }\n                \n        }\n    }\n    cout \u003c\u003c mx \u003c\u003c endl;\n}\n","score":0.02,"language":"cpp14"},{"contest":"Master","challenge":"Cloudy Day ","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e pop;map\u003cint,int\u003e city;\n    for(int i=0;i\u003cn;i++){\n        int p;cin \u003e\u003e p;\n        pop.push_back(p);\n    }\n    for(int i=0;i\u003cn;i++){\n        int c;cin \u003e\u003e c;\n        city[c]=pop[i];\n    }\n    int m;cin \u003e\u003e m;\n    map\u003cint,int\u003e cover;vector\u003cint\u003e cloud;\n    for(int i=0;i\u003cm;i++){\n        int c;cin \u003e\u003e c;\n        cloud.push_back(c);\n    }\n    int mx=0;\n    for(int i=0;i\u003cm;i++){\n        int r;cin \u003e\u003e r;int cov=0;\n        for(map\u003cint,int\u003e::iterator j=city.begin();j!=city.end();j++){\n            if(j-\u003efirst\u003c=cloud[i]+r || j-\u003efirst\u003e=cloud[i]-r){\n                cover[cloud[i]]+=j-\u003esecond;\n            }   \n        }\n    }\n    for(map\u003cint,int\u003e::iterator j=cover.begin();j!=cover.end();j++){\n        mx=max(mx,j-\u003esecond);\n    } \n    cout \u003c\u003c mx \u003c\u003c endl;\n}\n","score":0.04,"language":"cpp14"},{"contest":"Master","challenge":"3D Surface Area","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint abs(int n){\n    return n\u003e0?n:-n;\n}\nint sa(vector\u003cvector\u003cint\u003e\u003e A,int h,int w) {\n    int s=0;\n    for(int i=0;i\u003ch;i++){\n        s+=A[i][0];\n        for(int j=0;j\u003cw-1;j++){\n            s+=abs(A[i][j]-A[i][j+1]);\n        }\n        s+=A[i][w-1];\n    }\n    for(int i=0;i\u003cw;i++){\n        s+=A[0][i];\n        for(int j=0;j\u003ch-1;j++){\n            s+=abs(A[j][i]-A[j+1][i]);\n        }\n        s+=A[h-1][i];\n    }\n    return s+2*(w*h);\n}\n\nint main()\n{\n    int h,w;cin \u003e\u003e h \u003e\u003e w ;\n    vector\u003cvector\u003cint\u003e\u003e v;\n    for(int i=0;i\u003ch;i++){\n        vector\u003cint\u003e u;\n        for(int j=0;j\u003cw;j++){\n            int o;cin \u003e\u003e o;u.push_back(o);\n        }\n        v.push_back(u);\n    }\n    cout \u003c\u003c sa(v,h,w);\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Simple Array Sum","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n\nint SaS(int ar_count, int* ar) {\n    if(ar_count==0) return 0;\n    return ar[0]+SaS(ar_count-1,ar+1);\n}\n\nint main()\n{\n    int n,m;scanf(\"%d\",\u0026n);m=n;\n    int* a=malloc(n*sizeof(int));\n    while(m--) scanf(\"%d\",a+m);\n    printf(\"%d\",SaS(n,a));\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Simple Array Sum","code":"n=input()\nprint(sum([int(i) for i in input().split()],0))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Simple Array Sum","code":"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nclass Solution {\n    static void Main(string[] args) {\n        int n;Console.ReadLine();n=0;\n        string[] s=Console.ReadLine().Split();\n        foreach(string i in s) n+=Convert.ToInt32(i);\n        Console.Write(n);\n    }\n}\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Cavity Map","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint p[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nint main()\n{\n    int n,m;cin \u003e\u003e n;m=n;\n    vector\u003cstring\u003e v;\n    while(m--){\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    for(int i=1;i\u003cn-1;i++){\n        for(int j=1;j\u003cn-1;j++)\n        {\n            bool c=1;\n            for(int k=0;k\u003c4 \u0026\u0026 c;k++){\n                if(v[i][j]\u003cv[i+p[k][0]][j+p[k][1]]) c=0;;\n            }\n            v[i][j]=c?'X':v[i][j];\n        }\n    }\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n","score":0.333333333333,"language":"cpp"},{"contest":"Master","challenge":"Cavity Map","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint p[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nint main()\n{\n    int n,m;cin \u003e\u003e n;m=n;\n    vector\u003cstring\u003e v;\n    while(m--){\n        string s;cin \u003e\u003e s;\n        v.push_back(s);\n    }\n    for(int i=1;i\u003cn-1;i++){\n        for(int j=1;j\u003cn-1;j++)\n        {\n            bool c=1;\n            for(int k=0;k\u003c4 \u0026\u0026 c;k++){\n                if(v[i][j]\u003c=v[i+p[k][0]][j+p[k][1]]) c=0;;\n            }\n            v[i][j]=c?'X':v[i][j];\n        }\n    }\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Fair Rations","code":"n= int(input())\ncitizens=[int(i)%2 for i in input().split()]\nc_1 = citizens.count(1)\nif c_1%2==1:\n    print(\"NO\")\nelse :\n    loafs = 0\n    last = -1\n    for i in range(len(citizens)):\n        if citizens[i]==1 and last==-1:\n            last=i\n        elif citizens[i]==1 and last!=-1:\n            loaf=2*(i-last)\n            last=-1\n    print(loaf)\n    \n","score":0.4,"language":"python3"},{"contest":"Master","challenge":"Fair Rations","code":"n= int(input())\ncitizens=[int(i)%2 for i in input().split()]\nc_1 = citizens.count(1)\nif c_1%2==1:\n    print(\"NO\")\nelse :\n    loafs = 0\n    last = -1\n    for i in range(len(citizens)):\n        if citizens[i]==1 and last==-1:\n            last=i\n        elif citizens[i]==1 and last!=-1:\n            loafs+=+ 2*(i-last)\n            last=-1\n    print(loafs)\n    \n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Array Reversal","code":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\nvoid swap(int* a,int* b){\n    int c=*a;*a=*b;*b=c;\n}\nint main()\n{\n    int num, *arr, i;\n    scanf(\"%d\", \u0026num);\n    arr = (int*) malloc(num * sizeof(int));\n    for(i = 0; i \u003c num; i++) {\n        scanf(\"%d\", arr + i);\n    }\n    for(int i=0;i\u003cnum/2;i++) swap(arr+i,arr+num-1-i);\n    for(i = 0; i \u003c num; i++)\n        printf(\"%d \", *(arr + i));\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Almost Sorted","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main(){\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n+1);int i=0;\n    v[0]=INT_MIN;\n    while(i++\u003c=n){cin \u003e\u003e v[i];}\n    v.push_back(INT_MAX);\n    vector\u003cint\u003e b(n,0);bool sorted=1;\n    for(int i=0;i\u003c=n \u0026\u0026 sorted;i++) if(v[i+1]\u003cv[i]) sorted=0;\n    if(sorted) {cout \u003c\u003c \"yes\";return 0;}\n    vector\u003cint\u003e q={};\n    vector\u003cvector\u003cint\u003e\u003e seq(n,q);\n    for(int i=0;i\u003c=n;i++){\n        if(v[i+1]\u003cv[i]) q.push_back(v[i+1]);\n        if(v[i+1]\u003ev[i]) {\n            seq[i]=q;\n            q.clear();\n        }\n    }\n    for(auto i:seq) {for(auto j:i) cout \u003c\u003c j \u003c\u003c \" \";cout \u003c\u003c endl;}\n\n\n\n\n\n    /*int s=-1,e=-1;\n    int ups=0,downs=0;bool possible=1;\n    for(int i=0;i\u003c=n \u0026\u0026 possible;i++){\n        if(v[i]\u003ev[i+1] \u0026\u0026 s==-1) {s=i;cout \u003c\u003c i\u003c\u003c endl;}\n        if(s \u0026\u0026 v[i]\u003cv[i+1]) e=(i==n \u0026\u0026 e==-1)?n:i-1;\n        if(s!=-1 \u0026\u0026 i==s+1 \u0026\u0026 v[i]\u003cv[i+1]) downs++;\n        if((i==e+2 || s==-1) \u0026\u0026 v[i]\u003ev[i+1]) ups++;\n    }\n    cout \u003c\u003c ups \u003c\u003c \" \" \u003c\u003c downs \u003c\u003c \" \" \u003c\u003c s  \u003c\u003c \" \" \u003c\u003c e ;*/\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Compare the Triplets","code":"#include \u003cassert.h\u003e\n#include \u003cctype.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstddef.h\u003e\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n\nchar* readline();\nchar* ltrim(char*);\nchar* rtrim(char*);\nchar** split_string(char*);\n\nint* compareTriplets(int a_count, int* a, int b_count, int* b, int* result_count) {\n    *result_count=2;\n    int* r=malloc(*result_count*sizeof(int));\n    r[0]=r[1]=0;\n    for(int i=0;i\u003c3;i++){\n        if(a[i]\u003cb[i]) \n            *(r+1)+=1;\n        else if(a[i]\u003eb[i])\n            *(r+0)+=1;\n    }\n    return r;\n}\n\nint main()\n{\n    FILE* fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n    char** a_temp = split_string(rtrim(readline()));\n\n    int* a = malloc(3 * sizeof(int));\n\n    for (int i = 0; i \u003c 3; i++) {\n        char* a_item_endptr;\n        char* a_item_str = *(a_temp + i);\n        int a_item = strtol(a_item_str, \u0026a_item_endptr, 10);\n\n        if (a_item_endptr == a_item_str || *a_item_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n        *(a + i) = a_item;\n    }\n\n    int a_count = 3;\n\n    char** b_temp = split_string(rtrim(readline()));\n\n    int* b = malloc(3 * sizeof(int));\n\n    for (int i = 0; i \u003c 3; i++) {\n        char* b_item_endptr;\n        char* b_item_str = *(b_temp + i);\n        int b_item = strtol(b_item_str, \u0026b_item_endptr, 10);\n\n        if (b_item_endptr == b_item_str || *b_item_endptr != '\\0') { exit(EXIT_FAILURE); }\n\n        *(b + i) = b_item;\n    }\n\n    int b_count = 3;\n\n    int result_count;\n    int* result = compareTriplets(a_count, a, b_count, b, \u0026result_count);\n\n    for (int i = 0; i \u003c result_count; i++) {\n        fprintf(fptr, \"%d\", *(result + i));\n\n        if (i != result_count - 1) {\n            fprintf(fptr, \" \");\n        }\n    }\n\n    fprintf(fptr, \"\\n\");\n\n    fclose(fptr);\n\n    return 0;\n}\n\nchar* readline() {\n    size_t alloc_length = 1024;\n    size_t data_length = 0;\n    char* data = malloc(alloc_length);\n\n    while (true) {\n        char* cursor = data + data_length;\n        char* line = fgets(cursor, alloc_length - data_length, stdin);\n\n        if (!line) {\n            break;\n        }\n\n        data_length += strlen(cursor);\n\n        if (data_length \u003c alloc_length - 1 || data[data_length - 1] == '\\n') {\n            break;\n        }\n\n        alloc_length \u003c\u003c= 1;\n\n        data = realloc(data, alloc_length);\n\n        if (!data) {\n            data = '\\0';\n\n            break;\n        }\n    }\n\n    if (data[data_length - 1] == '\\n') {\n        data[data_length - 1] = '\\0';\n\n        data = realloc(data, data_length);\n\n        if (!data) {\n            data = '\\0';\n        }\n    } else {\n        data = realloc(data, data_length + 1);\n\n        if (!data) {\n            data = '\\0';\n        } else {\n            data[data_length] = '\\0';\n        }\n    }\n\n    return data;\n}\n\nchar* ltrim(char* str) {\n    if (!str) {\n        return '\\0';\n    }\n\n    if (!*str) {\n        return str;\n    }\n\n    while (*str != '\\0' \u0026\u0026 isspace(*str)) {\n        str++;\n    }\n\n    return str;\n}\n\nchar* rtrim(char* str) {\n    if (!str) {\n        return '\\0';\n    }\n\n    if (!*str) {\n        return str;\n    }\n\n    char* end = str + strlen(str) - 1;\n\n    while (end \u003e= str \u0026\u0026 isspace(*end)) {\n        end--;\n    }\n\n    *(end + 1) = '\\0';\n\n    return str;\n}\n\nchar** split_string(char* str) {\n    char** splits = NULL;\n    char* token = strtok(str, \" \");\n\n    int spaces = 0;\n\n    while (token) {\n        splits = realloc(splits, sizeof(char*) * ++spaces);\n\n        if (!splits) {\n            return splits;\n        }\n\n        splits[spaces - 1] = token;\n\n        token = strtok(NULL, \" \");\n    }\n\n    return splits;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Manasa and Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main(){\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int n[3];for(int i=0;i\u003c3;i++) cin \u003e\u003e n[i];\n        set\u003cint\u003e s;\n        for(int i=0;i\u003c 1\u003c\u003c(n[0]+1);i++){\n            int c=0;\n            if(i==0) c+=(n[0]-1)*n[1];\n            else{\n                for(int j=1;j\u003cn[0];j++){\n                    c+=(i\u00261\u003c\u003cj)?n[1]:n[2];\n                }\n            }\n            s.insert(c);\n        }\n        for(auto i:s) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }  \n}\n","score":0.133333333333,"language":"cpp"},{"contest":"Master","challenge":"Manasa and Stones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main(){\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int n[3];for(int i=0;i\u003c3;i++) cin \u003e\u003e n[i];\n        set\u003cint\u003e s;\n        for(int i=1;i\u003c=n[0];i++){\n            int c=(n[0]-i)*n[1]+(i-1)*n[2];\n            s.insert(c);\n        }\n        for(auto i:s) cout \u003c\u003c i \u003c\u003c \" \";cout \u003c\u003c endl; \n    }  \n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Basics of Sets and Relations #1","code":"5\n\n","score":0.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #1","code":"8\n\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #2","code":"5\n\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #3","code":"1\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #4","code":"42\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #5","code":"2\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #6","code":"2\n\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Basics of Sets and Relations #7","code":"2\n\n","score":1.0,"language":"text"},{"contest":"Master","challenge":"Classes and Objects","code":"\nclass Student{\n    private :\n        int* scores=(int*)malloc(5*sizeof(int));;\n        int total_score=0;\n    public:\n        void input(){\n            for(int i=0;i\u003c5;i++) {\n                cin \u003e\u003e scores[i];total_score+=scores[i];\n            }\n        }\n        int calculateTotalScore(){\n            return total_score;\n        }\n};\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Box It!","code":"\nclass Box{\n    public:\n        int w,h,d;\n        Box(){\n            w=h=d=0;\n        }\n        Box(int a,int b,int c){\n            d=a;w=b;h=c;\n        }\n        Box(Box* b){\n            w=b-\u003ew;h=b-\u003eh;d=b-\u003ed;\n        }\n        int getLength(){\n            return d;\n        }\n        int getBreadth(){\n            return w;\n        }\n        int getHeight(){\n            return h;\n        }\n        int CalculateVolume(){\n            return d*w*h;\n        }\n        friend bool operator\u003c(Box\u0026 b,Box\u0026 a){\n            return (a.d\u003cb.d) || (a.d==b.d \u0026\u0026 a.w\u003cb.w) ||(a.d==b.d \u0026\u0026 a.w==b.w \u0026\u0026 a.h\u003cb.h);\n        }\n        friend ostream\u0026 operator\u003c\u003c(ostream\u0026 out,Box\u0026 b){\n            out \u003c\u003c b.d \u003c\u003c \" \" \u003c\u003c b.w \u003c\u003c \" \" \u003c\u003c b.h;\n            return out;\n        }\n};\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Box It!","code":"\nclass Box{\n    public:\n        int w,h,d;\n        Box(){\n            w=h=d=0;\n        }\n        Box(int a,int b,int c){\n            d=a;w=b;h=c;\n        }\n        Box(Box* b){\n            w=b-\u003ew;h=b-\u003eh;d=b-\u003ed;\n        }\n        int getLength(){\n            return d;\n        }\n        int getBreadth(){\n            return w;\n        }\n        int getHeight(){\n            return h;\n        }\n        int CalculateVolume(){\n            return d*w*h;\n        }\n        friend bool operator\u003c(Box\u0026 a,Box\u0026 b){\n            if((a.d\u003cb.d) || (a.d==b.d \u0026\u0026 a.w\u003cb.w) ||(a.d==b.d \u0026\u0026 a.w==b.w \u0026\u0026 a.h\u003cb.h))\n                return 1;\n            return 0;\n        }\n        friend ostream\u0026 operator\u003c\u003c(ostream\u0026 out,Box\u0026 b){\n            out \u003c\u003c b.d \u003c\u003c \" \" \u003c\u003c b.w \u003c\u003c \" \" \u003c\u003c b.h;\n            return out;\n        }\n};\n","score":0.8,"language":"cpp"},{"contest":"Master","challenge":"Box It!","code":"\nclass Box{\n    public:\n        int w,h,d;\n        Box(){\n            w=h=d=0;\n        }\n        Box(int a,int b,int c){\n            d=a;w=b;h=c;\n        }\n        Box(Box* b){\n            w=b-\u003ew;h=b-\u003eh;d=b-\u003ed;\n        }\n        int getLength(){\n            return d;\n        }\n        int getBreadth(){\n            return w;\n        }\n        int getHeight(){\n            return h;\n        }\n        long long CalculateVolume(){\n            return (long long)d*w*h;\n        }\n        friend bool operator\u003c(Box\u0026 a,Box\u0026 b){\n            if((a.d\u003cb.d) || (a.d==b.d \u0026\u0026 a.w\u003cb.w) ||(a.d==b.d \u0026\u0026 a.w==b.w \u0026\u0026 a.h\u003cb.h))\n                return 1;\n            return 0;\n        }\n        friend ostream\u0026 operator\u003c\u003c(ostream\u0026 out,Box\u0026 b){\n            out \u003c\u003c b.d \u003c\u003c \" \" \u003c\u003c b.w \u003c\u003c \" \" \u003c\u003c b.h;\n            return out;\n        }\n};\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Inherited Code","code":"\nclass BadLengthException{\n    public:\n    int n;\n    BadLengthException(int m){\n        n=m;\n    }\n    int what(){\n        return n;\n    }\n};\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Vector-Sort","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n    while(n--){\n        int a;cin \u003e\u003e a;v.push_back(a);\n    }\n    sort(v.begin(),v.end());\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Deque-STL","code":"#include \u003ciostream\u003e\n#include \u003cdeque\u003e \nusing namespace std;\n\nvoid printKMax(int arr[], int n, int k){\n\tdeque\u003cint\u003e d;\n    for(int i=0;i\u003c=n;){\n        if(d.size()\u003ck) {\n            d.push_back(arr[i]);\n            i++;\n        }\n        else{\n            int m=-1;\n            for(deque\u003cint\u003e::iterator i=d.begin();i!=d.end();i++){\n                m=max(*i,m);\n            }\n            cout \u003c\u003c m \u003c\u003c (i==n?\"\\n\":\" \");\n            d.pop_front();\n        }\n    }\n}\n\nint main(){\n  \n\tint t;\n\tcin \u003e\u003e t;\n\twhile(t\u003e0) {\n\t\tint n,k;\n    \tcin \u003e\u003e n \u003e\u003e k;\n    \tint i;\n    \tint arr[n];\n    \tfor(i=0;i\u003cn;i++)\n      \t\tcin \u003e\u003e arr[i];\n    \tprintKMax(arr, n, k);\n    \tt--;\n  \t}\n  \treturn 0;\n}\n\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Dynamic Array in C","code":"\n\nint main()\n{\n    int total_number_of_shelves;\n    scanf(\"%d\", \u0026total_number_of_shelves);\n    \n    int total_number_of_queries;\n    scanf(\"%d\", \u0026total_number_of_queries);\n    total_number_of_books=(int*)calloc(total_number_of_shelves,sizeof(int));\n    total_number_of_pages=(int**)malloc(sizeof(int*)*total_number_of_shelves);\n    for(int i=0;i\u003ctotal_number_of_shelves;i++) total_number_of_pages[i]=(int*)malloc(sizeof(int));\n    while (total_number_of_queries--) {\n        int type_of_query;\n        scanf(\"%d\", \u0026type_of_query);\n        \n        if (type_of_query == 1) {\n            int x, y;scanf(\"%d %d\", \u0026x, \u0026y);\n            total_number_of_books[x]+=1;\n            total_number_of_pages[x]=realloc(total_number_of_pages[x],(total_number_of_books[x])*sizeof(int));\n            total_number_of_pages[x][total_number_of_books[x]-1]=y;\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Sets-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cset\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    set\u003cint\u003e s;\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int q,x;cin \u003e\u003e q \u003e\u003e x;\n        if(q==1){\n            s.insert(x);\n        }\n        else if(q==2){\n            s.erase(x);\n        }\n        else if(q==3){\n            set\u003cint\u003e::iterator i=s.find(x);\n            if(i==s.end()) cout \u003c\u003c \"No\\n\";\n            else cout \u003c\u003c \"Yes\\n\";\n        }\n    } \n    return 0;\n}\n\n\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"String Validators","code":"n=input()\nb=[0,0,0,0,0]\nfor i in n:\n    if(i.isalnum()):\n        b[0]+=1;\n    if(i.isalpha()):\n        b[1]+=1;\n    if(i.isdigit()):\n        b[2]+=1;\n    if(i.islower()):\n        b[3]+=1;\n    if(i.isupper()):\n        b[4]+=1;\nfor i in range(5):\n    if(b[i]\u003e0) :\n        print(\"True\")\n    else :\n        print(\"False\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Compress the String! ","code":"m={}\nfor i in range(10):\n    m[i]=0\ns=input()\nprev=s[0]\nm[int(prev)]+=1\nfor i in range(1,len(s)):\n    if(s[i]==prev):\n        m[int(s[i])]+=1\n    else :\n        print(\"(\"+str(m[int(s[i-1])])+\", \"+s[i-1]+\")\",end=' ')\n        prev=s[i]\n        m[int(s[i-1])]=0\n        m[int(s[i])]+=1\n    if(i==len(s)-1):\n        print(\"(\"+str(m[int(s[i])])+\", \"+s[i]+\")\",end=' ')\n\n\n","score":0.916666666667,"language":"python3"},{"contest":"Master","challenge":"Compress the String! ","code":"m={}\nfor i in range(10):\n    m[i]=0\ns=input()\nprev=s[0]\nm[int(prev)]+=1\nif(len(s)==1):\n    print(\"(\"+str(m[int(s[0])])+\", \"+s[0]+\")\",end=' ')\nfor i in range(1,len(s)):\n    if(s[i]==prev):\n        m[int(s[i])]+=1\n    else :\n        print(\"(\"+str(m[int(s[i-1])])+\", \"+s[i-1]+\")\",end=' ')\n        prev=s[i]\n        m[int(s[i-1])]=0\n        m[int(s[i])]+=1\n    if(i==len(s)-1):\n        print(\"(\"+str(m[int(s[i])])+\", \"+s[i]+\")\",end=' ')\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;a[i]!='\\n' || b[i]!='\\n';i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(26,sizeof(int));int* p_b=calloc(26,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(b);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c26;i++){\n        c_a+=(p_a[i]==1);c_b+=(p_b[i]==1);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    int i=strlen(a),j=strlen(b);\n    return (i!=j)?i\u003cj:lexicographic_sort(a,b);\n}\nvoid swap(char *str1, char *str2) \n{ \n  char *temp = (char *)malloc((strlen(str1) + 1) * sizeof(char)); \n  strcpy(temp, str1); \n  strcpy(str1, str2); \n  strcpy(str2, temp); \n  free(temp); \n}  \nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min_idx;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min_idx = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min_idx]))\n            min_idx = j;  \n        swap(arr[min_idx], arr[i]);  \n    }  \n}\n","score":0.08,"language":"c"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;a[i]!='\\n' || b[i]!='\\n';i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(26,sizeof(int));int* p_b=calloc(26,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c26;i++){\n        c_a+=(p_a[i]==1);c_b+=(p_b[i]==1);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    int i=strlen(a),j=strlen(b);\n    return (i!=j)?i\u003cj:lexicographic_sort(a,b);\n}\nvoid swap(char *str1, char *str2) \n{ \n  char *temp = (char *)malloc((strlen(str1) + 1) * sizeof(char)); \n  strcpy(temp, str1); \n  strcpy(str1, str2); \n  strcpy(str2, temp); \n  free(temp); \n}  \nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min_idx;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min_idx = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min_idx]))\n            min_idx = j;  \n        swap(arr[min_idx], arr[i]);  \n    }  \n}\n","score":0.08,"language":"c"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;i\u003cstrlen(a) \u0026\u0026 i\u003cstrlen(b);i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(26,sizeof(int));int* p_b=calloc(26,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c26;i++){\n        c_a+=(p_a[i]==1);c_b+=(p_b[i]==1);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    int i=strlen(a),j=strlen(b);\n    return (i!=j)?i\u003cj:lexicographic_sort(a,b);\n}\nvoid swap(char *str1, char *str2) \n{ \n  char *temp = (char *)malloc((strlen(str1) + 1) * sizeof(char)); \n  strcpy(temp, str1); \n  strcpy(str1, str2); \n  strcpy(str2, temp); \n  free(temp); \n}  \nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min_idx;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min_idx = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min_idx]))\n            min_idx = j;  \n        swap(arr[min_idx], arr[i]);  \n    }  \n}\n","score":0.08,"language":"c"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;i\u003cstrlen(a) \u0026\u0026 i\u003cstrlen(b);i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(26,sizeof(int));int* p_b=calloc(26,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c26;i++){\n        c_a+=(p_a[i]\u003e0);c_b+=(p_b[i]\u003e0);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    int i=strlen(a),j=strlen(b);\n    return (i!=j)?i\u003cj:lexicographic_sort(a,b);\n}\nvoid swap(char *str1, char *str2) \n{ \n  char *temp = (char *)malloc((strlen(str1) + 1) * sizeof(char)); \n  strcpy(temp, str1); \n  strcpy(str1, str2); \n  strcpy(str2, temp); \n  free(temp); \n}  \nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min_idx;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min_idx = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min_idx]))\n            min_idx = j;  \n        swap(arr[min_idx], arr[i]);  \n    }  \n}\n","score":0.08,"language":"c"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;i\u003cstrlen(a) \u0026\u0026 i\u003cstrlen(b);i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(26,sizeof(int));int* p_b=calloc(26,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(b);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c26;i++){\n        c_a+=(p_a[i]\u003e0);c_b+=(p_b[i]\u003e0);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    int i=strlen(a),j=strlen(b);\n    return (i!=j)?i\u003cj:lexicographic_sort(a,b);\n}\nvoid swap(char *str1, char *str2) \n{ \n  char *temp = (char *)malloc((strlen(str1) + 1) * sizeof(char)); \n  strcpy(temp, str1); \n  strcpy(str1, str2); \n  strcpy(str2, temp); \n  free(temp); \n}  \nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min_idx;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min_idx = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min_idx]))\n            min_idx = j;  \n        swap(arr[min_idx], arr[i]);  \n    }  \n}\n","score":0.88,"language":"c"},{"contest":"Master","challenge":"Sorting Array of Strings","code":"\nint lexicographic_sort(const char* a, const char* b) {\n    for(int i=0;i\u003cstrlen(a) \u0026\u0026 i\u003cstrlen(b);i++)\n    {\n        if(a[i]!=b[i]) return a[i]\u003cb[i];\n    }\n    return strlen(a)\u003cstrlen(b);\n}\n\nint lexicographic_sort_reverse(const char* a, const char* b) {\n    return lexicographic_sort(b,a);\n}\n\nint sort_by_number_of_distinct_characters(const char* a, const char* b) {\n    int* p_a=calloc(28,sizeof(int));int* p_b=calloc(28,sizeof(int));\n    for(int i=0;i\u003cstrlen(a);i++){\n        p_a[a[i]-'a']++;\n    }\n    for(int i=0;i\u003cstrlen(b);i++){\n        p_b[b[i]-'a']++;\n    }\n    int c_a=0,c_b=0;\n    for(int i=0;i\u003c28;i++){\n        c_a+=(p_a[i]\u003e0);c_b+=(p_b[i]\u003e0);\n    }\n    return (c_a!=c_b)?c_a\u003cc_b:lexicographic_sort(a,b);\n}\n\nint sort_by_length(const char* a, const char* b) {\n    return (strlen(a)!=strlen(b))?strlen(a)\u003cstrlen(b):lexicographic_sort(a,b);\n}\nvoid string_sort(char** arr, const int len,int (*cmp_func)(const char* a, const char* b)) {\n    int i, j, min;   \n    for (i = 0; i \u003c len-1; i++)  \n    {  \n        min = i;  \n        for (j = i+1; j \u003c len; j++)  \n        if (cmp_func(arr[j],arr[min]))\n            min = j;  \n        char* t=arr[i];arr[i]=arr[min];arr[min]=t;\n    }  \n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Word Order","code":"d={}\nfor _ in range(int(input())):\n    s=input()\n    if(s in d):\n        d[s]+=1\n    else:\n        d[s]=1;\nprint(len(d))\nfor i in d:\n    print(d[i],end=' ')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Merge the Tools!","code":"def merge_the_tools(string, k):\n    s=[ string[i:i+len(string)//k] for i in range(0, len(string), len(string)//k) ]\n    for i in s:\n        d={}\n        for j in i:\n            if(j not in d):\n                print(j,end='')\n                d[j]=1\n        print()\n\n","score":0.0625,"language":"python3"},{"contest":"Master","challenge":"Merge the Tools!","code":"def merge_the_tools(string, k):\n    s=[ string[i:i+k] for i in range(0, len(string), k) ]\n    for i in s:\n        d={}\n        for j in i:\n            if(j not in d):\n                print(j,end='')\n                d[j]=1\n        print()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Validating phone numbers","code":"import re\nfor _ in range(int(input())):\n    if(re.match(\"^(9|7|8)[0-9]{9}$\",input())):\n        print(\"YES\")\n    else :\n        print(\"NO\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Validating and Parsing Email Addresses","code":"import re\npattern=\"[a-zA-Z](\\w|-|\\.|_)+@[a-zA-Z]+\\.[a-zA-Z]{1,3}\"\nfor _ in range(int(input())):\n    s=input().split()\n    if re.match(pattern,s[1][1:len(s[1])-1]):\n        print (\" \".join(s))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Validating and Parsing Email Addresses","code":"import re\npattern=\"[a-zA-Z](\\w|-|\\.|_)+@[a-zA-Z]+\\.[a-zA-Z]{1,3}$\"\nfor _ in range(int(input())):\n    s=input().split()\n    if re.match(pattern,s[1][1:len(s[1])-1]):\n        print (\" \".join(s))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Structuring the Document","code":"\nstruct document get_document(char* text) {\n    struct document d;\n    int p_count=0,s_count=0,w_count=0;\n    int prev=0;\n    for(int i=0;i\u003cstrlen(text);i++){\n        d.data=malloc(sizeof(struct paragraph));\n        d.data[p_count].data=realloc(d.data[p_count].data,sizeof(struct sentence));\n        d.data[p_count].data[s_count].data=realloc(d.data[p_count].data[s_count].data,sizeof(struct word));\n        if(text[i]=='\\n'){\n            d.data[p_count].sentence_count=s_count;\n            p_count++;w_count=s_count=0;i++;\n        }\n        if(text[i]=='.'){\n            d.data[p_count].data[s_count].word_count=w_count;\n            s_count++;w_count=0;i++;\n        }\n        if(text[i]==' '){\n            d.data[p_count].data[s_count].data[w_count].data=malloc((i-prev+1)*sizeof(char));\n            for(int j=prev;j\u003ci;j++) d.data[p_count].data[s_count].data[w_count].data[j-prev]=text[j];\n            w_count++;\n        }\n        s_count+=text[i]=='.';w_count+=text[i]==' ';p_count+=text[i]=='\\n';\n    }\n    return d;\n}\n\nstruct word kth_word_in_mth_sentence_of_nth_paragraph(struct document Doc, int k, int m, int n) {\n    return Doc.data[n-1].data[m-1].data[k-1];\n}\n\nstruct sentence kth_sentence_in_mth_paragraph(struct document Doc, int k, int m) { \n    return Doc.data[m-1].data[k-1];\n}\n\nstruct paragraph kth_paragraph(struct document Doc, int k) {\n    return Doc.data[k-1];\n}\n\n","score":0.0,"language":"c"},{"contest":"Master","challenge":"Structuring the Document","code":"\nstruct document get_document(char* text) {\n    struct document d;\n    int p_count=1,s_count=1,w_count=1;\n    int prev=0;\n    for(int i=0;i\u003cstrlen(text);i++){\n        d.data=realloc(d.data,p_count*sizeof(struct paragraph));\n        d.data[p_count].data=realloc(d.data[p_count].data,s_count*sizeof(struct sentence));\n        d.data[p_count].data[s_count].data=realloc(d.data[p_count].data[s_count].data,w_count*sizeof(struct word));\n        if(text[i]=='\\n'){\n            d.data[p_count].sentence_count=s_count;\n            p_count++;w_count=s_count=1;i++;\n        }\n        if(text[i]=='.'){\n            d.data[p_count].data[s_count].word_count=w_count;\n            s_count++;w_count=1;i++;\n        }\n        if(text[i]==' '){\n            d.data[p_count].data[s_count].data[w_count].data=malloc((i-prev+1)*sizeof(char));\n            for(int j=prev;j\u003ci;j++) d.data[p_count].data[s_count].data[w_count].data[j-prev]=text[j];\n            w_count++;i++;\n        }\n        s_count+=text[i]=='.';w_count+=text[i]==' ';p_count+=text[i]=='\\n';\n    }\n    return d;\n}\n\nstruct word kth_word_in_mth_sentence_of_nth_paragraph(struct document Doc, int k, int m, int n) {\n    return Doc.data[n-1].data[m-1].data[k-1];\n}\n\nstruct sentence kth_sentence_in_mth_paragraph(struct document Doc, int k, int m) { \n    return Doc.data[m-1].data[k-1];\n}\n\nstruct paragraph kth_paragraph(struct document Doc, int k) {\n    return Doc.data[k-1];\n}\n\n","score":0.0,"language":"c"},{"contest":"Master","challenge":"Sum of Digits of a Five Digit Number","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint sum(int i)\n{\n    return i==0?0:i%10+sum((int)i/10);\n}\nint main() {\n\t\n    int n;\n    scanf(\"%d\", \u0026n);\n    printf(\"%d\",sum(n));\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Vector-Erase","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003e n;vector\u003cint\u003e v;\n    while(n--){\n        int a;\n        cin \u003e\u003e a;\n        v.push_back(a);\n    } \n    int m,a,b;\n    cin \u003e\u003e m;\n    cin \u003e\u003e a \u003e\u003e b;\n    v.erase(v.begin()+m-1);\n    v.erase(v.begin()+a-1,v.begin()+b-1);\n    cout \u003c\u003c v.size() \u003c\u003c  endl;\n    for(auto i:v) cout \u003c\u003c i \u003c\u003c \" \";\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Lower Bound-STL","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n\nint main() {\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;\n    while(n--){\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n    }  \n    int q;cin \u003e\u003e q;\n    while(q--){\n        int m;cin \u003e\u003e m;\n        vector\u003cint\u003e::iterator l=lower_bound (v.begin(), v.end(), m);\n        if(*l==m) cout \u003c\u003c \"Yes \";\n        else  cout \u003c\u003c \"No \";\n        cout \u003c\u003c (l- v.begin()+1) \u003c\u003c endl;\n    }\n    return 0;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Java Datatypes","code":"import java.util.*;\nimport java.io.*;\n\n\n\nclass Solution{\n    public static void main(String []argh)\n    {\n        Scanner s=new Scanner(System.in);\n        int n=s.nextInt();\n        while(n--\u003e0){\n            try{\n                long q=s.nextLong();\n                System.out.println(q+\" can be fitted in:\");\n                if(q\u003e=-128 \u0026\u0026 q\u003c=127)System.out.println(\"* byte\");\n                if(q \u003e= -((long)1\u003c\u003c15) \u0026\u0026 q \u003c= ((long)1\u003c\u003c15) - 1)\n                    System.out.println(\"* short\");\n                if(q \u003e= -((long)1\u003c\u003c31) \u0026\u0026 q \u003c= ((long)1\u003c\u003c31) - 1)\n                    System.out.println(\"* int\");\n                if(q \u003e= -((long)1\u003c\u003c63) \u0026\u0026 q \u003c= ((long)1\u003c\u003c63) - 1)\n                    System.out.println(\"* long\");\n            }\n            catch(Exception e){\n                System.out.println(s.next() + \" can't be fitted anywhere.\");\n            }\n        }\n    }\n}\n\n\n\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Java Static Initializer Block","code":"\nstatic boolean flag=true;\nstatic int B,H;\nstatic{\n    Scanner s=new Scanner(System.in);\n    B=s.nextInt();H=s.nextInt();\n    if(B\u003c=0 || H\u003c=0){\n        flag=false;\n        System.out.print(\"java.lang.Exception: Breadth and height must be positive\");\n    }\n}\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Day 21: Generics","code":"\ntemplate \u003ctypename T\u003e\n/**\n*    Name: printArray\n*    Print each element of the generic vector on a new line. Do not return anything.\n*    @param A generic vector\n**/\n\n// Write your code here\nvoid printArray(vector\u003cT\u003e a)\n{\n    for(T i : a)\n        cout \u003c\u003c i \u003c\u003c endl;;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 14: Scope","code":"\n    Difference(vector\u003cint\u003e v){\n        elements=v;\n    }\n    void computeDifference(){\n        vector\u003cint\u003e t=elements;\n        sort(t.begin(),t.end());\n        maximumDifference=t[t.size()-1]-t[0];\n    }\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 15: Linked List","code":"\n\n      Node* insert(Node *head,int data)\n      {\n            \n            if(head==NULL) {\n                head=new Node(data);\n                return head;\n            }\n            Node* curr=head;\n            while(curr-\u003enext){\n                curr=curr-\u003enext;\n            }\n            curr-\u003enext= new Node(data);\n            return head;\n      }\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 15: Linked List","code":"\n\n\tpublic static  Node insert(Node head,int data)\n\t{\n            if(head==null){\n                head=new Node(data);\n                return head;\n            }\n            else if(head.next == null){\n                head.next=new Node(data);\n                return head;\n            }\n            else {\n                insert(head.next,data);\n            }\n            return head;\n    }\n\n","score":1.0,"language":"csharp"},{"contest":"Master","challenge":"Day 16: Exceptions - String to Integer","code":"#include \u003cstring\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nint main(){\n    string s;\n    cin \u003e\u003e s;\n    try{\n        int n=stoi(s);\n        cout \u003c\u003c n;\n    }\n    catch(exception e){\n        cout \u003c\u003c \"Bad String\";\n    }\n}\n\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Java End-of-file","code":"import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner s=new Scanner(System.in);\n        int i=1;\n        while(s.hasNext()){\n            String st=s.nextLine();\n            System.out.printf(\"%d \"+st+\"\\n\",i);\n            i++; \n        }\n    }\n}\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Regex","code":"\n\nclass MyRegex{\n    public String pattern=\"([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5])\";\n}\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Regex","code":"\n\nclass MyRegex{\n    public String pattern=\"([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.([0-9]|[0-9][0-9]|(0|1)[0-9][0-9]|2[0-4][0-9]|25[0-5])\";\n}\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Substring Comparisons","code":"\n\n    public static String getSmallestAndLargest(String s, int k) {\n        String smallest = s.substring(0,k);\n        String largest = \"\";\n        for(int i=0;i+k\u003c=s.length();i++){\n            String temp=s.substring(i,k+i);\n            if(temp.compareTo(smallest)\u003c0) smallest=temp;\n            if(temp.compareTo(largest)\u003e0) largest=temp;\n        }\n        return smallest + \"\\n\" + largest;\n    }\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.551020408163,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.551020408163,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        s.trim();\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.551020408163,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        while(s.charAt(0)==' '){\n            s=s.substring(1);\n        }\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        if(s==\"\") {\n            System.out.println(0);\n            return;\n        }\n        while(s.charAt(0)==' '){\n            s=s.substring(1);\n        }\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        while(s.charAt(0)==' '){\n            s=s.substring(1);\n        }\n        if(s==\"\") {\n            System.out.println(0);\n            return;\n        }\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s = scan.nextLine();\n        while(s.charAt(0)==' '){\n            s=s.substring(1);\n        }\n        if(s.length()==0) {\n            System.out.println(0);\n            return;\n        }\n        String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n        System.out.println(k.length);\n        for(String i:k){\n            System.out.println(i);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try{\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n            s=s.substring(1);\n            }\n            System.out.println(\"fools\");\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch(Exception e){\n             System.out.println(0);\n        }\n\n\n\n\n\n\n\n\n        scan.close();\n    }\n}\n\n","score":0.102040816327,"language":"java"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            if(s.length()==0) {\n                System.out.println(0);\n                return;\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n            scan.close();\n        }\n        catch (NoSuchElementException e){\n            System.out.println(0);\n        }\n    }\n}\n\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            if(s.length()==0) {\n                System.out.println(0);\n                return;\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(0);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(0);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(0);\n        }\n        scan.close();\n    }\n}\n\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.next();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            //for(String i:k){\n            //    System.out.println(i);\n            //}\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n\n","score":0.204081632653,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.next();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n","score":0.285714285714,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            if(s.length()==0){ \n                System.out.println(\"0\")\n                return;\n            }\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n","score":0.0,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s = scan.nextLine();\n            if(s.length()==0){ \n                System.out.println(\"0\");\n                return;\n            }\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n","score":0.897959183673,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        try \n        {\n            String s=\"\";\n            while(scan.hasNext())\n                s+=\" \"+ scan.next();\n            while(s.charAt(0)==' '){\n                s=s.substring(1);\n            }\n            String[] k = s.split(\"[ ,'.\\\"@_?!]+\");\n            System.out.println(k.length);\n            for(String i:k){\n                System.out.println(i);\n            }\n        }\n        catch (NoSuchElementException e){\n            System.out.println(\"0\");\n        }\n        scan.close();\n    }\n}\n\n","score":0.591836734694,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s=scan.nextLine();\n        for(int i=0;i\u003cs.length();i++){\n            if(Character.isLetter(s.charAt(i))){\n                s=s.substring(i);\n                break;\n            }\n        }\n        String[] k=s.split(\"^[Aa-Zz0]+\");\n        System.out.println(k.length);\n        for(String i:k){\n             System.out.println(i);\n        }\n    }\n}\n","score":0.0,"language":"java8"},{"contest":"Master","challenge":"Java String Tokens","code":"import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String s=scan.nextLine();\n        for(int i=0;i\u003cs.length();i++){\n            if(Character.isLetter(s.charAt(i))){\n                s=s.substring(i);\n                break;\n            }\n        }\n        String[] k=s.split(\"[^a-zA-Z]+\");\n        System.out.println(k.length);\n        for(String i:k){\n             System.out.println(i);\n        }\n    }\n}\n","score":1.0,"language":"java8"},{"contest":"Master","challenge":"Prime Checker","code":"\nimport static java.lang.System.in;\nclass Prime{\n    boolean is_p(int n){\n        if(n==1 || n==0 ||n%2==0) return n==2;\n        for(int i=3;i\u003c=Math.sqrt(n);i+=2){\n            if(n%i==0) return false;\n        }\n        return true;\n    }\n    void checkPrime(int...numbers){\n        for(int i:numbers){\n            if(is_p(i)){\n                System.out.print(i+\" \");\n            }\n        }\n        System.out.println();\n    }\n    \n}\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Factory Pattern","code":"\n            if(order==\"Pizza\"){\n                Pizza p=new Pizza();\n                return p;\n            }\n            else {\n                Cake c =new Cake();\n                return c;\n            }\n\n","score":0.5,"language":"java"},{"contest":"Master","challenge":"Java Factory Pattern","code":"\n            order=order.toLowerCase();\n            if(order==\"pizza\"){\n                Pizza p=new Pizza();\n                return p;\n            }\n            else {\n                Cake c =new Cake();\n                return c;\n            }\n\n","score":0.5,"language":"java"},{"contest":"Master","challenge":"Java Factory Pattern","code":"\n            System.out.println(order);\n            if(order.toLowerCase().equals(\"pizza\")){\n                Pizza p=new Pizza();\n                return p;\n            }\n            else {\n                Cake c =new Cake();\n                return c;\n            }\n\n","score":0.0,"language":"java"},{"contest":"Master","challenge":"Java Factory Pattern","code":"\n            if(order.toLowerCase().equals(\"pizza\")){\n                Pizza p=new Pizza();\n                return p;\n            }\n            else {\n                Cake c =new Cake();\n                return c;\n            }\n\n","score":1.0,"language":"java"},{"contest":"Master","challenge":"Java Singleton Pattern","code":"import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.lang.reflect.*;\n\n\nclass Singleton{\n    private Singleton(){};\n    public String str;\n    public static Singleton getSingleInstance(){\n        Singleton s = new Singleton();\n        return s;\n    }\n}","score":1.0,"language":"java"},{"contest":"Master","challenge":"Permutations of Strings","code":"#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint next_permutation(int n, char **s)\n{\n    int k=-1,i;\n      for(int j=0;j\u003cn-1;j++){\n      if(strcmp(s[j],s[j+1])\u003c0) k=j;\n      if(j==n-2 \u0026\u0026 k==-1) return 0;\n    }\n    for(int j=k+1;j\u003cn;j++){\n        if(strcmp(s[j],s[k])\u003e0) i=j;\n    }\n    char* t=s[k];s[k]=s[i];s[i]=t;\n    for(int j=0;j\u003c=(n-k-2)/2;j++){\n        t=s[k+1+j];s[k+1+j]=s[n-1-j];s[n-1-j]=t;\n    }\n    return 1;\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Querying the Document","code":"\nchar* kth_word_in_mth_sentence_of_nth_paragraph(char**** document, int k, int m, int n) {\n    return document[n-1][m-1][k-1];\n}\n\nchar** kth_sentence_in_mth_paragraph(char**** document, int k, int m) { \n    return document[m-1][k-1];\n}\n\nchar*** kth_paragraph(char**** document, int k) {\n    return document[k-1];\n}\n\nchar**** get_document(char* text) {\n    char**** d=(char****)malloc(sizeof(char***));\n    d[0]=(char***)malloc(sizeof(char**));\n    d[0][0]=(char**)malloc(sizeof(char*));\n    d[0][0][0]=(char*)malloc(sizeof(char));\n    int p=1,s=1,w=1,j=1;\n    for(int i=0;i\u003cstrlen(text);i++){\n        char a = text[i];\n        if(text[i]=='\\n'){\n            w=s=j=1;\n            d=(char****)realloc(d,++p*sizeof(char***));\n            d[p-1]=(char***)malloc(sizeof(char**));\n            d[p-1][s-1]=(char**)malloc(sizeof(char*));\n            d[p-1][s-1][w-1]=(char*)malloc(sizeof(char));\n        }\n        else if(text[i]=='.'){\n            d[p-1][s-1][w-1][j-1]='\\0';\n            w=j=1;s++;\n            d[p-1]=(char***)realloc(d[p-1],s*sizeof(char**));\n            d[p-1][s-1]=(char**)malloc(sizeof(char*));\n            d[p-1][s-1][w-1]=(char*)malloc(sizeof(char));\n            \n        }\n        else if(text[i]==' '){\n            d[p-1][s-1][w-1][j-1]='\\0';\n            j=1;w++;\n            d[p-1][s-1]=(char**)realloc(d[p-1][s-1],w*sizeof(char*));\n            d[p-1][s-1][w-1]=(char*)malloc(sizeof(char));\n            \n        }\n        else {\n            d[p-1][s-1][w-1]=(char*)realloc(d[p-1][s-1][w-1],j*sizeof(char));\n            d[p-1][s-1][w-1][j-1]=text[i];\n            j++;\n        }\n    }\n    return d;\n}\n\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"1D Arrays in C","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nint sum(int* v,int n){\n    if(n==0) return 0;\n    return *(v+n-1)+ sum(v,n-1);\n}\nint main() {\n    int n;scanf(\"%d\",\u0026n);\n    int* v=(int*)malloc(n*sizeof(int));\n    for(int i=0;i\u003cn;i++) scanf(\"%d\",v+i);\n    printf(\"%d\",sum(v,n));\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 18: Queues and Stacks","code":"#include \u003ciostream\u003e\n#include \u003cstack\u003e\n#include \u003cqueue\u003e\n\nusing namespace std;\n\nclass Solution {\n    stack\u003cchar\u003e stuck;\n    queue\u003cchar\u003e tail;\n    public:\n    void enqueueCharacter(char ch){\n        tail.push(ch);\n    }\n    void pushCharacter(char ch){\n        stuck.push(ch);\n    }\n    char popCharacter(){\n        char c=stuck.top();\n        stuck.pop();\n        return c;\n    }\n    char dequeueCharacter(){\n        char c=tail.front();\n        tail.pop();\n        return c;\n    }\n};\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Printing Tokens","code":"#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main() {\n\n    char *s;\n    s = malloc(1024 * sizeof(char));\n    scanf(\"%[^\\n]\", s);\n    s = realloc(s, strlen(s) + 1);\n    for(int i=0;i\u003cstrlen(s);i++)\n        printf(\"%c\",s[i]==' '?'\\n':s[i]);\n    return 0;\n}\n\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Day 20: Sorting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin \u003e\u003e n;\n    vector\u003cint\u003e a(n);\n    for(int a_i = 0; a_i \u003c n; a_i++){\n    \tcin \u003e\u003e a[a_i];\n    }\n    int num_swaps=0;\n    for (int i = 0; i \u003c n; i++) {\n        int num = 0;\n        for (int j = 0; j \u003c n - 1; j++) {\n            if (a[j] \u003e a[j + 1]) {\n                swap(a[j], a[j + 1]);\n                num++;num_swaps++;\n            }\n        }\n        if (num == 0) {\n            break;\n        }\n    }\n    printf(\"Array is sorted in %d swaps.\\nFirst Element: %d\\nLast Element: %d\",num_swaps,a[0],a[a.size()-1]);\n    return 0;\n}\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.86,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        if(s\u003cl_l) cout \u003c\u003c s \u003c\u003c endl;if(s\u003er_l) cout \u003c\u003c s \u003c\u003c endl;\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.095,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 0};//int*a=b;\n    for (int i = 0; i \u003c= 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[9]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c9; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.86,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17};//int*a=b;\n    for (int i = 0; i \u003c 7; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[6]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c7; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17};//int*a=b;\n    for (int i = 0; i \u003c 7; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[6]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c7; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        if((int)l_l/pow(10,k)\u003eb[l] \u0026\u0026 s==0){\n            continue;\n        }\n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17};//int*a=b;\n    for (int i = 0; i \u003c 7; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[6]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c7; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        if((int)l_l/pow(10,k)\u003eb[l] \u0026\u0026 s==0){\n            continue;\n        }\n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17};//int*a=b;\n    for (int i = 0; i \u003c 7; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[6]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        if((int)l_l/pow(10,k)\u003eb[l] \u0026\u0026 s==0){\n            continue;\n        }\n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n/2-2)+3;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.785,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Sherlock and Moving Tiles","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint main()\n{\n    int l,s1,s2;\n    scanf(\"%d %d %d\",\u0026l,\u0026s1,\u0026s2);\n    int q;scanf(\"%d\",\u0026q);\n    while(q--){\n        int n;scanf(\"%d\",\u0026n);\n        float result=sqrt(2)*(l-sqrt(n))/(s1-s2);\n        result=result\u003e0?result:-result;\n        printf(\"%.4f\\n\",result);\n    }\n}\n","score":0.4,"language":"c"},{"contest":"Master","challenge":"Sherlock and Moving Tiles","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint main()\n{\n    long l,s1,s2;\n    scanf(\"%ld %ld %ld\",\u0026l,\u0026s1,\u0026s2);\n    long q;scanf(\"%dl\",\u0026q);\n    while(q--){\n        int n;scanf(\"%d\",\u0026n);\n        double result=sqrt(2)*(l-sqrt(n))/(s1-s2);\n        result=result\u003e0?result:-result;\n        printf(\"%.4f\\n\",result);\n    }\n}\n","score":0.4,"language":"c"},{"contest":"Master","challenge":"Sherlock and Moving Tiles","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint main()\n{\n    long long l,s1,s2;\n    scanf(\"%lld %lld %lld\",\u0026l,\u0026s1,\u0026s2);\n    long long q;scanf(\"%lld\",\u0026q);\n    while(q--){\n        long long n;scanf(\"%lld\",\u0026n);\n        double result=sqrt(2)*(l-sqrt(n))/(s1-s2);\n        result=result\u003e0?result:-result;\n        printf(\"%.4f\\n\",result);\n    }\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Best Divisor","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstddef.h\u003e\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint sumd(long n){\n    if(n==0) return 0;\n    return n%10+sumd((int)n/10);\n}\nint sum(long n){\n    return n\u003c10?n:sum(sumd(n));\n}\nint main()\n{\n    int result=0;\n    long n;scanf(\"%ld\",\u0026n);\n    for(int i=1;i\u003c=sqrt(n);i++){\n        if(n%i==0){\n            if(sum(i)\u003esum(result)) result=i;\n            if(sum(i)==sum(result)) result=i\u003cresult?i:result;\n            if(sum(n/i)\u003esum(result)) result=n/i;\n            if(sum(n/i)==sum(result)) result=n/i\u003cresult?n/i:result;\n        }\n    }\n    printf(\"%d\",result);\n}\n","score":0.708333333333,"language":"c"},{"contest":"Master","challenge":"Best Divisor","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstddef.h\u003e\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint sumd(long n){\n    if(n==0) return 0;\n    return n%10+sumd((int)n/10);\n}\nint sum(long n){\n    return n\u003c10?n:sum(sumd(n));\n}\nint main()\n{\n    int result=0;\n    long n;scanf(\"%ld\",\u0026n);\n    for(int i=1;i\u003c=sqrt(n);i++){\n        if(n%i==0){\n            if(sumd(i)\u003esumd(result)) result=i;\n            if(sumd(i)==sumd(result)) result=i\u003cresult?i:result;\n            if(sumd(n/i)\u003esumd(result)) result=n/i;\n            if(sumd(n/i)==sumd(result)) result=n/i\u003cresult?n/i:result;\n        }\n    }\n    printf(\"%d\",result);\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Restaurant","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvector\u003cstring\u003e split_string(string);\n\nint restaurant(int l, int b) {\n    int g=__gcd(l,b);\n    return (l*b)/(g*g);\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int l,w;cin \u003e\u003e l \u003e\u003e w;\n        cout \u003c\u003c restaurant(l,w) \u003c\u003c endl;;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Divisors","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003en ;\n    while(n--){\n        int k;cin \u003e\u003e k;\n        int r=0;\n        for(int i=1;i\u003c=sqrt(k);i++){\n            if(k%i==0) {\n                if(i%2==0) r++;\n                if((k/i)%2==0) r++;\n            }\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Divisors","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003en ;\n    while(n--){\n        long k;cin \u003e\u003e k;\n        int r=0;\n        for(int i=1;i\u003c=sqrt(k);i++){\n            if(k%i==0) {\n                if(i%2==0) r++;\n                if((k/i)%2==0) r++;\n            }\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.571428571429,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Divisors","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003en ;\n    while(n--){\n        long k;cin \u003e\u003e k;\n        int r=0;\n        for(int i=1;i\u003c=sqrt(k);i++){\n            if(k%i==0) {\n                if(i%2==0) r++;\n                if(k/i!=i \u0026\u0026 (k/i)%2==0) r++;\n            }\n        }\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Matching Specific String","code":"Regex_Pattern = r'hackerrank'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Anything But a Newline","code":"regex_pattern = r\".{3}\\..{3}\\..{3}\\..{3}\"\t# Do not delete 'r'.\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Anything But a Newline","code":"regex_pattern = r\".{3}\\..{3}\\..{3}\\..{3}$\"\t# Do not delete 'r'.\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Digits \u0026 Non-Digit Characters","code":"Regex_Pattern = r\"^\\d{2}[^0-9]\\d{2}[^0-9]\\d{4}$\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Digits \u0026 Non-Digit Characters","code":"Regex_Pattern = r\"^\\d{2}\\D\\d{2}\\D\\d{4}$\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Digits \u0026 Non-Digit Characters","code":"Regex_Pattern = r\"^\\d{2}\\D\\d{2}\\D\\d*\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Digits \u0026 Non-Digit Characters","code":"Regex_Pattern = r\"^\\d{2}\\D\\d{2}\\D\\d{4}\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Whitespace \u0026 Non-Whitespace Character","code":"Regex_Pattern = r\"\\S{2}\\s\\S{2}\\s\\S{2}\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Word \u0026 Non-Word Character","code":"Regex_Pattern = r\"\\w*\\W\\w*\\W\\w*\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Word \u0026 Non-Word Character","code":"Regex_Pattern = r\"\\w{3}\\W\\w{10}\\W\\w{3}\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Start \u0026 End","code":"Regex_Pattern = r\"^\\d\\w{4}\\.$\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Specific Characters","code":"Regex_Pattern = r'[123][120][xs0][30Aa][xsu][,.]'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Specific Characters","code":"Regex_Pattern = r'[123][120][xs0][30Aa][xsu](,|\\.)'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Specific Characters","code":"Regex_Pattern = r'^[123][120][xs0][30Aa][xsu](,|\\.)$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Excluding Specific Characters","code":"Regex_Pattern = r'^[^1-9][^aeiou][^bcDF]\\S[^AEIOU][^.,]$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Character Ranges","code":"Regex_Pattern = r'^[a-z][1-9][^a-z][^A-Z][A-Z]'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Word Boundaries","code":"Regex_Pattern = r'\\b[a-zA-Z]+\\b'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Capturing \u0026 Non-Capturing Groups","code":"Regex_Pattern = r'(ok){3}'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Alternative Matching","code":"Regex_Pattern = r'^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|er\\.)[a-zA-Z]+$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Alternative Matching","code":"Regex_Pattern = r'^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|er\\.)[aZ-zZ]+$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Alternative Matching","code":"Regex_Pattern = r'^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|er\\.)[aA-zZ]+$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Alternative Matching","code":"Regex_Pattern = r'^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|er\\.)[a-zA-Z]+$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Alternative Matching","code":"Regex_Pattern = r'^(Mr\\.|Mrs\\.|Ms\\.|Dr\\.|Er\\.)[a-zA-Z]+$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Saying Hi","code":"import re\nfor _ in range(int(input())):\n    s=input()\n    if re.match(\"^(H|h)(I|i)\\s[^Dd]\",s):\n        print(s)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"HackerRank Language","code":"import re\nlang=\"(C:CPP:JAVA:PYTHON:PERL:PHP:RUBY:CSHARP:HASKELL:CLOJURE:BASH:SCALA: ERLANG:CLISP:LUA:BRAINFUCK:JAVASCRIPT:GO:D:OCAML:R:PASCAL:SBCL:DART: GROOVY:OBJECTIVEC)\"\nlang=\"|\".join(lang.split(\":\"))\nfor _ in range(int(input())):\n    s=input().split()\n    n=int(s[0])\n    m=s[1]\n    if 10**4\u003cn and n\u003c10**5:\n        if re.match(\"^\"+lang+\"$\",m):\n            print(\"VALID\")\n        else:\n            print(\"INVALID\")\n    else:\n        print(\"INVALID\")\n","score":0.1,"language":"python3"},{"contest":"Master","challenge":"HackerRank Language","code":"import re\nlang=\"(C:CPP:JAVA:PYTHON:PERL:PHP:RUBY:CSHARP:HASKELL:CLOJURE:BASH:SCALA:ERLANG:CLISP:LUA:BRAINFUCK:JAVASCRIPT:GO:D:OCAML:R:PASCAL:SBCL:DART:GROOVY:OBJECTIVEC)\"\nlang=\"|\".join(lang.split(\":\"))\nfor _ in range(int(input())):\n    s=input().split()\n    n=int(s[0])\n    m=s[1]\n    if 10**4\u003cn and n\u003c10**5:\n        if re.match(\"^\"+lang+\"$\",m):\n            print(\"VALID\")\n        else:\n            print(\"INVALID\")\n    else:\n        print(\"INVALID\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching {x} Repetitions","code":"Regex_Pattern = r'^[0-9a-zA-Z]{40}(\\s|[13579]){5}$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching {x} Repetitions","code":"Regex_Pattern = r'^[02468a-zA-Z]{40}(\\s|[13579]){5}$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching {x, y} Repetitions","code":"Regex_Pattern = r'^[0-9]{1,2}[a-zA-Z]{3,}\\.{0,3}$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Zero Or More Repetitions","code":"Regex_Pattern = r'^[0-9]{2,}[a-z]*[A-Z]*$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching One Or More Repetitions","code":"Regex_Pattern = r'^\\d+[A-Z]+[a-z]+$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Ending Items","code":"Regex_Pattern = r'^[a-zA-Z]+s$'\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Matching Ending Items","code":"Regex_Pattern = r'^[a-zA-Z]*s$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Matching Same Text Again \u0026 Again","code":"Regex_Pattern = r'^([a-z])(\\w)(\\s)(\\W)(\\d)(\\D)([A-Z])([a-zA-Z])([aeiouAEIOU])(\\S)(\\1)(\\2)(\\3)(\\4)(\\5)(\\6)(\\7)(\\8)(\\9)(\\10)$'\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Strings: Making Anagrams","code":"a=input()\nb=input()\nd={}\nr=0\ndef abs(n):\n    if(n\u003c0):\n        return -n\n    return n\nfor i in range(len(a)):\n    if a[i] not in d:\n        d[a[i]]=1\n    else:\n        d[a[i]]+=1\nfor i in range(len(b)):\n    if b[i] not in d:\n        d[b[i]]=-1\n    else:\n        d[b[i]]-=1\nfor i in d:\n    if d[i]!=0:\n        r+=abs(d[i])\nprint(r)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find HackerRank","code":"import re\nfor _ in range(int(input())):\n    s=input()\n    if re.match(\"^hackerrank.+\",s):\n        print(1)\n    elif re.match(\".+hackerrank$\",s):\n        print(2)\n    elif re.match(\"^hackerrank$\",s):\n        print(0)\n    else :\n        print(-1)\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"IP Address Validation","code":"import re\nipv6=\"^[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}:[0-9a-f]{1,4}$\"\nipv4=\"^(((0?|1)[0-9]?[0-9])|(2[0-4][0-9])|(25[0-5]))\\.(((0?|1)[0-9]?[0-9])|(2[0-4][0-9])|(25[0-5]))\\.(((0?|1)[0-9]?[0-9])|(2[0-4][0-9])|(25[0-5]))\\.(((0?|1)[0-9]?[0-9])|(2[0-4][0-9])|(25[0-5]))$\"\nfor _ in range(int(input())):\n    s=input()\n    if re.match(ipv4,s):\n        print(\"IPv4\")\n    elif re.match(ipv6,s):\n        print('IPv6')\n    else:\n        print(\"Neither\")\n\n    \n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 6: Bitwise Operators","code":"\nfunction getMaxLessThanK(a, b) {\n    var m = 0;\n    for (var i = 1; i \u003c a; i++) {\n        for (var j = i + 1; j \u003c= a; j++) {\n            var t = i \u0026 j;\n            if (t \u003e m \u0026\u0026 t \u003c b) {\n                m = t;\n            }\n        }\n    }\n    return m;\n}\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 2: Conditional Statements: If-Else","code":"\n\nfunction getGrade(score) {\n    let grade;\n    if(score\u003c=5){\n        grade=\"F\";\n    }\n    else \n    {\n        if(score\u003c=10){\n            grade=\"E\";\n        }\n        else{\n            if(score\u003c=15){\n                grade=\"D\";\n            }\n            else{\n                if(score\u003c=20){\n                    grade=\"C\"\n                }\n                else{\n                    if(score\u003c=25){\n                        grade=\"B\";\n                    }\n                    else\n                    {\n                        grade=\"A\";\n                    }\n                }\n            }\n        }\n    }\n    return grade;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 1: Functions","code":"\nfunction fact(a) {\n    if (a == 0) {\n        return 1;\n    }\n    return a * fact(a - 1);\n}\nfunction factorial(a){\n    return fact(a);\n}\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 0: Data Types","code":"\n\nfunction performOperation(secondInteger, secondDecimal, secondString) {\n    // Declare a variable named 'firstInteger' and initialize with integer value 4.\n    const firstInteger = 4;\n    \n    // Declare a variable named 'firstDecimal' and initialize with floating-point value 4.0.\n    const firstDecimal = 4.0;\n    \n    // Declare a variable named 'firstString' and initialize with the string \"HackerRank\".\n    const firstString = 'HackerRank ';\n    \n    // Write code that uses console.log to print the sum of the 'firstInteger' and 'secondInteger' (converted to a Number        type) on a new line.\n    \n    console.log(Math.round(+secondInteger+firstInteger));\n    // Write code that uses console.log to print the sum of 'firstDecimal' and 'secondDecimal' (converted to a Number            type) on a new line.\n    console.log(+secondDecimal+firstDecimal);\n    // Write code that uses console.log to print the concatenation of 'firstString' and 'secondString' on a new line. The        variable 'firstString' must be printed first.\n    console.log(firstString+secondString);\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 2: Loops","code":"\n\n/*\n * Complete the vowelsAndConsonants function.\n * Print your output using 'console.log()'.\n */\nfunction vowelsAndConsonants(s) {\n    var a = [];\n    var regex = new RegExp(\"[aoiueAOIUE]\");\n    for (var i = 0; i \u003c s.length; i++) {\n    if (regex.test(s[i])) {\n        console.log(s[i]);\n    }\n    else {\n        a.push(s[i]);\n    }\n    }\n    for (var i = 0; i \u003c a.length; i++)\n    console.log(a[i]);\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 1: Arithmetic Operators","code":"\n\nfunction getArea(length, width) {\n    return length*width;\n}\nfunction getPerimeter(length, width) {\n    return 2*(length+width);\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 7: Regular Expressions I","code":"\n\nfunction regexVar() {\n    var re = new RegExp(\"^([aoiueAOIUE]).*\\\\1$\");\n    return re;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 7: Regular Expressions II","code":"\n\nfunction regexVar() {\n    var re = new RegExp(\"^(Mr\\\\.|Mrs\\\\.|Ms\\\\.|Dr\\\\.|Er\\\\.)[a-zA-Z]+$\");\n    return re;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 7: Regular Expressions III","code":"\n\nfunction regexVar() {\n    var regex = new RegExp(\"[0-9]+\",\"g\");\n    return regex;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 3: Arrays","code":"\nfunction getSecondLargest(a) {\n    a.sort();\n    var max=a[a.length-1];\n    for(let i=a.length-1;i\u003e0;i--){\n        if(a[i]!=max){\n            return a[i];\n            break;\n        }\n    }\n}\n\n","score":0.0,"language":"javascript"},{"contest":"Master","challenge":"Day 3: Arrays","code":"\nfunction getSecondLargest(a) {\n    a.sort((a,b)=\u003ea-b);\n    var max=a[a.length-1];\n    for(let i=a.length-1;i\u003e=0;i--){\n        if(a[i]!=max){\n            return a[i];\n        }\n    }\n    return max;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 1: Let and Const","code":"\n\nfunction main() {\n    let r=+readLine();\n    const PI=Math.PI;\n    console.log(r*r*PI);\n    console.log(2*r*PI);\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 4: Count Objects","code":"\n\n/*\n * Return a count of the total number of objects 'o' satisfying o.x == o.y.\n * \n * Parameter(s):\n * objects: an array of objects with integer properties 'x' and 'y'\n */\nfunction getCount(objects) {\n    let j=0;\n    for(var i=0;i\u003cobjects.length;i++){\n        if(objects[i].x==objects[i].y)\n            j++;\n    }\n    return j;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 2: Conditional Statements: Switch","code":"\n\nfunction getLetter(s) {\n    var v = new RegExp(\"[aoiue]\");\n    var a1 = new RegExp(\"[bcdfg]\");\n    var a2 = new RegExp(\"[hjklm]\");\n    var a3 = new RegExp(\"[npqrstvwxyz]\")\n    if (v.test(s[0]))\n        return \"A\";\n    if (a1.test(s[0]))\n        return \"B\";\n    if (a2.test(s[0]))\n        return \"C\";\n    if (a3.test(s[0]))\n        return \"D\";\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 3: Try, Catch, and Finally","code":"\n\n/*\n * Complete the reverseString function\n * Use console.log() to print to stdout.\n */\nfunction reverseString(s) {\n    try{\n        var r=s.split(\"\");\n        r.reverse();\n        console.log(r.join(\"\"));\n    }\n    catch(e){\n        console.log(e.message);\n        console.log(s);\n    }\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 28: RegEx, Patterns, and Intro to Databases","code":"import re\nname=[]\nfor _ in range(int(input())):\n    s=input().split()\n    if(re.match(\"\\w+@gmail\\.com$\",s[1])):\n        name.append(s[0])\nname.sort()\nprint(\"\\n\".join(name))\n","score":0.5,"language":"python3"},{"contest":"Master","challenge":"Day 28: RegEx, Patterns, and Intro to Databases","code":"import re\nname=[]\nfor _ in range(int(input())):\n    s=input().split()\n    if(re.match(\"^\\w+@gmail\\.com$\",s[1])):\n        name.append(s[0])\nname.sort()\nprint(\"\\n\".join(name))\n","score":0.5,"language":"python3"},{"contest":"Master","challenge":"Day 28: RegEx, Patterns, and Intro to Databases","code":"import re\nname=[]\nfor _ in range(int(input())):\n    s=input().split()\n    if(re.match(\"^.+@gmail\\.com$\",s[1])):\n        name.append(s[0])\nname.sort()\nprint(\"\\n\".join(name))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"import math\ndef prime(n):\n    if n%2==0:\n        return n==2\n    else:  \n        for i in range(3,round(math.sqrt(n))+1):\n            if n%i==0:\n                return 0\n        return 1\nfor _ in range(int(input())):\n    if(prime(int(input()))):\n        print('Prime')\n    else:\n        print('Not prime')\n","score":0.855769230769,"language":"python3"},{"contest":"Master","challenge":"Day 25: Running Time and Complexity","code":"import math\ndef prime(n):\n    if n==1 or n==0:\n        return 0\n    if n%2==0:\n        return n==2\n    else:  \n        for i in range(3,round(math.sqrt(n))+1):\n            if n%i==0:\n                return 0\n        return 1\nfor _ in range(int(input())):\n    if(prime(int(input()))):\n        print('Prime')\n    else:\n        print('Not prime')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 29: Bitwise AND","code":"module solution\n    sub main()\n        dim t as integer\n        t=Convert.ToInt32(Console.ReadLine())\n        dim k as integer\n        for k=1 to t\n            dim s() as string\n            dim a as integer\n            dim k as integer\n            dim m as integer = 0\n            dim i,j as integer\n            s=Console.ReadLine().split()\n            a=Convert.ToInt32(s(0))\n            k=Convert.ToInt32(s(1))\n            for i=1 to a-1 step 1\n                for j=i+1 to a step 1\n                    dim t as integer\n                    t=i and j\n                    if t\u003em and k\u003et then\n                        m=t\n                    end if\n                next\n            next\n            Console.WriteLine(m)\n        next \n    end sub\nend module\n","score":1.0,"language":"visualbasic"},{"contest":"Master","challenge":"The World of Numbers","code":"read x\nread y\n\nfor i in {+,-,\"*\",/}\ndo  \n    echo $(((x)$i(y)))\ndone\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Comparing Numbers","code":"read x\nread y\nif(($x \u003c $y)); then\n    echo 'X is less than Y'\nelif(($x \u003e $y)); then\n    echo 'X is greater than Y'\nelse\n    echo 'X is equal to Y'\nfi\n","score":1.0,"language":"bash"},{"contest":"Master","challenge":"Special String Again","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    string s;cin \u003e\u003e s;\n    int r=0;\n    for(int i=0;i\u003cn;i++){\n        char c=' ';\n        for(int j=0;!(i-j\u003c0 || i+j\u003e=n || s[i-j]!=s[i+j]);j++){\n            if(s[i-j]==c || c==' ') {\n                r++;\n                c=s[i+1];\n            }\n            else break;\n        }\n        if(s[i+1]==s[i]) r++;if(i==n-1 \u0026\u0026 s[i-1]==s[i]) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Special String Again","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long n;cin \u003e\u003e n;\n    string s;cin \u003e\u003e s;\n    long r=0;\n    for(long i=0;i\u003cn;i++){\n        char c=' ';\n        for(long j=0;!(i-j\u003c0 || i+j\u003e=n || s[i-j]!=s[i+j]);j++){\n            if(s[i-j]==c || c==' ') {\n                r++;\n                c=s[i+1];\n            }\n            else break;\n        }\n        if(s[i+1]==s[i]) r++;if(i==n-1 \u0026\u0026 s[i-1]==s[i]) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Special String Again","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    long n;cin \u003e\u003e n;\n    string s;cin \u003e\u003e s;\n    long r=0;\n    for(long i=0;i\u003cn;i++){\n        char c=' ';\n        for(long j=0;!(i-j\u003c0 || i+j\u003e=n || s[i-j]!=s[i+j]);j++){\n            if(s[i-j]==c || c==' ') {\n                r++;\n                c=s[i-1];\n            }\n            else break;\n        }\n        if(i==n-1 \u0026\u0026 s[i-1]==s[i]) r++;\n        else if(s[i+1]==s[i] \u0026\u0026 i+1!=n-1) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Day 4: Classes","code":"class Polygon {\n    constructor(a) {\n        this.sides = [];\n        this.sides = a;\n    }\n    perimeter() {\n        let p = 0;\n        for (var i = 0; i \u003c this.sides.length; i++) {\n            p += this.sides[i];\n        }\n        return p;\n    }\n}\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 4: Create a Rectangle Object","code":"\n\n/*\n * Complete the Rectangle function\n */\nfunction Rectangle(a, b) {\n    return {\n        length:a,\n        width:b,\n        perimeter:2*(a+b),\n        area:a*b\n    }\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 5: Arrow Functions","code":"\n\n/*\n * Modify and return the array so that all even elements are doubled and all odd elements are tripled.\n * \n * Parameter(s):\n * nums: An array of numbers.\n */\nfunction modifyArray(nums) {\n    for(let i=0;i\u003cnums.length;i++){\n        if(nums[i]%2==1){\n            nums[i]*=3;\n        }\n        else {\n            nums[i]*=2;\n        }\n    }\n    return nums;\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 5: Arrow Functions","code":"\n\n/*\n * Modify and return the array so that all even elements are doubled and all odd elements are tripled.\n * \n * Parameter(s):\n * nums: An array of numbers.\n */\nfunction modifyArray(nums) {\n    return nums.map((n)=\u003e n*(n%2?3:2));\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 22: Binary Search Trees","code":"\n        int height=0;\n\t\tint Height(Node* root){\n          if(root==NULL){\n              return 0;\n          }\n          else{\n              return 1+max(Height(root-\u003eright),Height(root-\u003eleft));\n          }\n        }\n        int getHeight(Node* root){\n          return Height(root)-1;\n        }\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Day 0: Mean, Median, and Mode","code":"import numpy\nfrom scipy import stats\nn=input()\na=[int(i) for i in input().split()]\nprint(numpy.mean(a))\nprint(numpy.median(a))\nprint(stats.mode(a)[0][0])\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 0: Weighted Mean","code":"n=input()\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\nfor i in range(len(b)):\n    a[i]*=b[i]\nprint(sum(a)/sum(b))\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Day 0: Weighted Mean","code":"n=input()\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\nfor i in range(len(b)):\n    a[i]*=b[i]\nprint(round(sum(a)/sum(b),1))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"for _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    for i in range(1,a[0]):\n        if i*(a[0]-i)\u003ca[0]*a[1]:\n            r+=1\n    print(r)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(int(n)-1)\n    else:\n        x1=(n-math.sqrt(delta))/2\n        print(int(x1)*2)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(int(n)-1)\n    else:\n        x1=min((n-math.sqrt(delta))/2,(n+math.sqrt(delta))/2)\n        print(int(x1*2))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=min((n-math.sqrt(delta))/2,(n+math.sqrt(delta))/2)\n        print(math.ceil(1)*2)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=min((n-math.sqrt(delta))/2,(n+math.sqrt(delta))/2)\n        r=0\n        for i in range(1,int(x1)+1):\n            r+=1\n        print(2*r)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    r=0\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=min((n-math.sqrt(delta))/2,(n+math.sqrt(delta))/2)\n        print(math.floor(x1)*2)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=(n-math.sqrt(delta))/2\n        print(round(x1)*2)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int q;cin \u003e\u003e q;\n    while(q--){\n        long n,k;cin \u003e\u003e n \u003e\u003e k;\n        long long d=n*(n-4*k);\n        if(d\u003c0)\n            cout \u003c\u003c n-1;\n        else{\n            long long x=(n-sqrt(d))/2;\n            cout \u003c\u003c (long long)floor(x)*2-1;\n        }\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=(n-math.sqrt(delta))/2\n        x2=(n+math.sqrt(delta))/2\n        print(math.floor(x1)+n-math.ceil(x2))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Counting","code":"import math\nfor _ in range(int(input())):\n    a=[int(i) for i in input().split()]\n    n=a[0]\n    k=a[1]\n    delta=n*(n-4*k)\n    if delta \u003c 0:\n        print(n-1)\n    else:\n        x1=(n-math.sqrt(delta))/2\n        print(math.floor(math.ceil(x1)))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Weather Observation Station 6","code":"select distinct(CITY) from STATION where REGEXP_LIKE(CITY,'^[AOIUE].*');","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Day 1: Quartiles","code":"m=int(input())\na=sorted([int(i) for i in input().split()])\nq1=0\nq2=0\nq3=0\nif(m%4==0):\n    q1=a[m//4]\n    q2=a[m//2]\n    q3=a[3*m/4]\nelse:\n    q1=(a[m//4-1]+a[(m//4)])/2\n    if(m%2==0):\n        q2=(a[m//2-1]+a[(m//2)])/2\n    else :\n        q2=a[m//2]\n    q3=(a[3*(m//4)]+a[3*(m//4)+1])/2\nprint(int(q1),int(q2),int(q3),sep='\\n')\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Day 1: Quartiles","code":"def getmed(a):\n    if(len(a)%2==0):\n        return (a[len(a)//2-1]+a[len(a)//2])/2\n    return a[len(a)//2]\nm=int(input())\na=sorted([int(i) for i in input().split()])\nprint(int(getmed(a[:m//2])),int(getmed(a)),int(getmed(a[m//2+1:])),sep='\\n')\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Day 1: Quartiles","code":"def getmed(a):\n    if(len(a)%2==0):\n        return (a[len(a)//2-1]+a[len(a)//2])/2\n    return a[len(a)//2]\nm=int(input())\na=sorted([int(i) for i in input().split()])\nprint(int(getmed(a[:m//2])),int(getmed(a)),int(getmed(a[m//2:])),sep='\\n')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 1: Standard Deviation","code":"import math\nn=input()\na=[int(i) for i in input().split()]\nm=sum(a)/len(a)\nsig=0\nfor i in range(len(a)):\n    sig+=(a[i]-m)**2/len(a)\nprint(math.sqrt(sig))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 1: Interquartile Range","code":"#include \u003ccmath\u003e\n#include \u003ccstdio\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nvoid sort_once(vector\u003cint\u003e\u0026 a,vector\u003cint\u003e\u0026 b,int n){\n    int i,j;\n    for(i=0;i\u003cn-1;i++){\n        int m=i;\n        for(j=i+1;j\u003cn;j++){\n            if(a[j]\u003ca[m]) m=j;\n        }\n        swap(a[i],a[m]);\n        swap(b[i],b[m]);\n    }\n}\nint find_mean(vector\u003cint\u003e a,vector\u003cint\u003e b,int i,int j){///wroooooong\n    if((j+1-i)%2==0){\n        int m1,m2;\n        m1=(i+1+j)/2-1;\n        m2=(i+1+j)/2;\n        bool c1=true,c2=true;\n        for(int k=i;k\u003c=j;k++){\n            if(b[k]\u003e=m1 \u0026\u0026 c1){\n                if(b[k]\u003em1)\n                    m1=a[k-1];\n                else\n                    m1=a[k];\n                c1=false;\n            }\n            if(b[k]\u003e=m2 \u0026\u0026 c2){\n                if(b[k]\u003em2)\n                    m2=a[k-1];\n                else\n                    m2=a[k];\n                c2=false;\n            }\n        }\n        return (m1+m2)/2;\n    }\n    else{\n        int m=(i+j)/2;\n        for(int k=i;k\u003c=j;k++){\n            if(b[k]\u003em){\n                m=a[k-1];\n            }\n        }\n        return m;\n    }\n}\nint main() {\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v;\n    vector\u003cint\u003e f;\n    for(int i=0;i\u003cn;i++){\n        int a;cin \u003e\u003e a;\n        v.push_back(a);\n    } \n    for(int i=0;i\u003cn;i++){\n        int b;cin \u003e\u003e b;\n        f.push_back(b);\n    } \n    sort_once(v,f,n);\n    for(int i=1;i\u003cn;i++)\n        f[i]+=f[i-1];\n    int q1=find_mean(v,f,0,n/2-1);\n    int q2=find_mean(v,f,n/2,n-1);\n    cout \u003c\u003c q1 \u003c\u003c \" \" \u003c\u003c q2;\n    return 0;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cvector\u003cint\u003e\u003e p) {\n    for(int i=0;i\u003c3;i++){\n        int c=0;\n        for(int j=1;j\u003c4;j++){\n            if(p[0][i]==p[j][i]) c++;\n        }\n        if(c==3) return 1;\n        else continue;\n    }\n    return 1;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cvector\u003cint\u003e\u003e ve(4);\n        for(int i=0;i\u003c4;i++){\n            vector\u003cint\u003e q(3);\n            for(int j=0;j\u003c3;j++)\n                cin \u003e\u003e q[j];\n            ve[i]=q;\n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\";\n        else cout \u003c\u003c \"NO\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cvector\u003cint\u003e\u003e p) {\n    for(int i=0;i\u003c3;i++){\n        int c=0;\n        for(int j=1;j\u003c4;j++){\n            if(p[0][i]==p[j][i]) c++;\n        }\n        if(c==3) return 1;\n        else continue;\n    }\n    return 1;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cvector\u003cint\u003e\u003e ve(4);\n        for(int i=0;i\u003c4;i++){\n            vector\u003cint\u003e q(3);\n            for(int j=0;j\u003c3;j++)\n                cin \u003e\u003e q[j];\n            ve[i]=q;\n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cint\u003e p) {\n    for(int i:p) if(i==0) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(4,0);\n        for(int i=0;i\u003c4;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                ve[i]+=a*pow(-1,i);\n            }   \n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cint\u003e p) {\n    for(int i:p) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(3,0);\n        for(int i=0;i\u003c4;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                ve[j]+=a*pow(-1,i);\n            }   \n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cint\u003e p) {\n    for(int i:p) if(i==0) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(3,0);\n        for(int i=0;i\u003c4;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                ve[j]+=a*(j\u00261?1:(-1));\n            }   \n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cint\u003e p) {\n    for(int i:p) if(i==0) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(3,0);\n        for(int i=0;i\u003c4;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                ve[j]+=a*(i\u00261?1:(-1));\n            }   \n        }\n        bool b=sol(ve);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(int i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        for(int i=0;i\u003c4;i++){\n            cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n            for(int j=1;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                be[j]=(a==ve[j])?1:0;\n            }   \n        }\n        bool b=sol(be);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(int i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003cint\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(int i=1;i\u003c4;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                int a; cin \u003e\u003e a;\n                be[j]=(a==ve[j])?1:0;\n            }   \n        }\n        bool b=sol(be);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(long long i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(long long i=1;i\u003c4;i++){\n            for(long long j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j])?1:0;\n            }   \n        }\n        bool b=sol(be);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(long long i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(long long i=1;i\u003c4;i++){\n            for(long long j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j]);\n            }   \n        }\n        bool b=sol(be);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(long long i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(long long i=1;i\u003c4;i++){\n            for(long long j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j]);\n            }   \n        }\n        bool b=sol(be);\n        if(b) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(bool i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--\u003e0){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(int i=0;i\u003c3;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j]);\n            } \n        }\n        if(sol(be)) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(bool i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--\u003e0){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,0);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(int i=0;i\u003c3;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j]);\n            } \n        }\n        if(sol(be)) cout \u003c\u003c \"YES\" \u003c\u003c endl;\n        else cout \u003c\u003c \"NO\\n\" \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"for _ in range(int(input())):\n    x = []\n    y = []\n    z = []\n    for i in range(4):\n        p = [int(i) for i in input().split()]\n        x.append(p[0])\n        y.append(p[1])\n        z.append(p[2])\n    x.sort()\n    y.sort()\n    z.sort()\n    print ([\"NO\", \"YES\"][x[3]-x[0]==0 or y[3]-y[0]==0 or z[3]-z[0]==0])\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Planes","code":"for _ in range(int(input())):\n    v=[int(i) for i in input().split()]\n    b=[False]*3\n    for i in range(3):\n        t=[int(i) for i in input().split()]\n        for i in range(3):\n            b[i]=(v[i]==t[i])\n    yes=False\n    for i in b:\n        if(i==True):\n            yes=True\n    if(yes):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Points On a Line","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(bool i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003clong long\u003e ve(2,0);\n    vector\u003cbool\u003e be(2,0);\n    cin \u003e\u003e ve[0] \u003e\u003e ve[1];\n    for(int i=0;i\u003cn-1;i++){\n        for(int j=0;j\u003c2;j++)\n        {\n            long long a; cin \u003e\u003e a;\n            be[j]=(a==ve[j]);\n        } \n    }\n    if(sol(be)) cout \u003c\u003c \"YES\" \u003c\u003c endl;\n    else cout \u003c\u003c \"NO\\n\" \u003c\u003c endl;\n}\n","score":0.625,"language":"cpp14"},{"contest":"Master","challenge":"Points On a Line","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(bool i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003clong long\u003e ve(2,0);\n    vector\u003cbool\u003e be(2,1);\n    cin \u003e\u003e ve[0] \u003e\u003e ve[1];\n    for(int i=0;i\u003cn-1;i++){\n        for(int j=0;j\u003c2;j++)\n        {\n            long long a; cin \u003e\u003e a;\n            be[j]=(a==ve[j] \u0026\u0026 be[j])?1:0;\n        } \n    }\n    if(sol(be)) cout \u003c\u003c \"YES\" \u003c\u003c endl;\n    else cout \u003c\u003c \"NO\\n\" \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Sherlock and Planes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n// Complete the solve function below.\nbool sol(vector\u003cbool\u003e p) {\n    for(bool i:p) if(i==1) return 1;\n    return 0;\n}\n\nint main()\n{\n    long long t;cin \u003e\u003e t;\n    while(t--\u003e0){\n        vector\u003clong long\u003e ve(3,0);\n        vector\u003cbool\u003e be(3,1);\n        cin \u003e\u003e ve[0] \u003e\u003e ve[1] \u003e\u003e ve[2];\n        for(int i=0;i\u003c3;i++){\n            for(int j=0;j\u003c3;j++)\n            {\n                long long a; cin \u003e\u003e a;\n                be[j]=(a==ve[j] \u0026\u0026 be[j])?1:0;\n            } \n        }\n        if(sol(be)) cout \u003c\u003c \"YES\" \u003c\u003c endl;\n        else cout \u003c\u003c \"NO\" \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint find(int x,int y,vector\u003cint\u003e v)\n{\n    if(x\u003ey) return 1;\n    int ans = pow(v[x],find(x+1,y,v));\n    return ans;\n}\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n){\n        cin \u003e\u003e v[v.size()-n--];\n    }\n    int q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x,y,v) \u003c\u003c endl;\n        if(v[x-1]%2) cout \u003c\u003c \"Odd\\n\";\n        else cout \u003c\u003c \"Even\\n\";\n    }\n}\n","score":0.117647058824,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    int q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]%2)?\"Odd\\n\":(v[x]==0?\"Odd\\n\":\"Even\\n\"));\n    }\n    \n}\n","score":0.823529411765,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    long n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    long q;cin \u003e\u003e q;\n    cout \u003c\u003c v[67] \u003c\u003c \" \" \u003c\u003c v[68] \u003c\u003c endl;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]\u00261)?\"Odd\\n\":(v[x]?\"Even\\n\":\"Odd\\n\"));\n    }\n    \n}\n","score":0.0,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    long n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    long q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]\u00261)?\"Odd\\n\":(v[x]?\"Even\\n\":\"Odd\\n\"));\n    }\n    \n}\n","score":0.823529411765,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    long n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    long q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]\u00261)?\"Odd\\n\":((v[x] \u0026\u0026 y\u003ex)?\"Even\\n\":\"Odd\\n\"));\n    }\n    \n}\n","score":0.470588235294,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    long n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    long q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]\u00261)?\"Odd\\n\":((v[x] \u0026\u0026 y!=x)?\"Even\\n\":\"Odd\\n\"));\n    }\n    \n}\n","score":0.470588235294,"language":"cpp14"},{"contest":"Master","challenge":"Even Odd Query","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccstdio\u003e\nusing namespace std;\nint main()\n{\n    long n;cin \u003e\u003e n;\n    vector\u003cint\u003e v(n);\n    while(n) cin \u003e\u003e v[v.size()-n--];\n    long q;cin \u003e\u003e q;\n    while(q--){\n        int x,y;cin \u003e\u003e x \u003e\u003e y;\n        //cout \u003c\u003c find(x-1,y-1,v) \u003c\u003c endl;\n        printf(\"%s\",(v[x-1]\u00261)?\"Odd\\n\":x!=y?(v[x]?\"Even\\n\":\"Odd\\n\"):\"Even\\n\");\n    }\n    \n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Filling Jars","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint main()\n{\n    int n,m;cin \u003e\u003e n \u003e\u003em;\n    int r=0;\n    while(m--){\n        int x,y,l;cin \u003e\u003e x \u003e\u003e y \u003e\u003e l;\n        r+=(y-x+1)*l;\n    }\n    cout \u003c\u003c r/n;\n}\n","score":0.230769230769,"language":"cpp14"},{"contest":"Master","challenge":"Filling Jars","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\n\nint main()\n{\n    long long n,m;cin \u003e\u003e n \u003e\u003em;\n    long long r=0;\n    while(m--){\n        long long x,y,l;cin \u003e\u003e x \u003e\u003e y \u003e\u003e l;\n        r+=(y-x+1)*l;\n    }\n    cout \u003c\u003c r/n;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Halloween party","code":"for _ in range(int(input())):\n    n=int(input())\n    m=round(n/2)\n    print(m*(n-m))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"John and GCD list","code":"import math\ndef lcm(a,b):\n    return round((a*b)/math.gcd(a,b))\nfor _ in range(int(input())):\n    n=int(input())\n    s=[int(i) for i in input().split()]\n    start = True\n    end=False\n    for i in range(n):\n        if i == 0:\n            print(lcm(s[i],s[i]),end=' ')\n        if i!=n-1:\n            print(lcm(s[i],s[i+1]),end=' ')\n        else:\n            print(lcm(s[i],s[i]),end=' ')\n    print()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Divisor Exploration II","code":"import math\np=[2]\nk=3\ndef gen(n,k):\n    while(len(p)\u003cn):\n        b=True\n        if(k%2==0):\n            b=False\n        else:\n            for j in range(3,int(math.sqrt(k)+1),2):\n                if k%j==0:\n                    b=False\n        if b and k not in p:\n            p.append(k)\n        k+=2\ndef sum(n):\n    return n*(n+1))/2\ndef subs(set):\n    #generate subset of p\n    #multiply elem of susbet \n    #perform sum\n    #perform sum of the sums\nfor _ in range(int(input())):\n    m,a=[int(i) for i in input().split()]\n    gen(m,k)\n    print(p[:m])\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Divisor Exploration II","code":"import math\np=[2]\nk=3\ndef gen(n,k):\n    while(len(p)\u003cn):\n        b=True\n        if(k%2==0):\n            b=False\n        else:\n            for j in range(3,int(math.sqrt(k)+1),2):\n                if k%j==0:\n                    b=False\n        if b and k not in p:\n            p.append(k)\n        k+=2\ndef sum(n):\n    s=n*(n+1)/2\n    return s\ndef subs(s):\n    #generate subset of p\n    #multiply elem of susbet \n    #perform sum\n    #perform sum of the sums\n    for i in range(1\u003c\u003c(len(s)-1)+1):\n        \nfor _ in range(int(input())):\n    m,a=[int(i) for i in input().split()]\n    gen(m,k)\n    print(p[:m])\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Combo Meal","code":"for _ in range(int(input())):\n    b,s,c=[int(i) for i in input().split()]\n    print(b+s-c)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Number Groups","code":"n=int(input())\nprint(sum([int(i)*2+1 for i in range(n,2*n)]))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Number Groups","code":"n=int(input())\nprint(sum([int(i)*2+1 for i in range(n,2*n)]))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Number Groups","code":"n=int(input())\nr=0\nfor i in range(n*(n-1)//2,n*(n-1)//2+n):\n    r+=(i*2+1)\nprint(r)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Stepping Stones Game","code":"import math\nfor _ in range(int(input())):\n    n=int(input())\n    m=(math.sqrt(1+8*n)-1)/2\n    if m==round(m):\n        print(\"Go On Bob\",round(m),sep=' ',end='\\n')\n    else:\n        print(\"Better Luck Next Time\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Minimum Absolute Difference in an Array","code":"def abs(n):\n    if n\u003c0:\n        return -n\n    return n\nn=input()\nl=sorted([int(i) for i in input().split()])\nn=abs(l[0]-l[1])\nfor i in range(len(l)-1):\n    n=min(n,abs(l[i]-l[i+1]))\nprint(n)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Luck Balance","code":"r=0\nn,k=[int(i) for i in input().split()]\nimp=[]\nfor _ in range(n):\n    l,t=[int(i) for i in input().split()]\n    if(t==0):\n        r+=l\n    else:\n        imp.append([l,t])\nimp.sort(reverse=True)\nfor i in range(len(imp)):\n    if k \u003e 0:\n        r+=imp[i][0]\n        k-=1\n    else:\n        r-=imp[i][0]\nprint(r)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 5: Poisson Distribution I","code":"import math\nn=float(input())\nk=float(input())\nprint(round(math.exp(-n)*pow(n,k)/math.factorial(k),3))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 3: Throw","code":"\n\n/*\n * Complete the isPositive function.\n * If 'a' is positive, return \"YES\".\n * If 'a' is 0, throw an Error with the message \"Zero Error\"\n * If 'a' is negative, throw an Error with the message \"Negative Error\"\n */\nfunction isPositive(a) {\n    if(a==0){\n        throw Error(\"Zero Error\");\n    }\n    else if(a\u003c0){\n        throw Error(\"Negative Error\");\n    }\n    else{\n        return \"YES\"\n    }\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 5: Inheritance","code":"\nRectangle.prototype.area=function(){\n    return this.w*this.h;\n}\nclass Square extends Rectangle{\n    constructor(a){\n        return new Rectangle(a,a);\n    }\n}\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 5: Inheritance","code":"\nRectangle.prototype.area=function(){\n    return this.w*this.h;\n}\nclass Square extends Rectangle{\n    constructor(l){\n        super(l,l)\n    }\n}\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Bit Manipulation: Lonely Integer","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    int n;cin \u003e\u003e n;\n    map\u003cint,bool\u003e m;\n    while(n--) {\n        int a;cin \u003e\u003e a;\n        m[a]=m[a]?0:1;\n    }\n    for(map\u003cint,bool\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(i-\u003esecond) cout \u003c\u003c i-\u003efirst;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cchar,char\u003e m;\n    m['{']='}';m['(']=')';m['[']=']';m[']']='[';m['}']='{';m[')']='(';\n    int t;cin \u003e\u003e t;\n    while(t--){\n        stack\u003cchar\u003e q;\n        string s;cin \u003e\u003e s;\n        bool v=1;\n        for(int i=0;i\u003cs.size();i++){\n            if(s[i]=='{' || s[i]=='[' || s[i]=='('){\n                q.push(s[i]);\n            }\n            else{\n                if(s[i]==m[q.top()]){\n                    q.pop();\n                }\n                else{\n                    v=0;break;\n                }\n            }\n        }\n        if(q.empty() \u0026\u0026 v) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cchar,char\u003e m;\n    m['{']='}';m['(']=')';m['[']=']';m[']']='[';m['}']='{';m[')']='(';\n    int t;cin \u003e\u003e t;\n    while(t--){\n        stack\u003cchar\u003e q;\n        string s;cin \u003e\u003e s;\n        bool v=1;\n        for(int i=0;i\u003cs.size();i++){\n            if(s[i]=='{' || s[i]=='[' || s[i]=='('){\n                q.push(s[i]);\n            }\n            else{\n                if(!q.empty()){\n                    if(s[i]==m[q.top()])\n                        q.pop();\n                }\n                else{\n                    v=0;break;\n                }\n            }\n        }\n        if(q.empty() \u0026\u0026 v) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":0.944444444444,"language":"cpp"},{"contest":"Master","challenge":"Balanced Brackets","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n    map\u003cchar,char\u003e m;\n    m['{']='}';m['(']=')';m['[']=']';m[']']='[';m['}']='{';m[')']='(';\n    int t;cin \u003e\u003e t;\n    while(t--){\n        stack\u003cchar\u003e q;\n        string s;cin \u003e\u003e s;\n        bool v=1;\n        for(int i=0;i\u003cs.size();i++){\n            if(s[i]=='{' || s[i]=='[' || s[i]=='('){\n                q.push(s[i]);\n            }\n            else{\n                if(!q.empty()){\n                    if(s[i]==m[q.top()])\n                        q.pop();\n                    else{\n                        v=0;break;\n                    }\n                }\n                else{\n                    v=0;break;\n                }\n            }\n        }\n        if(q.empty() \u0026\u0026 v) cout \u003c\u003c \"YES\\n\";\n        else cout \u003c\u003c \"NO\\n\";\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Tree: Height of a Binary Tree","code":"\n    int height(Node* root) {\n        if(root == NULL){\n            return -1;\n        }\n        else {\n            return 1+max(height(root-\u003eleft),height(root-\u003eright));\n        }\n    }\n\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Hash Tables: Ransom Note","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n,m; cin \u003e\u003e n \u003e\u003e m;\n    bool v=1;\n    map\u003cstring,int\u003e c;\n    while(n--){\n        string s; cin \u003e\u003e s;\n        c[s]++;\n    }\n    while(m--){\n        string s; cin \u003e\u003e s;\n        c[s]--;\n    }\n    for(map\u003cstring,int\u003e::iterator i=c.begin();i!=c.end() \u0026\u0026 v;i++)\n    {\n        if(i-\u003esecond\u003c0){\n            v=0;\n        }\n    }\n    cout \u003c\u003c (v?\"Yes\":\"No\");\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Subarray Sum","code":"#include \u003cbits/stdc++.h\u003e\n#define max(a,b,c) max(a,max(b,c))\nusing namespace std;\nlong m;\nlong sum(vector\u003clong\u003e v,int i, int j){\n    long r=0;\n    for(long k=i;k\u003cj;k++) r+=v[k];\n    return r;\n}\nlong f(vector\u003clong\u003e a,int i,int j) {\n    if(j\u003c=0 || i \u003e=a.size()) return 0;\n    return max(sum(a,i,j)%m,f(a,i+1,j),f(a,i,j-1));\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    long n;cin \u003e\u003e n \u003e\u003e m;\n    vector\u003clong\u003e v(n);\n    while(n){\n        cin \u003e\u003e v[v.size()-n--];\n    }\n    cout \u003c\u003c f(v,0,v.size());\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Subarray Sum","code":"#include \u003cbits/stdc++.h\u003e\n#define max(a,b,c) max(a,max(b,c))\nusing namespace std;\nlong m;\nlong sum(vector\u003clong\u003e v,int i, int j){\n    long r=0;\n    for(long k=i;k\u003cj;k++) r+=v[k];\n    return r;\n}\nlong f(vector\u003clong\u003e a,int i,int j) {\n    if(j\u003c=0 || i \u003e=a.size()) return 0;\n    return max(sum(a,i,j)%m,f(a,i+1,j),f(a,i,j-1));\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long n;cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e v(n);\n        while(n){\n            cin \u003e\u003e v[v.size()-n--];\n        }\n        cout \u003c\u003c f(v,0,v.size()) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Subarray Sum","code":"#include \u003cbits/stdc++.h\u003e\n#define max(a,b,c) max(a,max(b,c))\nusing namespace std;\nlong m;\nlong sum(vector\u003clong\u003e v){\n    long r=0;\n    for(auto k:v) r+=k;\n    return r;\n}\nlong f(vector\u003clong\u003e\u0026 a,long s,int i,int j) {\n    if(j\u003c=0 || i \u003e=a.size()) return 0;\n    return max(s%m,f(a,s-a[i],i+1,j)%m,f(a,s-a[j-1],i,j-1));\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long n;cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e v(n);\n        while(n){\n            cin \u003e\u003e v[v.size()-n--];\n        }\n        long s=sum(v);\n        cout \u003c\u003c f(v,s,0,v.size()) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Maximum Subarray Sum","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cutility\u003e\n#define max(a,b,c) max(a,max(b,c))\nusing namespace std;\nlong m;\nmap\u003cpair\u003cint,int\u003e,long\u003e c;\nlong sum(vector\u003clong\u003e v){\n    long r=0;\n    for(auto k:v) r+=k;\n    return r;\n}\nlong f(vector\u003clong\u003e\u0026 a,long s,int i,int j) {\n    if(j\u003c=0 || i \u003e=a.size()) return 0;\n    pair\u003cint,int\u003e p=make_pair(i,j);\n    if(c[p]) return c[p];\n    c[p]=max(s%m,f(a,s-a[i],i+1,j),f(a,s-a[j-1],i,j-1));\n    return c[p];\n}\nint main()\n{\n    int t;cin \u003e\u003e t;\n    while(t--){\n        long n;cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e v(n);\n        while(n){\n            cin \u003e\u003e v[v.size()-n--];\n        }\n        long s=sum(v);\n        cout \u003c\u003c f(v,s,0,v.size()) \u003c\u003c endl;\n        c.clear();\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Day 8: Create a Button","code":"vFwhcNpSeA-zN1YgbtmioA","score":20.0,"language":"[\"html\", \"js\", \"css\"]"},{"contest":"Master","challenge":"Day 8: Create a Button","code":"vFwhcNpSeA-zN1YgbtmioA","score":20.0,"language":"[\"html\", \"js\", \"css\"]"},{"contest":"Master","challenge":"Day 8: Buttons Container","code":"6-ejT9C7w6F3JugtLpAKjg","score":0.0,"language":"[\"html\", \"js\", \"css\"]"},{"contest":"Master","challenge":"Day 8: Buttons Container","code":"6-ejT9C7w6F3JugtLpAKjg","score":25.0,"language":"[\"html\", \"js\", \"css\"]"},{"contest":"Master","challenge":"Day 9: Binary Calculator","code":"0X-mRXlXVSQS6Ms6v0kO3w","score":30.0,"language":"[\"html\", \"js\", \"css\"]"},{"contest":"Master","challenge":"Day 5: Template Literals","code":"\n\n/*\n * Determine the original side lengths and return an array:\n * - The first element is the length of the shorter side\n * - The second element is the length of the longer side\n * \n * Parameter(s):\n * literals: The tagged template literal's array of strings.\n * expressions: The tagged template literal's array of expression values (i.e., [area, perimeter]).\n */\nfunction sides(literals, ...expr) {\n    var s_1=(expr[1]+Math.sqrt(expr[1]*expr[1]-16*expr[0]))/4;\n    var s_2=(expr[1]-Math.sqrt(expr[1]*expr[1]-16*expr[0]))/4;\n    return [s_1,s_2].sort();\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Day 6: JavaScript Dates","code":"\n\n// The days of the week are: \nlet days=[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nfunction getDayName(dateString) {\n    let d = new Date(dateString);\n    return days[d.getDay()];\n}\n\n","score":1.0,"language":"javascript"},{"contest":"Master","challenge":"Weather Observation Station 17","code":"select round(LONG_W,4) from STATION where LAT_N\u003e38.7780 order by LAT_N limit 1;","score":1.0,"language":"mysql"},{"contest":"Master","challenge":"Weather Observation Station 18","code":"select round(abs(max(LAT_N)-min(Lat_N))+abs(max(LONG_W)-min(LONG_W)),4) from station;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 19","code":"select round(sqrt(power(max(s.LAT_N)-min(s.LAT_N),2)+power(max(s.LONG_W)-min(s.LONG_W),2)),4) from station s;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Weather Observation Station 20","code":"select round(MEDIAN(LAT_N),4) from station;","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"The Blunder","code":"select ceil(avg(Salary)-avg(replace(Salary,\"0\",\"\"))) from EMPLOYEES ;","score":1.0,"language":"mysql"},{"contest":"Master","challenge":"The Blunder","code":"select ceil(avg(Salary)-avg(replace(Salary,\"0\",\"\"))) from EMPLOYEES ;","score":1.0,"language":"mysql"},{"contest":"Master","challenge":"Type of Triangle","code":"select \n    case\n        when a\u003e=b+c or b\u003e=a+c or c\u003e=a+b then 'Not A Triangle'\n        when a=b and b=c then 'Equilateral'\n        when a=b or a=c or b=c then 'Isosceles'\n        else 'Scalene'\n    End \nfrom TRIANGLES;\n","score":1.0,"language":"oracle"},{"contest":"Master","challenge":"Draw The Triangle 1","code":"declare @i INT = 20\nwhile(@i\u003e0)\n    begin\n        declare @j INT= @i\n        while(@j\u003e0)\n            begin\n                PRINT \"*\"\n            end\n        set @i=@i-1\n    end","score":0.0,"language":"tsql"},{"contest":"Master","challenge":"Draw The Triangle 1","code":"declare @i INT = 20\nwhile(@i\u003e0)\n    begin\n        print replicate(\"* \",@i)\n        set @i=@i-1\n    end","score":1.0,"language":"tsql"},{"contest":"Master","challenge":"Draw The Triangle 2","code":"declare @i INT =1\nwhile(@i\u003c=20)\n    begin\n        print replicate(\"* \",@i)\n        set @i=@i+1\n    end","score":1.0,"language":"tsql"},{"contest":"Master","challenge":"Day 17: More Exceptions","code":"class Calculator:\n    def power(self,n,p):\n        if(n\u003c0 or p\u003c0):\n            raise Exception(\"n and p should be non-negative\")\n        else:\n            return n**p\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 17: More Exceptions","code":"\nclass Calculator {\n    constructor() {};\n    power(n, p) {\n        if (n \u003c 0 || p \u003c 0) {\n            throw new Error(\"n and p should be non-negative\");\n        }\n        else\n            return Math.pow(n, p);\n    }\n}\n","score":0.0,"language":"javascript"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=a.split()\n    b=b.split()\n    if(a[2]\u003cb[2]):\n        return 1000\n    else:\n        if(a[1]\u003cb[1]):\n            return (int(b[1])-int(a[1]))*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (int(b[0])-int(a[0]))*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.444444444444,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=a.split()\n    b=b.split()\n    if(a[2]\u003cb[2]):\n        return 1000\n    else:\n        if(a[1]\u003cb[1]):\n            return (int(b[1])-int(a[1]))*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (int(b[0])-int(a[0]))*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.444444444444,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(b[2]==a[2]+1 and b[0]==1 and b[1]==1):\n        b[2]=a[2]\n        b[1]=12\n        b[0]=31\n    if(b[2]+1==a[2] and a[0]==1 and a[1]==1):\n        a[2]=b[2]\n        a[1]=12\n        a[0]=31\n    if(a[2]\u003cb[2]):\n        return 1000\n    else:\n        if(a[1]\u003cb[1]):\n            return (int(b[1])-int(a[1]))*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (int(b[0])-int(a[0]))*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(b[2]==a[2]+1 and b[0]==1 and b[1]==1):\n        b[2]=a[2]\n        b[1]=12\n        b[0]=31\n    if(b[2]+1==a[2] and a[0]==1 and a[1]==1):\n        a[2]=b[2]\n        a[1]=12\n        a[0]=31\n    if(a[2]\u003cb[2]):\n        return 10000\n    else:\n        if(a[1]\u003cb[1]):\n            return (int(b[1])-int(a[1]))*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (int(b[0])-int(a[0]))*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.777777777778,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(a[2]\u003cb[2]):\n        return 10000\n    else:\n        if(a[1]\u003cb[1]):\n            return (b[1]-a[1])*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (b[0]-a[0])*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.777777777778,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(b[2]+1==a[2] and a[0]==1 and a[1]==1):\n        a[2]=b[2]\n        a[1]=12\n        a[0]=31\n    if(a[2]\u003cb[2]):\n        return 10000\n    else:\n        if(a[1]\u003cb[1]):\n            return (b[1]-a[1])*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (b[0]-a[0])*15\n            else:\n                return 0\nprint(f(input(),input()))\n","score":0.888888888889,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(b[2]+1==a[2] and a[0]==1 and a[1]==1):\n        a[2]=b[2]\n        a[1]=12\n        a[0]=31\n    if(a[2]\u003cb[2]):\n        return 10000\n    elif a[2]==b[2]:\n        if(a[1]\u003cb[1]):\n            return (b[1]-a[1])*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (b[0]-a[0])*15\n            else:\n                return 0\n    else:\n        return 0;\nprint(f(input(),input()))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 26: Nested Logic","code":"def f(b,a):\n    a=[int(i) for i in a.split()]\n    b=[int(i) for i in b.split()]\n    if(b[2]+1==a[2] and a[0]==1 and a[1]==1):\n        a[2]=b[2]\n        a[1]=12\n        a[0]=31\n    if(a[2]\u003cb[2]):\n        return 10000\n    elif a[2]==b[2]:\n        if(a[1]\u003cb[1]):\n            return (b[1]-a[1])*500\n        else:\n            if(a[0]\u003cb[0]):\n                return (b[0]-a[0])*15\n            else:\n                return 0\n    else:\n        return 0\nprint(f(input(),input()))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Backreferences To Failed Groups","code":"Regex_Pattern = r\"^(\\d{2}(-)?){3}\\d{2}$\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Backreferences To Failed Groups","code":"Regex_Pattern = r\"^(\\d{8})|((\\d{2}(-)){3}\\d{2})$\"\t# Do not delete 'r'.\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Backreferences To Failed Groups","code":"Regex_Pattern = r\"^((\\d{8})|((\\d{2}(-)){3}\\d{2}))$\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Forward References","code":"\n\n$Regex_Pattern = '/(\\2tic|(tac))+/'; //Do not delete '/'. Replace __________ with your regex.\n\n","score":0.0,"language":"php"},{"contest":"Master","challenge":"Forward References","code":"\n\n$Regex_Pattern = '/^(\\2tic|(tac))+$/'; //Do not delete '/'. Replace __________ with your regex.\n\n","score":1.0,"language":"php"},{"contest":"Master","challenge":"Alien Username","code":"import re\nfor i in range(int(input())):\n    if re.match(\"^(_|\\.)\\d+(0|[a-zA-Z]+(._|_?))$\",input()):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":0.181818181818,"language":"python3"},{"contest":"Master","challenge":"Alien Username","code":"import re\nfor i in range(int(input())):\n    if re.match(\"^(_|\\.)\\d+(0|[a-zA-Z]+(._|_?))$\",input()):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":0.181818181818,"language":"python3"},{"contest":"Master","challenge":"Alien Username","code":"import re\nfor i in range(int(input())):\n    if re.match(\"^(_|\\.)\\d+(0|[a-zA-Z]*(_?))$\",input()):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Alien Username","code":"import re\nfor i in range(int(input())):\n    if re.match(\"^(_|\\.)\\d+0|[a-zA-Z]*(_?))$\",input()):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Alien Username","code":"import re\nfor i in range(int(input())):\n    if re.match(\"^(_|\\.)\\d+0|[a-zA-Z]*(_?)$\",input()):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":0.090909090909,"language":"python3"},{"contest":"Master","challenge":"HackerRank Tweets","code":"import re\nr=0\nfor _ in range(int(input())):\n    if(re.findall(\"hackerrank\",input(),flags=re.IGNORECASE|re.VERBOSE)):\n        r+=1\nprint(r)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Utopian Identification Number","code":"import re\nfor _ in range(int(input())):\n    if(re.match(\"^[a-z]{0,3}\\d{2,8}[A-Z]{3,}$\",input())):\n        print(\"VALID\")\n    else:\n        print(\"INVALID\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Valid PAN format","code":"import re\nfor _ in range(int(input())):\n    if(re.match(\"^[A-Z]{5}\\d{4}[A-Z]$\",input())):\n        print(\"YES\")\n    else :\n        print(\"NO\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Summing the K-N series ","code":"m=10**9+7\ndef pow_(n,k):\n    t=1\n    while k\u003e0:\n        if k%2==1:\n            t=((t%m)*(n%m))%m\n        n=((n%m)*(n%m))%m\n        k\u003e\u003e=1\n    return t%m\ndef sum_(n,k):\n    if(n==1):\n        return 1\n    else:\n        return pow_(n,k)+sum_(n-1,k)\nfor _ in range(int(input())):\n    tn,k=map(int,input().split())\n    print(sum_(tn,k))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"Summing the K-N series ","code":"m=10**9+7\ndef pow_(n,k):\n    t=1\n    while k\u003e0:\n        if k%2==1:\n            t=((t%m)*(n%m))%m\n        n=((n%m)*(n%m))%m\n        k\u003e\u003e=1\n    return t%m\ndef sum_(n,k):\n    if(n==1):\n        return 1\n    else:\n        return pow_(n,k)+sum_(n-1,k)\ndef sum__(n,k):\n    t=0\n    for i in range(1,n+1):\n        t+=pow_(i,k)\n    return t\nfor _ in range(int(input())):\n    tn,k=map(int,input().split())\n    print(sum__(tn,k))\n","score":0.157894736842,"language":"python3"},{"contest":"Master","challenge":"Summing the K-N series ","code":"m=10**9+7\ndef pow_(n,k):\n    t=1\n    while k\u003e0:\n        if k%2==1:\n            t=((t%m)*(n%m))%m\n        n=((n%m)*(n%m))%m\n        k\u003e\u003e=1\n    return t%m\ndef sum_(n,k):\n    if(n==1):\n        return 1\n    else:\n        return (pow_(n,k)+sum_(n-1,k))%m\ndef sum__(n,k):\n    t=0\n    for i in range(1,n+1):\n        t=(t+pow_(i,k)%m)%m\n    return t%m\nfor _ in range(int(input())):\n    tn,k=map(int,input().split())\n    print(sum__(tn,k))\n","score":0.157894736842,"language":"python3"},{"contest":"ProjectEuler+","challenge":"Project Euler #187: Semiprimes","code":"from math import sqrt\nf={0:1}\ndef F(n):\n    if n in f:\n        return f[n]\n    else:\n        f[n]=n*F(n-1)\n        return f[n]\ndef C(n,k):\n    return F(n)//(F(n-k)*F(k))\np=[2]\ndef G(n):\n    for i in range(3,n,2):\n        j=0\n        is_p=1\n        if i%2==0:\n            continue\n        while j\u003clen(p) and p[j] \u003c= sqrt(n):\n            if(i%p[j]==0):\n                is_p=0\n                break; \n            j+=1\n        if is_p :\n            p.append(i)\ninputs=[]\nfor t in range(int(input())):\n    inputs.append(int(input()))\nm=max(inputs)\nG(m)\nfor k in inputs:\n    r=0\n    for i in p :\n        if i \u003ck:\n            r+=1\n        else:\n            break\n    print(C(r,2))\n","score":0.0,"language":"python3"},{"contest":"ProjectEuler+","challenge":"Project Euler #187: Semiprimes","code":"from math import sqrt\nf={0:1}\ndef F(n):\n    if n in f:\n        return f[n]\n    else:\n        f[n]=n*F(n-1)\n        return f[n]\ndef C(n,k):\n    return F(n)//(F(n-k)*F(k))\np=[2]\ndef G(n):\n    for i in range(3,int(sqrt(n)),2):\n        j=0\n        is_p=1\n        if i%2==0:\n            continue\n        while j\u003clen(p) and p[j] \u003c= sqrt(n):\n            if(i%p[j]==0):\n                is_p=0\n                break; \n            j+=1\n        if is_p :\n            p.append(i)\ninputs=[]\nfor t in range(int(input())):\n    inputs.append(int(input()))\nm=max(inputs)\nG(m)\nfor k in inputs:\n    r=0\n    for i in p :\n        if i \u003csqrt(k):\n            r+=1\n        else:\n            break\n    print(C(2*r,2))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Branch Reset Groups","code":"\n\n$Regex_Pattern = '/^(\\d{2})(-|---|:|\\.)(\\d{2})\\2(\\d{2})\\2(\\d{2})$/'; //Do not delete '/'. Replace __________ with your regex.\n\n","score":1.0,"language":"php"},{"contest":"Master","challenge":"Positive Lookahead","code":"\n\n$Regex_Pattern = '/o(?=oo)/'; //Do not delete '/'. Replace __________ with your regex.\n\n","score":1.0,"language":"php"},{"contest":"Master","challenge":"Negative Lookahead","code":"\n\n$Regex_Pattern = '/(.)(?!\\1)/'; //Do not delete '/'. Replace __________ with your regex.\n\n","score":1.0,"language":"php"},{"contest":"Master","challenge":"Negative Lookahead","code":"Regex_Pattern = r\"(.)(?!\\1)\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Positive Lookbehind","code":"Regex_Pattern = r\"(?\u003c=[13579])\\d\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Negative Lookbehind","code":"Regex_Pattern = r\"(?\u003c![aoiueAOIUE]).\"\t# Do not delete 'r'.\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Split the Phone Numbers","code":"import re\nfor _ in range(int(input())):\n    s=re.split(\"(-| )\",input())\n    print(\"CountryCode=\"+s[0]+\",LocalAreaCode=\"+s[2]+\",Number=\"+s[4])\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find a Word","code":"import re\nsentences=\"\"\npatterns=[]\nfor _ in range(int(input())):\n    sentences=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(re.findall(\"(\\W|\\b|^)\"+input()+\"(\\W|\\b|$)\",sentences)))\n","score":0.1,"language":"python3"},{"contest":"Master","challenge":"Find a Word","code":"import re\nsentences=\"\"\npatterns=[]\nfor _ in range(int(input())):\n    sentences+=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(re.findall(\"(\\W|\\b|^)\"+input()+\"(\\W|\\b|$)\",sentences)))\n","score":0.1,"language":"python3"},{"contest":"Master","challenge":"Find a Word","code":"import re\nsentences=\"\"\npatterns=[]\nfor _ in range(int(input())):\n    sentences+=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(re.findall(\"(\\\\b|\\W)\"+input()+\"(\\\\b|\\W)\",sentences)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Detecting Valid Latitude and Longitude Pairs","code":"import re\nfor _ in range(int(input())):\n    if re.match(\"^\\((\\+?|-)(([0-9]|([1-8][0-9]))(\\.\\d+)?|(90(.0+)?)), (\\+?|-)(([0-9]|([1-9][0-9])|(1[0-7][0-9]))(\\.\\d+)?|(180(.0+)?))\\)$\",input()):\n        print(\"Valid\")\n    else:\n        print(\"Invalid\")\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find A Sub-Word","code":"from re import *\ns=\"\"\nq=[]\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(findall(\"\\w\"+input()+\"\\w\",s)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Detect the Email Addresses","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\" \"\nprint(\";\".join(sorted(list(set(re.findall(\"\\w+@\\w+\\.\\w+\",s))))))\n","score":0.6,"language":"python3"},{"contest":"Master","challenge":"The British and American Style of Spelling","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    word=input()\n    print(len(re.findall(\" \"+word[:len(word)-2]+\"(s|z)e \",s)))\n","score":0.4,"language":"python3"},{"contest":"Master","challenge":"The British and American Style of Spelling","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    word=input()\n    print(len(re.findall(\" \"+word[:len(word)-2]+\"(s|z)e \",s)))\n","score":0.4,"language":"python3"},{"contest":"Master","challenge":"The British and American Style of Spelling","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    word=input()\n    print(len(re.findall(\" \"+word[:len(word)-2]+\"(s|z)e \",s)))\n","score":0.4,"language":"python3"},{"contest":"Master","challenge":"The British and American Style of Spelling","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    word=input()\n    print(len(re.findall(\" \"+word[:len(word)-2]+\"(s|z)e \",s)))\n","score":0.4,"language":"python3"},{"contest":"Master","challenge":"The British and American Style of Spelling","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\"\\n\"\nfor _ in range(int(input())):\n    word=input()\n    print(len(re.findall(word[:len(word)-2]+\"(s|z)e\",s)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Building a Smart IDE: Identifying comments","code":"import re\nimport sys\nt=sys.stdin.read()\nl=re.findall(\"(?m)(?s)(\\/\\*.*?\\*\\/)|(\\/\\/.*?$)\",t)\nfor i in l:\n    if(i[0]==\"\"):\n        print(i[1])\n    else:\n        print(i[0])\n","score":0.772727272727,"language":"python3"},{"contest":"Master","challenge":"Building a Smart IDE: Identifying comments","code":"import re\nimport sys\nprint(\"\\n\".join(re.sub(r'\\n\\s+','\\n',i[0]!=\"\" and i[0] or i[1]) for i in re.findall(r'(?m)(?s)(\\/\\*.*?\\*\\/)|(\\/\\/.*?$)',sys.stdin.read())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Detect the Domain Name","code":"import sys\nimport re\nprint(\";\".join(sorted(list(set([i[3] for i in re.findall(\"http(s|):\\/\\/(ww(w|2)\\.)?([\\w\\-\\.]+\\.[a-z]+)\",sys.stdin.read()) ])))))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Building a Smart IDE: Programming Language Detection","code":"import re\nimport sys\nt=sys.stdin.read()\nif re.search(\"(?i)(?m)import java\\..*\",t):\n    print(\"Java\")\nelif re.match(\"(?i)(?m)\\#include\\\u003c[a-zA-Z]+\\.h\\\u003e\",t):\n    print(\"C\")\nelse:\n    print(\"Python\")\n\n","score":0.928571428571,"language":"python3"},{"contest":"Master","challenge":"Building a Smart IDE: Programming Language Detection","code":"import re\nimport sys\nt=sys.stdin.read()\nif re.search(\"(?i)(?m)import java\\..*\",t):\n    print(\"Java\")\nelif re.search(\"(?i)(?m)\\#include\\\u003c[a-zA-Z]+\\.h\\\u003e\",t):\n    print(\"C\")\nelse:\n    print(\"Python\")\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"UK and US: Part 2","code":"import re\ntext=\"\"\nfor _ in range(int(input())):\n    text+=input()+\"\\n\"\nfor _ in range(int(input())):\n    pat=input()\n    print(len(re.findall(\"\"+pat[:len(pat)-3]+\"ou?r\",text)))\n\n","score":0.7,"language":"python3"},{"contest":"Master","challenge":"UK and US: Part 2","code":"import re\ntext=\"\"\nfor _ in range(int(input())):\n    text+=input()+\"\\n\"\nfor _ in range(int(input())):\n    pat=input()\n    print(len(re.findall(\" \"+pat[:len(pat)-3]+\"ou?r \",text)))\n\n","score":0.2,"language":"python3"},{"contest":"Master","challenge":"UK and US: Part 2","code":"import re\ntext=\"\"\nfor _ in range(int(input())):\n    text+=input()+\"\\n\"\nfor _ in range(int(input())):\n    pat=input()\n    print(len(re.findall(\"\"+pat[:len(pat)-3]+\"ou?r\",text)))\n\n","score":0.7,"language":"python3"},{"contest":"Master","challenge":"UK and US: Part 2","code":"import re\ntext=\"\"\nfor _ in range(int(input())):\n    text+=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(re.findall(re.sub(\"ou\",\"ou?\",input()),text)))\n\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"UK and US: Part 2","code":"import re\ntext=\"\"\nfor _ in range(int(input())):\n    text+=input()+\"\\n\"\nfor _ in range(int(input())):\n    print(len(re.findall(\"\\\\b\"+re.sub(\"ou\",\"ou?\",input())+\"\\\\b\",text)))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Detect the Email Addresses","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\" \"\nprint(\";\".join(sorted(list(set(re.findall(\"[\\w\\.]+@\\w+\\.\\w+\",s))))))\n","score":0.6,"language":"python3"},{"contest":"Master","challenge":"Detect the Email Addresses","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\" \"\nprint(\";\".join(sorted(list(set(re.findall(\"[\\w\\.]+@(\\w+\\.)+\\w+\",s))))))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Detect the Email Addresses","code":"import re\ns=\"\"\nfor _ in range(int(input())):\n    s+=input()+\" \"\nprint(\";\".join(sorted(list(set(re.findall(\"[\\w\\.]+@[\\w\\.]+\\w+\",s))))))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^ ]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c.*\\\u003e)+)?([\\w\\. ]+)(?:\\\u003c.*\\\u003e)+\",sys.stdin.read())))\n","score":0.6,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^ ]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c.*\\\u003e)+)?([\\w\\. ]+)(?:\\\u003c.*\\\u003e)+\",sys.stdin.read())))\n","score":0.6,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^ ]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\. ]+)(?:\\\u003c[^\\\u003e]*\\\u003e)+\",sys.stdin.read())))\n","score":0.7,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\. ]+)(?:\\\u003c[^\\\u003e]*\\\u003e)+\",sys.stdin.read())))\n","score":0.7,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\, ]+)(?:\\\u003c[^\\\u003e]*\\\u003e)+\",sys.stdin.read())))\n","score":0.8,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\, ]+)?(?:\\\u003c[^\\\u003e]*\\\u003e)+\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\,\\/ ]+)?(?:\\\u003c[^\\\u003e]*\\\u003e)+\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\,\\/ ]+)?(?:\\\u003c[^\\\u003e]*\\\u003e)+)?\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\n\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\,\\/ ]+)?(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\,\\/ ]+)?(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"([^\\ \\\u003e]*)\\\"(?:[^\u003e]+)?\\\u003e(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?([\\w\\.\\,\\/\\ ]+)?(?:(?:\\\u003c[^\\\u003e]*\\\u003e)+)?\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e([\\w\\.\\,\\/ ]+)(?:\\\u003c.*\\\u003e)\",sys.stdin.read())))\n","score":0.6,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]+)\",sys.stdin.read())))\n","score":0.8,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]*)\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j.strip() for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]*)\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j.strip() for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]*)\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j.strip() for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]*)\",sys.stdin.read())))\n","score":0.9,"language":"python3"},{"contest":"Master","challenge":"Detect HTML links","code":"import re\nimport sys\nprint(\"\\n\".join(\",\".join(j.strip() for j in i) for i in re.findall(\"\\\u003ca href=\\\"(.*?)\\\".*?\\\u003e(?\u003c=\\\u003e)([\\w\\.\\,\\/ ]+)?(?=\\\u003c\\/)\",sys.stdin.read())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Alternating Characters ","code":"for _ in range(int(input())):\n    w=\" \"+input()\n    r=0\n    for i in range(1,len(w)):\n        if w[i]==w[i-1]:\n            r+=1\n    print(r)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Beautiful Binary String","code":"import re \nn=input()\nprint(len(re.findall(\"(010)\",input())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Funny String","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003cstring\u003e\n\nusing namespace std;\nint* calcDiff(string s){\n    int* r=(int*) malloc(s.size()*sizeof(int));\n    for(int i=1;i\u003cs.size();i++){\n        r[i-1]=abs((int)s[i]-(int)s[i-1]);\n    }\n    return r;\n}\nbool checkPal(int* s,int l){\n    for(int i=0;i\u003c=l/2;i++){\n        if(s[i]!=s[l-1-i]) return 0;\n    }\n    return 1;\n}\nbool funnyString(string s) {\n    return checkPal(calcDiff(s),s.size()-1);\n}\n\nint main()\n{\n    int n;cin \u003e\u003en;\n    while(n--){\n        string s;cin \u003e\u003e s;\n        cout \u003c\u003c (funnyString(s)?\"Funny\":\"Not Funny\") \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Gemstones","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;cin \u003e\u003e n;\n    int memo=n;\n    map\u003cchar,int\u003e m;\n    while(n--){\n        string s;cin \u003e\u003e s;\n        map\u003cchar,bool\u003e temp;\n        for(auto i:s){\n            m[i]+=temp[i]?0:1;\n            temp[i]=1;\n        }\n    }\n    int r=0;\n    for(map\u003cchar,int\u003e::iterator i=m.begin();i!=m.end();i++){\n        if(i-\u003esecond==memo) r++;\n    }\n    cout \u003c\u003c r \u003c\u003c endl;\n}\n","score":1.0,"language":"cpp14"},{"contest":"Master","challenge":"Password Cracker","code":"import re\nfor _ in range(int(input())):\n    n=input()\n    s=input().split()\n    m=\"\".join([\"(\"+i+\")?\" for i in s])\n    code=input()\n    matches=re.findall(m,code)\n    for i in s:\n        code=re.sub(r''+i,\"\",code)\n    if code!=\"\":\n        print(\"WRONG PASSWORD\")\n    else:\n        r=\"\"\n        for i in matches:\n            for j in i:\n                if j!=\"\":\n                    r+=j.strip()+\" \"\n        print(r.strip())\n","score":0.5,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"for _ in range(int(input())):\n    i=2*int(input())\n    if i//42 !=0:\n        print(i+2*(i//42))\n    else:\n        print(i)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"m=10**9+7\nfor _ in range(int(input())):\n    i=2*int(input())\n    if i//42 !=0:\n        print((i+2*(i//42))%m)\n    else:\n        print(i%m)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"m=10**9+7\nfor _ in range(int(input())):\n    s=int(input())\n    i=1\n    while s\u003e0 :\n        if(i%2==0 and i%42!=0):\n            s-=1\n        i+=1\n    i-=1\n    print(i%m)\n        \n","score":0.111111111111,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"from math import *\nm=10**9+7\nfor _ in range(int(input())):\n    i=int(input())\n    if i%20==0:\n        print(42*(i//20)-2)\n    else:\n        print(42*(i//20)+2*(i%20))\n    \n","score":0.222222222222,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"from math import *\nm=10**9+7\nfor _ in range(int(input())):\n    i=int(input())\n    if i%20==0:\n        i=(42*(i//20)-2)\n    else:\n        i=(42*(i//20)+2*(i%20))\n    print(i)\n    \n","score":0.222222222222,"language":"python3"},{"contest":"Master","challenge":"Wet Shark and 42","code":"from math import *\nm=10**9+7\nfor _ in range(int(input())):\n    i=int(input())\n    if i%20==0:\n        i=(42*(i//20)-2)\n    else:\n        i=(42*(i//20)+2*(i%20))\n    print(i%m)\n    \n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Square","code":"for _ in range(int(input())):\n    print((2**(int(input())+1)+2))\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Square","code":"m=10**9+7\nfor _ in range(int(input())):\n    n=int(input())\n    print((2**(n+1)+2)%m)\n","score":0.125,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Square","code":"m=10**9+7\nfor _ in range(int(input())):\n    n=int(input())\n    print(((1\u003c\u003c(n+1))+2)%m)\n","score":0.25,"language":"python3"},{"contest":"Master","challenge":"Sherlock and Square","code":"m=10**9+7\ndef pew(a,b):\n    t=1\n    while b\u003e0:\n        if b%2==1:\n            t=(t%m)*(a%m)\n        a=(a%m)*(a%m)\n        b\u003e\u003e=1\n    return t%m\nfor _ in range(int(input())):\n    n=int(input())\n    print((pew(2,n+1)+2)%m)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Easy sum","code":"for _ in range(int(input())):\n    n,m=map(int,input().split())\n    print((n//m)*m*(m-1)//2+(n%m)*(n%m +1)//2)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"The Simplest Sum","code":"from math import *\ndef f(k,n):\n    m=floor(log((k-1)*n+1)/log(k))\n    return (1/(1-k))*(m-k*(1-k**m)/(1-k))\nfor _ in range(int(input())):\n    k,a,b=map(int,input().split())\n    r=0\n    for i in range(a,b+1):\n       r+=f(k,i)\n    print(r) \n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"The Simplest Sum","code":"from math import *\nmo=10**9+7\ndef pew(a,b,m):\n    t=1\n    while b\u003e0:\n        if b%2!=0:\n            t=((t%m)*(a%m))%m\n        a=((a%m)*(a%m))%m\n        b\u003e\u003e=1\n    return t%m\ndef f(k,n):\n    m=floor(log((k-1)*n+1)/log(k))\n    return int((1/(1-k))*(m-k*(1-k**m)/(1-k)))\nfor _ in range(int(input())):\n    k,a,b=map(int,input().split())\n    r=0\n    for i in range(a,b+1):\n       r+=f(k,i)%mo\n    print(r%mo) \n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Simple Array Sum","code":"#include \u003cassert.h\u003e\n#include \u003climits.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\nint main(){\n    int n;\n    scanf(\"%d\",\u0026n);\n    int* s=malloc((n+1)*sizeof(int));\n    for(int i=0;i\u003cn;i++){\n        scanf(\"%d\",s+i);\n    }\n    s[n]=-1;\n    n=0;\n    for(;*s!=-1;*s++){\n        n+=*s;\n    }\n    printf(\"%d\",n);\n}\n","score":1.0,"language":"c"},{"contest":"Master","challenge":"Circular Palindromes","code":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\nchar* s;\nint n;\nmap\u003cpair\u003cint,int\u003e,int\u003e m;\nint big_Pal(int a,int b)\n{\n\n    pair\u003cint,int\u003e p=make_pair(a%n,b%n);\n    if(m[p]) return m[p]; \n    else\n    {\n        if(a%n==b%n)\n        {\n            m[p]=1;\n            return m[p];\n        }\n        for(int i=0;i\u003c=(b-a)/2;i++)\n        {\n            if(s[(a+i)%n]!=s[(b-i)%n])\n            {\n                m[p]=max(big_Pal(a+1,b),big_Pal(a,b-1));\n                return m[p];\n            }     \n        }\n        m[p]=b-a+1;\n        return m[p];\n    }\n}\nint main()\n{\n    scanf(\"%d\",\u0026n);s=(char*)malloc((n+1)*sizeof(char));\n    scanf(\"%s\",s);\n    int i=0;\n    while(i\u003cn)\n    {\n        int count=big_Pal(i,n-1+i);\n        cout \u003c\u003c count \u003c\u003c \"\\n\";i++;\n    }\n}\n","score":0.236220472441,"language":"cpp"},{"contest":"Master","challenge":"Solve Me First FP","code":"open System\n\n[\u003cEntryPoint\u003e]\nlet main argv = \n    let a = Console.ReadLine() |\u003e int\n    let b = Console.ReadLine() |\u003e int\n    printfn \"%d\" (a+b)\n    0 // return an integer exit code\n\n","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"String Function Calculation","code":"import re\nlst=[]\ndef subString(Str): \n    for Len in range(1,len(Str) + 1): \n        for i in range(len(Str) - Len + 1):\n            s=\"\" \n            j = i + Len - 1\n            for k in range(i,j + 1): \n                s+=Str[k]\n            lst.append(s)\ndef f(s):\n    st =[]\n    r=0\n    for i in lst :\n        st=re.findall(\"(?=(\"+i+\"))\",s)\n        r=max(r,len(st)*len(i))\n    print(r)\n\ns=input()\nsubString(s)\nf(s)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Function Calculation","code":"import re\nlst=[]\ndic={}\ndef subString(Str): \n    for Len in range(1,len(Str) + 1): \n        for i in range(len(Str) - Len + 1):\n            s=\"\" \n            j = i + Len - 1\n            for k in range(i,j + 1): \n                s+=Str[k]\n            if not s in dic:\n                lst.append(s)\n                dic[s]=1\ndef f(s):\n    st =[]\n    r=0\n    for i in lst :\n        st=re.findall(\"(?=(\"+i+\"))\",s)\n        r=max(r,len(st)*len(i))\n    print(r)\n\ns=input()\nsubString(s)\nf(s)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Strange Counter","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\nint main()\n{\n   long long k;cin \u003e\u003e k;\n   long long n = (long long)log2(1+(k-1)/3);\n   long long r=(3*(1ll\u003c\u003cn))-k+(3*((1ll\u003c\u003cn)-1)+1);//- offset;//-(k-3*(1\u003c\u003c--n));\n   cout \u003c\u003c r ;\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 !((s%5==0 \u0026\u0026 s!=5) || (s%2==0 \u0026\u0026 s!=2))) \n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c3; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 !((s%5==0 \u0026\u0026 s!=5) || (s%2==0 \u0026\u0026 s!=2))) \n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\n\nvoid g(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    void f(int k,int \u0026r,long long s=0);\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(l\u003c2)\n            g(k-1,r,inpt); \n        else f(k-1,r,inpt); \n    } \n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(l\u003c2 \u0026\u0026 inpt!=2 \u0026\u0026 inpt!=5)\n            g(k-1,r,inpt); \n        else f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 (s%2!=0 || s==2) \u0026\u0026 (s%5!=0 || s==5))\n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 (s%2!=0 || s==2) \u0026\u0026 (s%5!=0 || s==5))\n    {\n        if(is_p(s)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 (s%2!=0 || s==2) \u0026\u0026 (s%5!=0 || s==5))\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool miillerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool miillerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!miillerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 !((s%5==0 \u0026\u0026 s!=5) || (s%2==0 \u0026\u0026 s!=2))) \n    {\n        if(is_p(s,4)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool miillerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!miillerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 !((s%5==0 \u0026\u0026 s!=5) || (s%2==0 \u0026\u0026 s!=2))) \n    {\n        if(is_p(s,9)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool miillerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!miillerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l \u0026\u0026 !((s%5==0 \u0026\u0026 s!=5) || (s%2==0 \u0026\u0026 s!=2))) \n    {\n        if(is_p(s,1)) {\n            r++;\n        }\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f(p.size()+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.825,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        cout \u003c\u003c s \u003c\u003c endl;\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f(p.size()+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(s%2!=(s==2) \u0026\u0026 s%5!=(s==5))\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f(p.size()+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(s%2!=(s==2) \u0026\u0026 s%5!=(s==5))\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        f(k-1,r,s*10 + b[l]); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.685,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,long long s=0) \n{ \n    if(s\u003er_l) return;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(s%2!=(s==2) \u0026\u0026 s%5!=(s==5))\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    f((int)log10(r_l)+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f(p.size()+1,count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    int a[] = { 2, 3, 5, 7};//int*a=b;\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=a[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f((int)log10(r_l),count);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool millerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!miillerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s,4);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f((int)log10(r_l),count);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool millerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!millerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s,4);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f((int)log10(r_l),count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cctype.h\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\n\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n\n\nbool millerTest(int d, int n) \n{ \n    __int128 a = 2 + rand() % (n - 4); \n    power(a, d, n); \n  \n    if (a == 1  || a == n-1) \n       return true; \n    while (d != n-1) \n    { \n        a = (a * a) % n; \n        d *= 2; \n  \n        if (a == 1)      return false; \n        if (a == n-1)    return true; \n    } \n    return false; \n} \nbool is_p(int n, int k) \n{ \n    if (n \u003c= 1 || n == 4)  return false; \n    if (n \u003c= 3) return true; \n    int d = n - 1; \n    while (d % 2 == 0) \n        d /= 2; \n    for (int i = 0; i \u003c k; i++) \n         if (!millerTest(d, n)) \n              return false; \n  \n    return true; \n} \n\n\n\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s,3);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=0;\n    string p = to_string(r_l);\n    f((int)log10(r_l),count);\n    cout \u003c\u003c count;\n}\n","score":0.3,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(long long s,int k,int \u0026r) \n{ \n    if (k == 0) \n    {\n        if(s\u003e=l_l \u0026\u0026 s\u003c=r_l) \n        {\n            if(is_p(s)) {\n                r++;\n            }\n        }\n        return; \n    } \n    int l=(k==1)?2:0;\n    for (; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(inpt, k-1,r); \n    } \n}\nint main()\n{\n    srand(5);\n    cin \u003e\u003e l_l \u003e\u003er_l;int count=0;count+=(l_l\u003c=2) + (l_l\u003c=5);\n    for(int i=(int)log10(l_l)+1;i\u003c=(int)log10(r_l)+1;)\n        f(0,i++,count);\n    cout \u003c\u003c count;\n}\n","score":0.79,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,5,3,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\nbool is_p(long long n){\n    if(n%6!=1 \u0026\u0026 n%6!=5) return n==3;\n    if(n%2==0) return 0;\n    int a[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 0};//int*a=b;\n    for (int i = 0; i \u003c 9; ++i)\n        if (n % a[i] == 0) return n == a[i];\n    if (n \u003c a[8]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=rand()%(n-4)+2;\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=(l_l\u003c=2);\n    string p = to_string(r_l);\n    f((int)log10(r_l),count);\n    cout \u003c\u003c count;\n}\n","score":0.745,"language":"cpp14"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % b[i] == 0) return n == b[i];\n    if (n \u003c b[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c2; i++) {\n        __int128 x=b[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,int it,__int128 s=0) \n{ \n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(it!=0 \u0026\u0026 it!=2)\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,l,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=(l_l\u003c=2)+(l_l\u003c=5);\n    string p = to_string(r_l);\n    f((int)log10(r_l),count,-1);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % b[i] == 0) return n == b[i];\n    if (n \u003c b[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c1; i++) {\n        __int128 x=b[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,int it,long long s=0) \n{ \n    //cout \u003c\u003c s \u003c\u003c endl;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(it!=0 \u0026\u0026 it!=2)\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,l,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=(l_l\u003c=2)+(l_l\u003c=5);\n    string p = to_string(r_l);\n    f((int)log10(r_l),count,-1);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % b[i] == 0) return n == b[i];\n    if (n \u003c b[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c0; i++) {\n        __int128 x=b[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,int it,long long s=0) \n{ \n    //cout \u003c\u003c s \u003c\u003c endl;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(it!=0 \u0026\u0026 it!=2)\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,l,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=(l_l\u003c=2)+(l_l\u003c=5);\n    string p = to_string(r_l);\n    f((int)log10(r_l),count,-1);\n    cout \u003c\u003c count;\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"#include \u003ciostream\u003e \n#include \u003calgorithm\u003e \n#include \u003ccmath\u003e\n#include \u003cstring\u003e\nusing namespace std;\nlong long l_l,r_l;\nint b[]={2,3,5,7};\nvoid power(__int128\u0026 a,long long b,long long m)\n{\n    __int128 t=1;\n    while(b){\n        if(b\u00261){\n            t=(t*a)%m;\n        }\n        a=(a*a)%m;\n        b\u003e\u003e=1;\n    }\n    a=t%m;\n}\n//miller rabin test\nbool is_p(long long n){\n    for (int i = 0; i \u003c 4; ++i)\n        if (n % b[i] == 0) return n == b[i];\n    if (n \u003c b[3]) return 0;\n    uint64_t t = n - 1;int s = 0;\n    while (~t \u0026 1)\n        t \u003e\u003e= 1, ++s;\n    for (int i=0;i\u003c4; i++) {\n        __int128 x=b[i];\n        power(x, t, n);\n        if (x == 1) continue;\n        bool p = 0;\n        for (int j = 0; j \u003c s \u0026\u0026 !p; ++j) {\n            if (x == n - 1) p = 1;\n            power(x, 2, n);\n        }\n        if (!p) return 0;\n    }\n    return 1;\n}\nvoid f(int k,int \u0026r,int it,long long s=0) \n{ \n    //cout \u003c\u003c s \u003c\u003c endl;\n    if(s\u003e=l_l \u0026\u0026 s\u003c=r_l)\n    {\n        if(it!=0 \u0026\u0026 it!=2)\n            r+=is_p(s);\n    }\n    for (int l=0; l \u003c 4; l++) \n    { \n        long long inpt=s*10 + b[l];\n        if(inpt\u003er_l) return;\n        f(k-1,r,l,inpt); \n    } \n}\nint main()\n{\n    cin \u003e\u003e l_l \u003e\u003e r_l;int count=(l_l\u003c=2)+(l_l\u003c=5);\n    string p = to_string(r_l);\n    f((int)log10(r_l),count,-1);\n    cout \u003c\u003c count;\n}\n","score":0.755,"language":"cpp"},{"contest":"Master","challenge":"Megaprime Numbers","code":"import itertools,random \nl,r=input().split()\nB = [ '2', '3', '5','7' ]\nc=0\ndef power(x, y, p): \n    res = 1;  \n    x = x % p;  \n    while (y \u003e 0): \n        if (y \u0026 1): \n            res = (res * x) % p; \n        y = y\u003e\u003e1;\n        x = (x * x) % p; \n    return res; \ndef millerTest(d, n): \n    a = 2 + random.randint(1, n - 4); \n    x = power(a, d, n); \n    if (x == 1 or x == n - 1): \n        return True\n    while (d != n - 1): \n        x = (x * x) % n; \n        d *= 2; \n        if (x == 1): \n            return False; \n        if (x == n - 1): \n            return True; \n    return False \ndef isPrime( n, k): \n    if (n \u003c= 1 or n == 4): \n        return False; \n    if (n \u003c= 3): \n        return True;  \n    d = n - 1; \n    while (d % 2 == 0): \n        d //= 2; \n    for i in range(k): \n        if (millerTest(d, n) == False): \n            return False; \n  \n    return True; \n\ndef candidates(k):\n    global c\n    for p in itertools.product(B,repeat = k):\n        n=int(''.join(p))\n        if isPrime(n,4):\n            c+=1\n\nfor i in range(len(l),len(r)):\n    candidates(i)\nprint(c)\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"import itertools,random \nl,r=input().split()\nB = [ '2', '3', '5','7' ]\nc=0\ndef power(x, y, p): \n    res = 1;  \n    x = x % p;  \n    while (y \u003e 0): \n        if (y \u0026 1): \n            res = (res * x) % p; \n        y = y\u003e\u003e1;\n        x = (x * x) % p; \n    return res; \ndef millerTest(d, n): \n    a = 2 + random.randint(1, n - 4); \n    x = power(a, d, n); \n    if (x == 1 or x == n - 1): \n        return True\n    while (d != n - 1): \n        x = (x * x) % n; \n        d *= 2; \n        if (x == 1): \n            return False; \n        if (x == n - 1): \n            return True; \n    return False \ndef isPrime( n, k): \n    if (n \u003c= 1 or n == 4): \n        return False; \n    if (n \u003c= 3): \n        return True;  \n    d = n - 1; \n    while (d % 2 == 0): \n        d //= 2; \n    for i in range(k): \n        if (millerTest(d, n) == False): \n            return False; \n  \n    return True; \n\ndef candidates(k):\n    global c\n    for p in itertools.product(B,repeat = k):\n        n=int(''.join(p))\n        if n\u003e=int(l) and n\u003c=int(r):\n            if isPrime(n,4):\n                c+=1\n\nfor i in range(len(l),len(r)):\n    candidates(i)\nprint(c)\n","score":0.02,"language":"python3"},{"contest":"Master","challenge":"Megaprime Numbers","code":"import itertools,random \nl,r=input().split()\nB = [ '2', '3', '5','7' ]\nc=0\ndef power(x, y, p): \n    res = 1;  \n    x = x % p;  \n    while (y \u003e 0): \n        if (y \u0026 1): \n            res = (res * x) % p; \n        y = y\u003e\u003e1;\n        x = (x * x) % p; \n    return res; \ndef millerTest(d, n): \n    a = 2 + random.randint(1, n - 4); \n    x = power(a, d, n); \n    if (x == 1 or x == n - 1): \n        return True\n    while (d != n - 1): \n        x = (x * x) % n; \n        d *= 2; \n        if (x == 1): \n            return False; \n        if (x == n - 1): \n            return True; \n    return False \ndef isPrime( n, k): \n    if (n \u003c= 1 or n == 4): \n        return False; \n    if (n \u003c= 3): \n        return True;  \n    d = n - 1; \n    while (d % 2 == 0): \n        d //= 2; \n    for i in range(k): \n        if (millerTest(d, n) == False): \n            return False; \n  \n    return True; \n\ndef candidates(k):\n    global c\n    for p in itertools.product(B,repeat = k):\n        n=int(''.join(p))\n        if n\u003e=int(l) and n\u003c=int(r):\n            if isPrime(n,4):\n                c+=1\n\nfor i in range(len(l),len(r)+1):\n    candidates(i)\nprint(c)\n","score":0.335,"language":"python3"},{"contest":"Master","challenge":"Forming a Magic Square","code":"#include \u003cbits/stdc++.h\u003e\n#include \u003ccmath\u003e\n\nusing namespace std;\nint main()\n{\n    int total = 0;\n    for(int i=0;i\u003c3;i++){\n        int n=15;\n        for(int j=0;j\u003c3;j++){\n            int a;cin \u003e\u003e a;\n            n-=a;\n        }\n        total+=abs(n);\n    }\n    cout \u003c\u003c total \u003c\u003c endl;\n}\n","score":0.142857142857,"language":"cpp"},{"contest":"Master","challenge":"Forming a Magic Square","code":"Mages = [[8,1,6,3,5,7,4,9,2],[6,1,8,7,5,3,2,9,4],[4,9,2,3,5,7,8,1,6],[2,9,4,7,5,3,6,1,8],[8,3,4,1,5,9,6,7,2],[4,3,8,9,5,1,2,7,6],[6,7,2,1,5,9,8,3,4],[2,7,6,9,5,1,4,3,8]]\nharry=[]\nfor _ in range(3):\n    wand=[int(i) for i in input().split()]\n    for i in wand:\n        harry.append(i)\nTrueMana=float('inf')\nfor mage in Mages:\n    Mana=0\n    for i in range(len(mage)):\n        Mana+=abs(mage[i]-harry[i])\n    TrueMana=min(Mana,TrueMana)\nprint(TrueMana)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid stoneDivision(vector\u003clong\u003e s,vector\u003clong\u003e\u0026 piles,int\u0026 r) {\n    for(int k=0;k\u003cpiles.size();k++){\n        for( auto i:s){\n            if(piles[k]%i==0 \u0026\u0026 i!=piles[k]){\n                r++;\n                piles[k]/=i;\n                for(int j=1;j\u003ci;j++){\n                    piles.push_back(piles[k]);\n                }\n                stoneDivision(s,piles,r);\n                return;\n            }\n        }\n    }\n}\nbool isp(long n){\n    if(n%2==0) return n==2;\n    for(long i=3;i\u003c=sqrt(n);i+=2){\n        if(n%i==0) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e piles;\n        piles.push_back(n);\n        vector\u003clong\u003e p;\n        vector\u003clong\u003e c;\n        int r=0;\n        for(int i=0;i\u003cm;i++){\n            long k;cin \u003e\u003e k;\n            if(isp(k)) p.push_back(k);\n            else c.push_back(k);\n        }\n        sort(c.begin(),c.end());reverse(c.begin(),c.end());\n        sort(p.begin(),p.end());reverse(p.begin(),p.end());\n        stoneDivision(p,piles,r);\n        stoneDivision(c,piles,r);\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nvoid stoneDivision(vector\u003clong\u003e s,vector\u003clong\u003e\u0026 piles,int\u0026 r) {\n    for(int k=0;k\u003cpiles.size();k++){\n        for( auto i:s){\n            if(piles[k]%i==0 \u0026\u0026 i!=piles[k] \u0026\u0026 find(s.begin(),s.end(),piles[k]/i)!=s.end() ){\n                r++;\n                piles[k]/=i;\n                for(int j=1;j\u003ci;j++){\n                    piles.push_back(piles[k]);\n                }\n                stoneDivision(s,piles,r);\n                return;\n            }\n        }\n    }\n}\nbool isp(long n){\n    if(n%2==0) return n==2;\n    for(long i=3;i\u003c=sqrt(n);i+=2){\n        if(n%i==0) return 0;\n    }\n    return 1;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e piles;\n        piles.push_back(n);\n        vector\u003clong\u003e p;\n        vector\u003clong\u003e c;\n        int r=0;\n        for(int i=0;i\u003cm;i++){\n            long k;cin \u003e\u003e k;\n            if(isp(k)) p.push_back(k);\n            else c.push_back(k);\n        }\n        sort(c.begin(),c.end());reverse(c.begin(),c.end());\n        sort(p.begin(),p.end());reverse(p.begin(),p.end());\n        for(auto i:c) p.push_back(i);\n        stoneDivision(p,piles,r);\n        cout \u003c\u003c r \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    for(long i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 find(s.begin(),s.end(),n/s[i])!=s.end() \u0026\u0026 n!=s[i]){\n            return 1+s[i]*stoneDivision(n/s[i],s);\n        }\n    } \n   return 0;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    cout \u003c\u003c n \u003c\u003c endl;\n    for(long i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 find(s.begin(),s.end(),n/s[i])!=s.end() \u0026\u0026 n!=s[i]){\n            return 1+s[i]*stoneDivision(n/s[i],s);\n        }\n    } \n   return 0;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        cout \u003c\u003c \"resutl : \" \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    for(long i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 find(s.begin(),s.end(),n/s[i])!=s.end() \u0026\u0026 n!=s[i]){\n            return 1+s[i]*stoneDivision(n/s[i],s);\n        }\n    } \n   return 0;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        if(m==1) cout \u003c\u003c 1 \u003c\u003c endl;\n        else cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    for(long i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 find(s.begin(),s.end(),n/s[i])!=s.end()  \u0026\u0026 n!=s[i]){\n            return 1+s[i]*stoneDivision(n/s[i],s);\n        }\n    } \n   return 0;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end());\n        if(m==1) cout \u003c\u003c 1 \u003c\u003c endl;\n        else cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 find(s.begin(),s.end(),n/i)!=s.end()  \u0026\u0026 n!=i){\n            return 1+i*stoneDivision(n/i,s);\n        }\n    } \n   return 0;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end());\n        if(m==1) cout \u003c\u003c 1 \u003c\u003c endl;\n        else cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 find(s.begin(),s.end(),n/i)!=s.end()  \u0026\u0026 n!=i){\n            result = result\u003c1+i*stoneDivision(n/i,s)?1+i*stoneDivision(n/i,s):result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end());\n        if(m==1) cout \u003c\u003c 1 \u003c\u003c endl;\n        else cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 find(s.begin(),s.end(),n/i)!=s.end()  \u0026\u0026 n!=i){\n            result = result\u003c1+i*stoneDivision(n/i,s)?1+i*stoneDivision(n/i,s):result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 n!=i){\n            result = result\u003c1+i*stoneDivision(n/i,s)?1+i*stoneDivision(n/i,s):result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 n!=i){\n            result = result\u003c1+i*stoneDivision(n/i,s)?1+i*stoneDivision(n/i,s):result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    //\u0026\u0026 find(s.begin(),s.end(),n/i)!=s.end()\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nlong stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(auto i:s){\n        if(n%i==0 \u0026\u0026 n!=i){\n            result = result\u003c1+i*stoneDivision(n/i,s)?1+i*stoneDivision(n/i,s):result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    //\u0026\u0026 find(s.begin(),s.end(),n/i)!=s.end()\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(long i:s){\n        if(n%i==0 \u0026\u0026 n!=i \u0026\u0026 n/i!=n){\n            long p = 1+(n/i)*stoneDivision(i,s);\n            result = result\u003cp?p:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(long i:s){\n        long p=0;\n        if(n%i==0 \u0026\u0026 n!=i \u0026\u0026 n/i!=n){\n            p = 1+(n/i)*stoneDivision(i,s);\n            result = result\u003cp?p:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        sort(c.begin(), c.end());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(long i:s){\n        if(n%i==0 \u0026\u0026 n!=i){\n            long p = 1+(n/i)*stoneDivision(i,s);\n            result = result\u003cp?p:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        sort(c.begin(), c.end());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cbits/stdc++.h\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    int result=0;\n    for(long i:s){\n        if(n%i==0 \u0026\u0026 n!=i){\n            long p = 1+(n/i)*stoneDivision(i,s);\n            result = result\u003cp?p:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c;\n        for(int i=0;i\u003cm;i++){\n            int k;cin \u003e\u003e k;c.push_back(k);\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\nusing namespace std;\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            long p = 1+(n/s[i])*stoneDivision(s[i],s);\n            result = result\u003cp?p:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.333333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            pair\u003clong,long\u003e b = make_pair(n,s[i]);\n            if(m[b]) {\n                result=m[b];\n                continue;\n            }\n            long p = 1+(n/s[i])*stoneDivision(s[i],s);\n            m[b] = result\u003cp?p:result;\n            result=m[b];\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.033333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            pair\u003clong,long\u003e b = make_pair(n,s[i]);\n            if(m[b]) {\n                result=result\u003cm[b]?m[b]:result;\n                continue;\n            }\n            long p = 1+(n/s[i])*stoneDivision(s[i],s);\n            m[b] = result\u003cp?p:result;\n            result=m[b];\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            pair\u003clong,long\u003e b = make_pair(n,s[i]);\n            if(m[b]) {\n                result=result\u003cm[b]?m[b]:result;\n                continue;\n            }\n            long p = 1+(n/s[i])*stoneDivision(s[i],s);\n            result = result\u003cp?p:result;\n            m[b]=result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.066666666667,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nmap\u003cpair\u003clong,long\u003e,long\u003e m;\nlong long stoneDivision(long n,vector\u003clong\u003e s) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            pair\u003clong,long\u003e b = make_pair(n,s[i]);\n            if(m[b]) {\n                result=result\u003cm[b]?m[b]:result;\n                continue;\n            }\n            m[b] = 1+(n/s[i])*stoneDivision(s[i],s);\n            result = result\u003cm[b]?m[b]:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c) \u003c\u003c endl;\n    }\n}\n","score":0.733333333333,"language":"cpp"},{"contest":"Master","challenge":" Stone Division, Revisited","code":"#include \u003calgorithm\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nlong long stoneDivision(long n,vector\u003clong\u003e s,map\u003cpair\u003clong,long\u003e,long\u003e\u0026 m) {\n    long result=0;\n    for(int i=0;i\u003cs.size();i++){\n        if(n%s[i]==0 \u0026\u0026 n!=s[i]){\n            pair\u003clong,long\u003e b = make_pair(n,s[i]);\n            if(m[b]) {\n                result=result\u003cm[b]?m[b]:result;\n                continue;\n            }\n            m[b] = 1+(n/s[i])*stoneDivision(s[i],s,m);\n            result = result\u003cm[b]?m[b]:result;\n        }\n    } \n   return result;\n}\nint main()\n{\n    int q;\n    cin \u003e\u003e q;\n    while(q--){\n        long n,m;\n        cin \u003e\u003e n \u003e\u003e m;\n        vector\u003clong\u003e c(m);\n        map\u003cpair\u003clong,long\u003e,long\u003e mp;\n        for(int i=0;i\u003cm;i++){\n            cin \u003e\u003e c[i];\n        }\n        sort(c.begin(),c.end(),greater\u003clong\u003e());\n        cout \u003c\u003c stoneDivision(n,c,mp) \u003c\u003c endl;\n    }\n}\n","score":1.0,"language":"cpp"},{"contest":"Master","challenge":"Recording Episodes","code":"#include \u003cbits/stdc++.h\u003e\n\nusing namespace std;\n\nstruct air{\n    int s;\n    int f;\n    int v;\n    vector\u003cair*\u003e neighbors;\n};\nbool showOverlap(air* s1,air* s2){\n     return !(s2-\u003es\u003es1-\u003ef || s2-\u003ef\u003cs1-\u003es);\n}\n\nvoid colorGraph(vector\u003cint\u003e\u0026 result,map\u003cint,bool\u003e isp,air* n){\n    if(!isp[n-\u003ev]){\n        isp[n-\u003ev]=true;\n        vector\u003cint\u003e dR=result;\n        for(auto i:n-\u003eneighbors){\n            dR.push_back(i-\u003ev);\n            colorGraph(dR,isp,i);\n            if(dR.size()\u003eresult.size()){\n                result=dR;\n            }\n            dR.pop_back();\n        }\n    }\n}\n\nint main(){\n    int t;cin \u003e\u003e t;\n    while(t--){\n        int n;cin \u003e\u003e n;\n        vector\u003cair*\u003e shows;\n        vector\u003cint\u003e recorded;\n        for(int i=1;i\u003c=n;i++){\n            air* show = new air();\n            air* repShow = new air();\n            cin \u003e\u003e show-\u003es \u003e\u003e show-\u003ef;\n            cin \u003e\u003e repShow-\u003es \u003e\u003e repShow-\u003ef;\n            show-\u003ev=repShow-\u003ev=i;\n            shows.push_back(show);\n            shows.push_back(repShow);\n        }\n        for(int i=0;i\u003cshows.size();i++){\n            for(int j=0;j\u003cshows.size();j++){\n                if(i!=j){\n                    if(!showOverlap(shows[i],shows[j])){\n                        shows[i]-\u003eneighbors.push_back(shows[j]);\n                    }\n                }\n            }\n        }\n        vector\u003cint\u003e dR=recorded;\n        for(auto s:shows){\n            map\u003cint,bool\u003e processed;\n            dR.push_back(s-\u003ev);\n            colorGraph(dR,processed,s);\n            if(dR.size()\u003erecorded.size()){\n                recorded=dR;\n            }\n        }\n        for(auto i:recorded) cout \u003c\u003c i \u003c\u003c \" \";\n        cout \u003c\u003c endl;\n    }\n}\n","score":0.0,"language":"cpp"},{"contest":"Master","challenge":"Arithmetic Expressions","code":"\nm = int(input())\nnumbers = [int(i) for i in input().split()]\nop=['*',\"-\",\"+\"]\ndef function(result,k,n):\n    if(k==len(numbers)):\n        if(n%101==0):\n            print(result)\n        return\n    else:\n        for i in range(len(op)):\n            if i== 0:\n                function(result + op[i] + str(numbers[k]),k +1,n*numbers[k])\n            elif i == 1:\n                function(result + op[i] + str(numbers[k]),k +1,n-numbers[k])\n            elif i== 2:\n                function(result + op[i] +  str(numbers[k]),k +1,n+numbers[k])\nfunction(str(numbers[0]),1,numbers[0])\n","score":0.1905,"language":"python3"},{"contest":"Master","challenge":"Arithmetic Expressions","code":"\nm = int(input())\nnumbers = [int(i) for i in input().split()]\nop=['+',\"-\",\"*\"]\ndef function(result,k,n):\n    if(k==len(numbers)):\n        if(n%101==0):\n            print(result)\n            return\n    else:\n        for i in range(len(op)):\n            if i== 0:\n                function(result + op[i] + str(numbers[k]),k +1,n+numbers[k])\n            elif i == 1:\n                function(result + op[i] + str(numbers[k]),k +1,n-numbers[k])\n            elif i== 2:\n                function(result + op[i] +  str(numbers[k]),k +1,n*numbers[k])\nfunction(str(numbers[0]),1,numbers[0])\n","score":0.1429,"language":"python3"},{"contest":"Master","challenge":"Arithmetic Expressions","code":"\nm = int(input())\nnumbers = [int(i) for i in input().split()]\nop=['+',\"-\",\"*\"]\ndef function(result,k,n):\n    if(k==len(numbers)):\n        if(n%101==0):\n            print(result)\n        return\n    else:\n        lim = k == len(numbers) -1 and len(op) -1 or len(op)\n        for i in range(lim):\n            if i== 0:\n                function(result + op[i] + str(numbers[k]),k +1,n+numbers[k])\n            elif i == 1:\n                function(result + op[i] + str(numbers[k]),k +1,n-numbers[k])\n            elif i== 2:\n                function(result + op[i] +  str(numbers[k]),k +1,n*numbers[k])\nfunction(str(numbers[0]),1,numbers[0])\n","score":0.1429,"language":"python3"},{"contest":"Master","challenge":"Arithmetic Expressions","code":"\nm = int(input())\nnumbers = [int(i) for i in input().split()]\nop=['+',\"-\",\"*\"]\ndef function(result,k,n):\n        if(k==len(numbers)):\n            if(n%101==0):\n                print(result)\n        else:\n            lim = k == len(numbers) -1 and len(op) -1 or len(op)\n            for i in range(lim):\n                if i== 0:\n                    function(result + op[i] + str(numbers[k]),k +1,n+numbers[k])\n                elif i == 1:\n                    function(result + op[i] + str(numbers[k]),k +1,n-numbers[k])\n                elif i== 2:\n                    function(result + op[i] +  str(numbers[k]),k +1,n*numbers[k])\nfunction(str(numbers[0]),1,numbers[0])\n","score":0.1429,"language":"python3"},{"contest":"Master","challenge":"Marc's Cakewalk","code":"n=int(input())\ncal=[int(i) for i in input().split()]\ncal.sort(reverse=True)\nlength = 0\nfor i in range(len(cal)):\n    length+=2**i*cal[i]\nprint(length)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Solve Me First FP","code":"open System\nlet add x y = x + y\n[\u003cEntryPoint\u003e]\nlet main argv = \n    let a = Console.ReadLine() |\u003e int\n    let b = Console.ReadLine() |\u003e int\n    let c = add a b\n    printfn \"%d\" c\n    0 // return an integer exit code\n","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Hello World","code":"open System\nlet great = printfn \"Hello World\"\n[\u003cEntryPoint\u003e]\nlet main argv = \n    great\n    0 // return an integer exit code","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Hello World","code":"open System\nlet great = printfn \"Hello World\"\n[\u003cEntryPoint\u003e]\nlet main argv = \n    great\n    0 // return an integer exit code","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Hello World N Times","code":"open System\nlet great greeting = printfn \"%s\" greeting\nlet loop n = for int i = 0 to n - 1  do great \"Hello World\"\nlet getInput = Console.ReadLine()\n[\u003cEntryPoint\u003e]\nlet main argv = \n    let n = getInput |\u003eint\n    loop n\n    0 // return an integer exit code\n","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"List Replication","code":"open System\nlet write x = printfn \"%s\" x\nlet repeat n x = for int i = 0 to n - 1 do write x\nlet logic n lst = for i in lst do repeat n i\n//input logic\nlet getInput = Console.ReadLine()\nlet readLines = Seq.initInfinite (fun _ -\u003e Console.ReadLine()) |\u003e Seq.takeWhile (String.IsNullOrWhiteSpace \u003e\u003e not) |\u003e Seq.toList \n[\u003cEntryPoint\u003e]\nlet main argv = \n    let n = getInput |\u003e int\n    let l = readLines\n    logic n l\n    0 // return an integer exit code","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Filter Array","code":"open System\n//input logic\nlet getInput = Console.ReadLine()\nlet readLines = Seq.initInfinite (fun _ -\u003e Console.ReadLine()) |\u003e Seq.takeWhile (String.IsNullOrWhiteSpace \u003e\u003e not)\n[\u003cEntryPoint\u003e]\nlet main argv = \n    let n = getInput |\u003e int\n    let filtr limit = readLines |\u003e Seq.map int |\u003e Seq.filter ((\u003e)limit)\n    filtr n |\u003e Seq.iter(printfn \"%A\")\n    0 // return an integer exit code","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Filter Positions in a List","code":"open System\n//input logic\nlet readLines = Seq.initInfinite (fun _ -\u003e Console.ReadLine() ) |\u003e Seq.takeWhile (String.IsNullOrWhiteSpace \u003e\u003e not)\nlet indexSeq sequence = sequence |\u003e Seq.indexed\nlet isOddIndexed (idx,item) = idx % 2 \u003c\u003e 0\nlet printItem (idx,item) = printfn \"%A\" item\n[\u003cEntryPoint\u003e]\nlet main argv = \n    let result = readLines |\u003e Seq.map int |\u003e indexSeq |\u003e Seq.filter isOddIndexed |\u003e Seq.iter(printItem)\n    0 // return an integer exit code","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Array Of N Elements","code":"\n\nlet f n = [| for i in 1 .. n -\u003e \"A\" |]\n\n","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Sum of Odd Elements","code":"open System\n\n(*USER CODE BEGIN*)\nlet add a b = a + b\nlet sum arr = \n    let mutable totalsum = 0\n    for i in arr do\n        totalsum \u003c- add totalsum i\n    totalsum\nlet isOdd n = n % 2 \u003c\u003e 0\nlet f arr = sum(List.filter (isOdd) arr)\n(*USER CODE END*)\n\nlet read_and_parse()=\n    let mutable arr = []\n    let mutable buff = Console.ReadLine()\n    while buff \u003c\u003e null do\n            arr \u003c- Int32.Parse(buff)::arr\n            buff \u003c- Console.ReadLine()\n    arr\n\nlet main =    \n    let arr = read_and_parse()\n    printf \"%A\" \u003c| f arr","score":1.0,"language":"fsharp"},{"contest":"Master","challenge":"Update List","code":"let isNegative n = n \u003c 0\nlet abs n = \n    if isNegative n then \n        - n\n    else n\nlet print n = printfn \"%d\" n\n\n//----------------DON'T MODIFY---------------\n\nlet input = \n    stdin.ReadToEnd().Split '\\n' \n    |\u003e Array.map(fun x -\u003e int(x)) \n    |\u003e Array.map(fun x -\u003e abs(x))\n    |\u003e Array.iter(print )\n","score":1.0,"language":"fsharp"}],"teams":[],"contest_participations":[{"jobs_consent":null,"contest":"Master"},{"jobs_consent":null,"contest":"Master"},{"jobs_consent":null,"contest":"alpha"},{"jobs_consent":null,"contest":"Goldman Sachs Women's CodeSprint"},{"jobs_consent":null,"contest":"OpenBracket Delaware - Online Trials"},{"jobs_consent":null,"contest":"HourRank 31"},{"jobs_consent":null,"contest":"ProjectEuler+"},{"jobs_consent":null,"contest":"Hack The Interview II - U.S."}],"forum_comments":[{"contest":"Master","challenge":"Queen's Attack II","description":"will the following algorithm work ? \n1- calculate all the possible moves using O(1) formulation \n2-loop through abstacles and determine whether they're true obstacles or false (and if true calculate how much cells they hide from the queen)\nwhenever we find a closer obstacle than the previous one we we remember it in memo, and update the num of cells hidden\n3-substract the number of cells hidden from number of possible moves \nsince the only loop that exists is the one looping through the obstacles this algo might be efficient, but i'm not pretty sure about the O(1) formulation  of possible moves (the following \nint basic=min(min(n-r_q,r_q-1),min(n-c_q,c_q-1))*2+1;\nint total=(basic-1)*4+(n-basic)*3;\nwhere basic is the number of moves possible in a perfect square and total is the number of moves in a square of arbitrary lenght\n","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Even Odd Query","description":"not hard, actually trivial when you think about it :`(v[x-1]\u00261)?\"Odd\\n\":x!=y?(v[x]?\"Even\\n\":\"Odd\\n\"):\"Even\\n\"`\nthis is my solution","upvotes":0,"downvotes":0},{"contest":"Master","challenge":"Birthday Triplets","description":"i thought that was f4 factorial ; (","upvotes":0,"downvotes":0}],"all_ratings":[],"contest_medals":[],"survey_results":[],"messages_sent":[{"receiver":"salah_ham","message":{"id":2930858,"sender_id":6922268,"receiver_id":7860324,"message":"holy shit man this actually works","message_thread_id":1757766,"created_at":"2020-01-16T23:01:34.000Z","updated_at":"2020-01-17T11:16:27.000Z","status":1}},{"receiver":"salah_ham","message":{"id":2930861,"sender_id":6922268,"receiver_id":7860324,"message":"UI better than messenger ","message_thread_id":1757766,"created_at":"2020-01-16T23:01:49.000Z","updated_at":"2020-01-17T11:16:27.000Z","status":1}},{"receiver":"salah_ham","message":{"id":2936113,"sender_id":6922268,"receiver_id":7860324,"message":"okey lol","message_thread_id":1757766,"created_at":"2020-01-17T13:26:06.000Z","updated_at":"2020-01-19T16:54:38.000Z","status":1}},{"receiver":"xersky","message":{"id":3205939,"sender_id":6922268,"receiver_id":7784952,"message":"double getvol(triangle t) {\n  double p = (t.a + t.b + t.c) / 2.0;\n  return sqrt(p * (p - t.a) * (p - t.b) * (p - t.c));\n}\nvoid swap(triangle* t1,triangle* t2){\n    triangle temp= *t1;*t1=*t2;*t2=temp;\n}\nvoid sort_by_area(triangle* tr, int n) {\n\tfor(int i=0;i\u0026lt;n-1;i++){\n       int min_loc=i; \n       int j;\n       for(j=i+1;j\u0026lt;n;j++){\n           if(getvol(tr[min_loc])\u0026gt;=getvol(tr[j])) {\n               min_loc=j;\n           }\n       }\n       swap(tr+i,tr+min_loc);\n    }\n}","message_thread_id":1961869,"created_at":"2020-02-27T13:21:48.000Z","updated_at":"2020-02-27T13:22:37.000Z","status":1}},{"receiver":"silverest12","message":{"id":3290161,"sender_id":6922268,"receiver_id":7016920,"message":"saw u doing it i was like let me test it","message_thread_id":1981684,"created_at":"2020-08-13T22:35:51.000Z","updated_at":"2020-08-14T07:40:58.000Z","status":1}},{"receiver":"silverest12","message":{"id":3290162,"sender_id":6922268,"receiver_id":7016920,"message":"ngl didn\u0026#39;t like it bruh wtf","message_thread_id":1981684,"created_at":"2020-08-13T22:36:06.000Z","updated_at":"2020-08-14T07:40:58.000Z","status":1}}],"run_codes":[],"contests_created":[],"job_applications":[],"skills_test":[{"test":"HackerRank Python (Basic) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"HackerRank Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"HackerRank Problem Solving (Intermediate) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"HackerRank Skills Verification Test","certificates":"[\"Problem Solving(Basic)\"]","status":"Test Passed"},{"test":"HackerRank Java (Intermediate) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"Hackerank C++ (Basic) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"Hackerank SQL (Basic) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"Hackerank C (Basic) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"},{"test":"Hackerank C (Intermediate) Skills Verification Test","certificates":"[\"Java(Basic)\"]","status":"Test Passed"}]}